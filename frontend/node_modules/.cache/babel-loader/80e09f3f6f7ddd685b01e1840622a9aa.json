{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  FocusLock: () => FocusLock\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/focus-lock.tsx\nvar import_react_focus_lock = __toESM(require(\"react-focus-lock\"));\nvar import_dom_utils = require(\"@chakra-ui/dom-utils\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar _a;\nvar FocusTrap = (_a = import_react_focus_lock.default.default) != null ? _a : import_react_focus_lock.default;\nvar FocusLock = props => {\n  const {\n    initialFocusRef,\n    finalFocusRef,\n    contentRef,\n    restoreFocus,\n    children,\n    isDisabled,\n    autoFocus,\n    persistentFocus,\n    lockFocusAcrossFrames\n  } = props;\n  const onActivation = (0, import_react.useCallback)(() => {\n    if (initialFocusRef == null ? void 0 : initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    } else if (contentRef == null ? void 0 : contentRef.current) {\n      const focusables = (0, import_dom_utils.getAllFocusable)(contentRef.current);\n      if (focusables.length === 0) {\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = contentRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }\n  }, [initialFocusRef, contentRef]);\n  const onDeactivation = (0, import_react.useCallback)(() => {\n    var _a2;\n    (_a2 = finalFocusRef == null ? void 0 : finalFocusRef.current) == null ? void 0 : _a2.focus();\n  }, [finalFocusRef]);\n  const returnFocus = restoreFocus && !finalFocusRef;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(FocusTrap, {\n    crossFrame: lockFocusAcrossFrames,\n    persistentFocus,\n    autoFocus,\n    disabled: isDisabled,\n    onActivation,\n    onDeactivation,\n    returnFocus,\n    children\n  });\n};\nFocusLock.displayName = \"FocusLock\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  FocusLock\n});","map":{"version":3,"names":["src_exports","__export","FocusLock","module","exports","__toCommonJS","import_react_focus_lock","__toESM","require","import_dom_utils","import_react","import_jsx_runtime","_a","FocusTrap","default","props","initialFocusRef","finalFocusRef","contentRef","restoreFocus","children","isDisabled","autoFocus","persistentFocus","lockFocusAcrossFrames","onActivation","useCallback","current","focus","focusables","getAllFocusable","length","requestAnimationFrame","_a2","onDeactivation","returnFocus","jsx","crossFrame","disabled","displayName"],"sources":["../src/index.ts","../src/focus-lock.tsx"],"sourcesContent":["export { FocusLock } from \"./focus-lock\"\nexport type { FocusLockProps } from \"./focus-lock\"\n","import ReactFocusLock from \"react-focus-lock\"\nimport { getAllFocusable } from \"@chakra-ui/dom-utils\"\nimport { useCallback } from \"react\"\n\nconst FocusTrap: typeof ReactFocusLock =\n  (ReactFocusLock as any).default ?? ReactFocusLock\n\ninterface FocusableElement {\n  focus(options?: FocusOptions): void\n}\nexport interface FocusLockProps {\n  /**\n   * `ref` of the element to receive focus initially\n   */\n  initialFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * `ref` of the element to return focus to when `FocusLock`\n   * unmounts\n   */\n  finalFocusRef?: React.RefObject<FocusableElement>\n  /**\n   * The `ref` of the wrapper for which the focus-lock wraps\n   */\n  contentRef?: React.RefObject<HTMLElement>\n  /**\n   * If `true`, focus will be restored to the element that\n   * triggered the `FocusLock` once it unmounts\n   *\n   * @default false\n   */\n  restoreFocus?: boolean\n  /**\n   * The component to render\n   */\n  children: React.ReactNode\n  /**\n   * If `true`, focus trapping will be disabled\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the first focusable element within the `children`\n   * will auto-focused once `FocusLock` mounts\n   *\n   * @default false\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, disables text selections inside, and outside focus lock\n   *\n   * @default false\n   */\n  persistentFocus?: boolean\n  /**\n   * Enables aggressive focus capturing within iframes.\n   * - If `true`: keep focus in the lock, no matter where lock is active\n   * - If `false`:  allows focus to move outside of iframe\n   *\n   * @default false\n   */\n  lockFocusAcrossFrames?: boolean\n}\n\nexport const FocusLock: React.FC<FocusLockProps> = (props) => {\n  const {\n    initialFocusRef,\n    finalFocusRef,\n    contentRef,\n    restoreFocus,\n    children,\n    isDisabled,\n    autoFocus,\n    persistentFocus,\n    lockFocusAcrossFrames,\n  } = props\n\n  const onActivation = useCallback(() => {\n    if (initialFocusRef?.current) {\n      initialFocusRef.current.focus()\n    } else if (contentRef?.current) {\n      const focusables = getAllFocusable(contentRef.current)\n      if (focusables.length === 0) {\n        requestAnimationFrame(() => {\n          contentRef.current?.focus()\n        })\n      }\n    }\n  }, [initialFocusRef, contentRef])\n\n  const onDeactivation = useCallback(() => {\n    finalFocusRef?.current?.focus()\n  }, [finalFocusRef])\n\n  const returnFocus = restoreFocus && !finalFocusRef\n\n  return (\n    <FocusTrap\n      crossFrame={lockFocusAcrossFrames}\n      persistentFocus={persistentFocus}\n      autoFocus={autoFocus}\n      disabled={isDisabled}\n      onActivation={onActivation}\n      onDeactivation={onDeactivation}\n      returnFocus={returnFocus}\n    >\n      {children}\n    </FocusTrap>\n  )\n}\n\nFocusLock.displayName = \"FocusLock\"\n\nexport default FocusLock\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,SAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,WAAA;;;ACAA,IAAAM,uBAAA,GAA2BC,OAAA,CAAAC,OAAA;AAC3B,IAAAC,gBAAA,GAAgCD,OAAA;AAChC,IAAAE,YAAA,GAA4BF,OAAA;AA+FxB,IAAAG,kBAAA,GAAAH,OAAA;AAjGJ,IAAAI,EAAA;AAIA,IAAMC,SAAA,IACHD,EAAA,GAAAN,uBAAA,CAAAQ,OAAA,CAAuBA,OAAA,KAAvB,OAAAF,EAAA,GAAkCN,uBAAA,CAAAQ,OAAA;AA2D9B,IAAMZ,SAAA,GAAuCa,KAAA,IAAU;EAC5D,MAAM;IACJC,eAAA;IACAC,aAAA;IACAC,UAAA;IACAC,YAAA;IACAC,QAAA;IACAC,UAAA;IACAC,SAAA;IACAC,eAAA;IACAC;EACF,IAAIT,KAAA;EAEJ,MAAMU,YAAA,OAAef,YAAA,CAAAgB,WAAA,EAAY,MAAM;IACrC,IAAIV,eAAA,oBAAAA,eAAA,CAAiBW,OAAA,EAAS;MAC5BX,eAAA,CAAgBW,OAAA,CAAQC,KAAA,CAAM;IAChC,WAAWV,UAAA,oBAAAA,UAAA,CAAYS,OAAA,EAAS;MAC9B,MAAME,UAAA,OAAapB,gBAAA,CAAAqB,eAAA,EAAgBZ,UAAA,CAAWS,OAAO;MACrD,IAAIE,UAAA,CAAWE,MAAA,KAAW,GAAG;QAC3BC,qBAAA,CAAsB,MAAM;UAnFpC,IAAAC,GAAA;UAoFU,CAAAA,GAAA,GAAAf,UAAA,CAAWS,OAAA,KAAX,gBAAAM,GAAA,CAAoBL,KAAA;QACtB,CAAC;MACH;IACF;EACF,GAAG,CAACZ,eAAA,EAAiBE,UAAU,CAAC;EAEhC,MAAMgB,cAAA,OAAiBxB,YAAA,CAAAgB,WAAA,EAAY,MAAM;IA1F3C,IAAAO,GAAA;IA2FI,CAAAA,GAAA,GAAAhB,aAAA,oBAAAA,aAAA,CAAeU,OAAA,KAAf,gBAAAM,GAAA,CAAwBL,KAAA;EAC1B,GAAG,CAACX,aAAa,CAAC;EAElB,MAAMkB,WAAA,GAAchB,YAAA,IAAgB,CAACF,aAAA;EAErC,OACE,mBAAAN,kBAAA,CAAAyB,GAAA,EAACvB,SAAA;IACCwB,UAAA,EAAYb,qBAAA;IACZD,eAAA;IACAD,SAAA;IACAgB,QAAA,EAAUjB,UAAA;IACVI,YAAA;IACAS,cAAA;IACAC,WAAA;IAECf;EAAA,CACH;AAEJ;AAEAlB,SAAA,CAAUqC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"script"}