{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Tooltip: () => Tooltip,\n  useTooltip: () => useTooltip\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/tooltip.tsx\nvar import_popper2 = require(\"@chakra-ui/popper\");\nvar import_portal = require(\"@chakra-ui/portal\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// ../../utilities/object-utils/src/pick.ts\nfunction pick(object, keysToPick) {\n  const result = {};\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key];\n    }\n  }\n  return result;\n}\n\n// src/tooltip.tsx\nvar import_framer_motion = require(\"framer-motion\");\nvar import_react2 = require(\"react\");\n\n// src/tooltip.transition.tsx\nvar scale = {\n  exit: {\n    scale: 0.85,\n    opacity: 0,\n    transition: {\n      opacity: {\n        duration: 0.15,\n        easings: \"easeInOut\"\n      },\n      scale: {\n        duration: 0.2,\n        easings: \"easeInOut\"\n      }\n    }\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      opacity: {\n        easings: \"easeOut\",\n        duration: 0.2\n      },\n      scale: {\n        duration: 0.2,\n        ease: [0.175, 0.885, 0.4, 1.1]\n      }\n    }\n  }\n};\n\n// src/use-tooltip.ts\nvar import_dom_utils = require(\"@chakra-ui/dom-utils\");\nvar import_popper = require(\"@chakra-ui/popper\");\nvar import_react_use_disclosure = require(\"@chakra-ui/react-use-disclosure\");\nvar import_react_use_event_listener = require(\"@chakra-ui/react-use-event-listener\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react = require(\"react\");\nvar getDoc = ref => {\n  var _a;\n  return ((_a = ref.current) == null ? void 0 : _a.ownerDocument) || document;\n};\nvar getWin = ref => {\n  var _a, _b;\n  return ((_b = (_a = ref.current) == null ? void 0 : _a.ownerDocument) == null ? void 0 : _b.defaultView) || window;\n};\nfunction useTooltip(props = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    closeOnScroll,\n    closeOnPointerDown = closeOnMouseDown,\n    closeOnEsc = true,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    direction,\n    ...htmlProps\n  } = props;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = (0, import_react_use_disclosure.useDisclosure)({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp\n  });\n  const {\n    referenceRef,\n    getPopperProps,\n    getArrowInnerProps,\n    getArrowProps\n  } = (0, import_popper.usePopper)({\n    enabled: isOpen,\n    placement,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n    direction\n  });\n  const uuid = (0, import_react.useId)();\n  const uid = id != null ? id : uuid;\n  const tooltipId = `tooltip-${uid}`;\n  const ref = (0, import_react.useRef)(null);\n  const enterTimeout = (0, import_react.useRef)();\n  const clearEnterTimeout = (0, import_react.useCallback)(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n      enterTimeout.current = void 0;\n    }\n  }, []);\n  const exitTimeout = (0, import_react.useRef)();\n  const clearExitTimeout = (0, import_react.useCallback)(() => {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current);\n      exitTimeout.current = void 0;\n    }\n  }, []);\n  const closeNow = (0, import_react.useCallback)(() => {\n    clearExitTimeout();\n    onClose();\n  }, [onClose, clearExitTimeout]);\n  const dispatchCloseEvent = useCloseEvent(ref, closeNow);\n  const openWithDelay = (0, import_react.useCallback)(() => {\n    if (!isDisabled && !enterTimeout.current) {\n      if (isOpen) dispatchCloseEvent();\n      const win = getWin(ref);\n      enterTimeout.current = win.setTimeout(onOpen, openDelay);\n    }\n  }, [dispatchCloseEvent, isDisabled, isOpen, onOpen, openDelay]);\n  const closeWithDelay = (0, import_react.useCallback)(() => {\n    clearEnterTimeout();\n    const win = getWin(ref);\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay);\n  }, [closeDelay, closeNow, clearEnterTimeout]);\n  const onClick = (0, import_react.useCallback)(() => {\n    if (isOpen && closeOnClick) {\n      closeWithDelay();\n    }\n  }, [closeOnClick, closeWithDelay, isOpen]);\n  const onPointerDown = (0, import_react.useCallback)(() => {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay();\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen]);\n  const onKeyDown = (0, import_react.useCallback)(event => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay();\n    }\n  }, [isOpen, closeWithDelay]);\n  (0, import_react_use_event_listener.useEventListener)(() => getDoc(ref), \"keydown\", closeOnEsc ? onKeyDown : void 0);\n  (0, import_react_use_event_listener.useEventListener)(() => {\n    if (!closeOnScroll) return null;\n    const node = ref.current;\n    if (!node) return null;\n    const scrollParent = (0, import_dom_utils.getScrollParent)(node);\n    return scrollParent.localName === \"body\" ? getWin(ref) : scrollParent;\n  }, \"scroll\", () => {\n    if (isOpen && closeOnScroll) {\n      closeNow();\n    }\n  }, {\n    passive: true,\n    capture: true\n  });\n  (0, import_react.useEffect)(() => {\n    if (!isDisabled) return;\n    clearEnterTimeout();\n    if (isOpen) onClose();\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout]);\n  (0, import_react.useEffect)(() => {\n    return () => {\n      clearEnterTimeout();\n      clearExitTimeout();\n    };\n  }, [clearEnterTimeout, clearExitTimeout]);\n  (0, import_react_use_event_listener.useEventListener)(() => ref.current, \"pointerleave\", closeWithDelay);\n  const getTriggerProps = (0, import_react.useCallback)((props2 = {}, _ref = null) => {\n    const triggerProps = {\n      ...props2,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, _ref, referenceRef),\n      onPointerEnter: (0, import_shared_utils.callAllHandlers)(props2.onPointerEnter, e => {\n        if (e.pointerType === \"touch\") return;\n        openWithDelay();\n      }),\n      onClick: (0, import_shared_utils.callAllHandlers)(props2.onClick, onClick),\n      onPointerDown: (0, import_shared_utils.callAllHandlers)(props2.onPointerDown, onPointerDown),\n      onFocus: (0, import_shared_utils.callAllHandlers)(props2.onFocus, openWithDelay),\n      onBlur: (0, import_shared_utils.callAllHandlers)(props2.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : void 0\n    };\n    return triggerProps;\n  }, [openWithDelay, closeWithDelay, onPointerDown, isOpen, tooltipId, onClick, referenceRef]);\n  const getTooltipPositionerProps = (0, import_react.useCallback)((props2 = {}, forwardedRef = null) => getPopperProps({\n    ...props2,\n    style: {\n      ...props2.style,\n      [import_popper.popperCSSVars.arrowSize.var]: arrowSize ? `${arrowSize}px` : void 0,\n      [import_popper.popperCSSVars.arrowShadowColor.var]: arrowShadowColor\n    }\n  }, forwardedRef), [getPopperProps, arrowSize, arrowShadowColor]);\n  const getTooltipProps = (0, import_react.useCallback)((props2 = {}, ref2 = null) => {\n    const styles = {\n      ...props2.style,\n      position: \"relative\",\n      transformOrigin: import_popper.popperCSSVars.transformOrigin.varRef\n    };\n    return {\n      ref: ref2,\n      ...htmlProps,\n      ...props2,\n      id: tooltipId,\n      role: \"tooltip\",\n      style: styles\n    };\n  }, [htmlProps, tooltipId]);\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps\n  };\n}\nvar closeEventName = \"chakra-ui:close-tooltip\";\nfunction useCloseEvent(ref, close) {\n  (0, import_react.useEffect)(() => {\n    const doc = getDoc(ref);\n    doc.addEventListener(closeEventName, close);\n    return () => doc.removeEventListener(closeEventName, close);\n  }, [close, ref]);\n  return () => {\n    const doc = getDoc(ref);\n    const win = getWin(ref);\n    doc.dispatchEvent(new win.CustomEvent(closeEventName));\n  };\n}\n\n// src/tooltip.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar MotionDiv = (0, import_system.chakra)(import_framer_motion.motion.div);\nvar Tooltip = (0, import_system.forwardRef)((props, ref) => {\n  var _a, _b;\n  const styles = (0, import_system.useStyleConfig)(\"Tooltip\", props);\n  const ownProps = (0, import_system.omitThemingProps)(props);\n  const theme = (0, import_system.useTheme)();\n  const {\n    children,\n    label,\n    shouldWrapChildren,\n    \"aria-label\": ariaLabel,\n    hasArrow,\n    bg,\n    portalProps,\n    background,\n    backgroundColor,\n    bgColor,\n    motionProps,\n    ...rest\n  } = ownProps;\n  const userDefinedBg = (_b = (_a = background != null ? background : backgroundColor) != null ? _a : bg) != null ? _b : bgColor;\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg;\n    const bgVar = (0, import_system.getCSSVar)(theme, \"colors\", userDefinedBg);\n    styles[import_popper2.popperCSSVars.arrowBg.var] = bgVar;\n  }\n  const tooltip = useTooltip({\n    ...rest,\n    direction: theme.direction\n  });\n  const shouldWrap = typeof children === \"string\" || shouldWrapChildren;\n  let trigger;\n  if (shouldWrap) {\n    trigger = /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n      display: \"inline-block\",\n      tabIndex: 0,\n      ...tooltip.getTriggerProps(),\n      children\n    });\n  } else {\n    const child = import_react2.Children.only(children);\n    trigger = (0, import_react2.cloneElement)(child, tooltip.getTriggerProps(child.props, child.ref));\n  }\n  const hasAriaLabel = !!ariaLabel;\n  const _tooltipProps = tooltip.getTooltipProps({}, ref);\n  const tooltipProps = hasAriaLabel ? omit(_tooltipProps, [\"role\", \"id\"]) : _tooltipProps;\n  const srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"]);\n  if (!label) {\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, {\n      children\n    });\n  }\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, {\n    children: [trigger, /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_framer_motion.AnimatePresence, {\n      children: tooltip.isOpen && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_portal.Portal, {\n        ...portalProps,\n        children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n          ...tooltip.getTooltipPositionerProps(),\n          __css: {\n            zIndex: styles.zIndex,\n            pointerEvents: \"none\"\n          },\n          children: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(MotionDiv, {\n            variants: scale,\n            initial: \"exit\",\n            animate: \"enter\",\n            exit: \"exit\",\n            ...motionProps,\n            ...tooltipProps,\n            __css: styles,\n            children: [label, hasAriaLabel && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n              srOnly: true,\n              ...srOnlyProps,\n              children: ariaLabel\n            }), hasArrow && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n              \"data-popper-arrow\": true,\n              className: \"chakra-tooltip__arrow-wrapper\",\n              children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n                \"data-popper-arrow-inner\": true,\n                className: \"chakra-tooltip__arrow\",\n                __css: {\n                  bg: styles.bg\n                }\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n});\nTooltip.displayName = \"Tooltip\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Tooltip,\n  useTooltip\n});","map":{"version":3,"names":["src_exports","__export","Tooltip","useTooltip","module","exports","__toCommonJS","import_popper2","require","import_portal","import_system","omit","object","keysToOmit","clone","Object","assign","key","pick","keysToPick","result","import_framer_motion","import_react2","scale","exit","opacity","transition","duration","easings","enter","ease","import_dom_utils","import_popper","import_react_use_disclosure","import_react_use_event_listener","import_react_use_merge_refs","import_shared_utils","import_react","getDoc","ref","_a","current","ownerDocument","document","getWin","_b","defaultView","window","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","closeOnScroll","closeOnPointerDown","closeOnEsc","onOpen","onOpenProp","onClose","onCloseProp","placement","id","isOpen","isOpenProp","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","direction","htmlProps","useDisclosure","referenceRef","getPopperProps","getArrowInnerProps","getArrowProps","usePopper","enabled","uuid","useId","uid","tooltipId","useRef","enterTimeout","clearEnterTimeout","useCallback","clearTimeout","exitTimeout","clearExitTimeout","closeNow","dispatchCloseEvent","useCloseEvent","openWithDelay","win","setTimeout","closeWithDelay","onClick","onPointerDown","onKeyDown","event","useEventListener","node","scrollParent","getScrollParent","localName","passive","capture","useEffect","getTriggerProps","props2","_ref","triggerProps","mergeRefs","onPointerEnter","callAllHandlers","e","pointerType","onFocus","onBlur","getTooltipPositionerProps","forwardedRef","style","popperCSSVars","var","getTooltipProps","ref2","styles","position","transformOrigin","varRef","role","show","hide","closeEventName","close","doc","addEventListener","removeEventListener","dispatchEvent","CustomEvent","import_jsx_runtime","MotionDiv","chakra","motion","div","forwardRef","useStyleConfig","ownProps","omitThemingProps","theme","useTheme","children","label","shouldWrapChildren","ariaLabel","hasArrow","bg","portalProps","background","backgroundColor","bgColor","motionProps","rest","userDefinedBg","bgVar","getCSSVar","arrowBg","tooltip","shouldWrap","trigger","jsx","span","display","tabIndex","child","Children","only","cloneElement","hasAriaLabel","_tooltipProps","tooltipProps","srOnlyProps","Fragment","jsxs","AnimatePresence","Portal","__css","zIndex","pointerEvents","variants","initial","animate","srOnly","className","displayName"],"sources":["../src/index.ts","../src/tooltip.tsx","../../../utilities/object-utils/src/omit.ts","../../../utilities/object-utils/src/pick.ts","../src/tooltip.transition.tsx","../src/use-tooltip.ts"],"sourcesContent":["export { Tooltip } from \"./tooltip\"\nexport type { TooltipProps } from \"./tooltip\"\nexport { useTooltip } from \"./use-tooltip\"\nexport type { UseTooltipProps, UseTooltipReturn } from \"./use-tooltip\"\n","import { popperCSSVars } from \"@chakra-ui/popper\"\nimport { Portal, PortalProps } from \"@chakra-ui/portal\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  useTheme,\n  getCSSVar,\n} from \"@chakra-ui/system\"\nimport { omit, pick } from \"@chakra-ui/object-utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport { Children, cloneElement } from \"react\"\nimport { scale } from \"./tooltip.transition\"\nimport { useTooltip, UseTooltipProps } from \"./use-tooltip\"\n\nexport interface TooltipProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Tooltip\">,\n    UseTooltipProps {\n  /**\n   * The React component to use as the\n   * trigger for the tooltip\n   */\n  children: React.ReactNode\n  /**\n   * The label of the tooltip\n   */\n  label?: React.ReactNode\n  /**\n   * The accessible, human friendly label to use for\n   * screen readers.\n   *\n   * If passed, tooltip will show the content `label`\n   * but expose only `aria-label` to assistive technologies\n   */\n  \"aria-label\"?: string\n  /**\n   * If `true`, the tooltip will wrap its children\n   * in a `<span/>` with `tabIndex=0`\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true`, the tooltip will show an arrow tip\n   * @default false\n   */\n  hasArrow?: boolean\n  /**\n   * Props to be forwarded to the portal component\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nconst MotionDiv = chakra(motion.div)\n\n/**\n * Tooltips display informative text when users hover, focus on, or tap an element.\n *\n * @see Docs     https://chakra-ui.com/docs/overlay/tooltip\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tooltip/\n */\nexport const Tooltip = forwardRef<TooltipProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Tooltip\", props)\n  const ownProps = omitThemingProps(props)\n  const theme = useTheme()\n\n  const {\n    children,\n    label,\n    shouldWrapChildren,\n    \"aria-label\": ariaLabel,\n    hasArrow,\n    bg,\n    portalProps,\n    background,\n    backgroundColor,\n    bgColor,\n    motionProps,\n    ...rest\n  } = ownProps\n\n  const userDefinedBg = background ?? backgroundColor ?? bg ?? bgColor\n\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg\n    const bgVar = getCSSVar(theme, \"colors\", userDefinedBg)\n    ;(styles as any)[popperCSSVars.arrowBg.var] = bgVar\n  }\n  const tooltip = useTooltip({ ...rest, direction: theme.direction })\n\n  const shouldWrap = typeof children === \"string\" || shouldWrapChildren\n\n  let trigger: React.ReactElement\n\n  if (shouldWrap) {\n    trigger = (\n      <chakra.span\n        display=\"inline-block\"\n        tabIndex={0}\n        {...tooltip.getTriggerProps()}\n      >\n        {children}\n      </chakra.span>\n    )\n  } else {\n    /**\n     * Ensure tooltip has only one child node\n     */\n    const child = Children.only(children) as React.ReactElement & {\n      ref?: React.Ref<any>\n    }\n    trigger = cloneElement(\n      child,\n      tooltip.getTriggerProps(child.props, child.ref),\n    )\n  }\n\n  const hasAriaLabel = !!ariaLabel\n\n  const _tooltipProps = tooltip.getTooltipProps({}, ref)\n\n  const tooltipProps = hasAriaLabel\n    ? omit(_tooltipProps, [\"role\", \"id\"])\n    : _tooltipProps\n\n  const srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"])\n\n  /**\n   * If the `label` is empty, there's no point showing the tooltip.\n   * Let's simply return the children\n   */\n  if (!label) {\n    return <>{children}</>\n  }\n\n  return (\n    <>\n      {trigger}\n      <AnimatePresence>\n        {tooltip.isOpen && (\n          <Portal {...portalProps}>\n            <chakra.div\n              {...tooltip.getTooltipPositionerProps()}\n              __css={{\n                zIndex: styles.zIndex,\n                pointerEvents: \"none\",\n              }}\n            >\n              <MotionDiv\n                variants={scale}\n                initial=\"exit\"\n                animate=\"enter\"\n                exit=\"exit\"\n                {...motionProps}\n                {...(tooltipProps as any)}\n                __css={styles}\n              >\n                {label}\n                {hasAriaLabel && (\n                  <chakra.span srOnly {...srOnlyProps}>\n                    {ariaLabel}\n                  </chakra.span>\n                )}\n                {hasArrow && (\n                  <chakra.div\n                    data-popper-arrow\n                    className=\"chakra-tooltip__arrow-wrapper\"\n                  >\n                    <chakra.div\n                      data-popper-arrow-inner\n                      className=\"chakra-tooltip__arrow\"\n                      __css={{ bg: styles.bg }}\n                    />\n                  </chakra.div>\n                )}\n              </MotionDiv>\n            </chakra.div>\n          </Portal>\n        )}\n      </AnimatePresence>\n    </>\n  )\n})\n\nTooltip.displayName = \"Tooltip\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","export function pick<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToPick: K[],\n) {\n  const result = {} as {\n    [P in K]: T[P]\n  }\n  for (const key of keysToPick) {\n    if (key in object) {\n      result[key] = object[key]\n    }\n  }\n  return result\n}\n","import { Variants } from \"framer-motion\"\n\nexport const scale: Variants = {\n  exit: {\n    scale: 0.85,\n    opacity: 0,\n    transition: {\n      opacity: { duration: 0.15, easings: \"easeInOut\" },\n      scale: { duration: 0.2, easings: \"easeInOut\" },\n    },\n  },\n  enter: {\n    scale: 1,\n    opacity: 1,\n    transition: {\n      opacity: { easings: \"easeOut\", duration: 0.2 },\n      scale: { duration: 0.2, ease: [0.175, 0.885, 0.4, 1.1] },\n    },\n  },\n}\n","import { getScrollParent } from \"@chakra-ui/dom-utils\"\nimport { popperCSSVars, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport { useDisclosure } from \"@chakra-ui/react-use-disclosure\"\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport React, {\n  useCallback,\n  useEffect,\n  useId,\n  useRef,\n  type RefObject,\n} from \"react\"\n\nexport interface UseTooltipProps\n  extends Pick<\n    UsePopperProps,\n    | \"modifiers\"\n    | \"gutter\"\n    | \"offset\"\n    | \"arrowPadding\"\n    | \"direction\"\n    | \"placement\"\n  > {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   * @default true\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse is down\n   * @deprecated - use `closeOnPointerDown` instead\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * If `true`, the tooltip will hide while the pointer is down\n   * @default true\n   */\n  closeOnPointerDown?: boolean\n  /**\n   * If `true`, the tooltip will hide on pressing Esc key\n   * @default true\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   * @default false\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   * @default false\n   */\n  defaultIsOpen?: boolean\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * @default false\n   */\n  closeOnScroll?: boolean\n  /**\n   * @default 10\n   */\n  arrowSize?: number\n  arrowShadowColor?: string\n}\n\nconst getDoc = (ref: React.RefObject<Element | null>) =>\n  ref.current?.ownerDocument || document\n\nconst getWin = (ref: React.RefObject<Element | null>) =>\n  ref.current?.ownerDocument?.defaultView || window\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    closeOnScroll,\n    closeOnPointerDown = closeOnMouseDown,\n    closeOnEsc = true,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    direction,\n    ...htmlProps\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const { referenceRef, getPopperProps, getArrowInnerProps, getArrowProps } =\n    usePopper({\n      enabled: isOpen,\n      placement,\n      arrowPadding,\n      modifiers,\n      gutter,\n      offset,\n      direction,\n    })\n\n  const uuid = useId()\n  const uid = id ?? uuid\n  const tooltipId = `tooltip-${uid}`\n\n  const ref = useRef<HTMLElement>(null)\n\n  const enterTimeout = useRef<number>()\n  const clearEnterTimeout = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n      enterTimeout.current = undefined\n    }\n  }, [])\n\n  const exitTimeout = useRef<number>()\n  const clearExitTimeout = useCallback(() => {\n    if (exitTimeout.current) {\n      clearTimeout(exitTimeout.current)\n      exitTimeout.current = undefined\n    }\n  }, [])\n\n  const closeNow = useCallback(() => {\n    clearExitTimeout()\n    onClose()\n  }, [onClose, clearExitTimeout])\n\n  const dispatchCloseEvent = useCloseEvent(ref, closeNow)\n\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled && !enterTimeout.current) {\n      if (isOpen) dispatchCloseEvent()\n      const win = getWin(ref)\n      enterTimeout.current = win.setTimeout(onOpen, openDelay)\n    }\n  }, [dispatchCloseEvent, isDisabled, isOpen, onOpen, openDelay])\n\n  const closeWithDelay = useCallback(() => {\n    clearEnterTimeout()\n    const win = getWin(ref)\n    exitTimeout.current = win.setTimeout(closeNow, closeDelay)\n  }, [closeDelay, closeNow, clearEnterTimeout])\n\n  const onClick = useCallback(() => {\n    if (isOpen && closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay, isOpen])\n\n  const onPointerDown = useCallback(() => {\n    if (isOpen && closeOnPointerDown) {\n      closeWithDelay()\n    }\n  }, [closeOnPointerDown, closeWithDelay, isOpen])\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (isOpen && event.key === \"Escape\") {\n        closeWithDelay()\n      }\n    },\n    [isOpen, closeWithDelay],\n  )\n\n  useEventListener(\n    () => getDoc(ref),\n    \"keydown\",\n    closeOnEsc ? onKeyDown : undefined,\n  )\n\n  useEventListener(\n    () => {\n      if (!closeOnScroll) return null\n      const node = ref.current\n      if (!node) return null\n      const scrollParent = getScrollParent(node)\n      return scrollParent.localName === \"body\" ? getWin(ref) : scrollParent\n    },\n    \"scroll\",\n    () => {\n      if (isOpen && closeOnScroll) {\n        closeNow()\n      }\n    },\n    { passive: true, capture: true },\n  )\n\n  useEffect(() => {\n    if (!isDisabled) return\n    clearEnterTimeout()\n    if (isOpen) onClose()\n  }, [isDisabled, isOpen, onClose, clearEnterTimeout])\n\n  useEffect(() => {\n    return () => {\n      clearEnterTimeout()\n      clearExitTimeout()\n    }\n  }, [clearEnterTimeout, clearExitTimeout])\n\n  /**\n   * This allows for catching pointerleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onPointerLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n  useEventListener(() => ref.current, \"pointerleave\", closeWithDelay)\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps = {\n        ...props,\n        ref: mergeRefs(ref, _ref, referenceRef),\n        onPointerEnter: callAllHandlers(props.onPointerEnter, (e) => {\n          if (e.pointerType === \"touch\") return\n          openWithDelay()\n        }),\n        onClick: callAllHandlers(props.onClick, onClick),\n        onPointerDown: callAllHandlers(props.onPointerDown, onPointerDown),\n        onFocus: callAllHandlers(props.onFocus, openWithDelay),\n        onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n        \"aria-describedby\": isOpen ? tooltipId : undefined,\n      }\n\n      return triggerProps\n    },\n    [\n      openWithDelay,\n      closeWithDelay,\n      onPointerDown,\n      isOpen,\n      tooltipId,\n      onClick,\n      referenceRef,\n    ],\n  )\n\n  const getTooltipPositionerProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            ...props.style,\n            [popperCSSVars.arrowSize.var]: arrowSize\n              ? `${arrowSize}px`\n              : undefined,\n            [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n          },\n        },\n        forwardedRef,\n      ),\n    [getPopperProps, arrowSize, arrowShadowColor],\n  )\n\n  const getTooltipProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const styles: React.CSSProperties = {\n        ...props.style,\n        position: \"relative\",\n        transformOrigin: popperCSSVars.transformOrigin.varRef,\n      }\n\n      return {\n        ref,\n        ...htmlProps,\n        ...props,\n        id: tooltipId,\n        role: \"tooltip\",\n        style: styles,\n      }\n    },\n    [htmlProps, tooltipId],\n  )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipPositionerProps,\n    getArrowProps,\n    getArrowInnerProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n\nconst closeEventName = \"chakra-ui:close-tooltip\"\n\nfunction useCloseEvent(ref: RefObject<Element>, close: () => void) {\n  useEffect(() => {\n    const doc = getDoc(ref)\n    doc.addEventListener(closeEventName, close)\n    return () => doc.removeEventListener(closeEventName, close)\n  }, [close, ref])\n\n  return () => {\n    const doc = getDoc(ref)\n    const win = getWin(ref)\n    doc.dispatchEvent(new win.CustomEvent(closeEventName))\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}