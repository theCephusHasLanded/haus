{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Step: () => Step,\n  StepDescription: () => StepDescription,\n  StepIcon: () => StepIcon,\n  StepIndicator: () => StepIndicator,\n  StepIndicatorContent: () => StepIndicatorContent,\n  StepNumber: () => StepNumber,\n  StepSeparator: () => StepSeparator,\n  StepStatus: () => StepStatus,\n  StepTitle: () => StepTitle,\n  Stepper: () => Stepper,\n  useStepContext: () => useStepContext,\n  useStepperStyles: () => useStepperStyles,\n  useSteps: () => useSteps\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/step.tsx\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_system2 = require(\"@chakra-ui/system\");\n\n// src/step-context.tsx\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\nvar [StepContextProvider, useStepContext] = (0, import_react_context.createContext)({\n  name: \"StepContext\"\n});\nvar [StepperStylesProvider, useStepperStyles] = (0, import_system.createStylesContext)(\"Stepper\");\n\n// src/step.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar Step = (0, import_system2.forwardRef)(function Step2(props, ref) {\n  const {\n    orientation,\n    status,\n    showLastSeparator\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system2.chakra.div, {\n    ref,\n    \"data-status\": status,\n    \"data-orientation\": orientation,\n    \"data-stretch\": (0, import_shared_utils.dataAttr)(showLastSeparator),\n    __css: styles.step,\n    ...props,\n    className: (0, import_shared_utils.cx)(\"chakra-step\", props.className)\n  });\n});\n\n// src/step-description.tsx\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar StepDescription = (0, import_system3.forwardRef)(function StepDescription2(props, ref) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system3.chakra.p, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    className: (0, import_shared_utils2.cx)(\"chakra-step__description\", props.className),\n    __css: styles.description\n  });\n});\n\n// src/step-icon.tsx\nvar import_icon = require(\"@chakra-ui/icon\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\n\n// src/icons.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nfunction CheckIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"svg\", {\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    strokeWidth: \"0\",\n    viewBox: \"0 0 20 20\",\n    \"aria-hidden\": \"true\",\n    height: \"1em\",\n    width: \"1em\",\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n      clipRule: \"evenodd\"\n    })\n  });\n}\n\n// src/step-icon.tsx\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nfunction StepIcon(props) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  const icon = status === \"complete\" ? CheckIcon : void 0;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_icon.Icon, {\n    as: icon,\n    __css: styles.icon,\n    ...props,\n    className: (0, import_shared_utils3.cx)(\"chakra-step__icon\", props.className)\n  });\n}\n\n// src/step-indicator.tsx\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_system5 = require(\"@chakra-ui/system\");\n\n// src/step-number.tsx\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar StepNumber = (0, import_system4.forwardRef)(function StepNumber2(props, ref) {\n  const {\n    children,\n    ...restProps\n  } = props;\n  const {\n    status,\n    index\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system4.chakra.div, {\n    ref,\n    \"data-status\": status,\n    __css: styles.number,\n    ...restProps,\n    className: (0, import_shared_utils4.cx)(\"chakra-step__number\", props.className),\n    children: children || index + 1\n  });\n});\n\n// src/step-status.tsx\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nfunction StepStatus(props) {\n  const {\n    complete,\n    incomplete,\n    active\n  } = props;\n  const context = useStepContext();\n  let render = null;\n  switch (context.status) {\n    case \"complete\":\n      render = (0, import_shared_utils5.runIfFn)(complete, context);\n      break;\n    case \"incomplete\":\n      render = (0, import_shared_utils5.runIfFn)(incomplete, context);\n      break;\n    case \"active\":\n      render = (0, import_shared_utils5.runIfFn)(active, context);\n      break;\n  }\n  return render ? /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_jsx_runtime6.Fragment, {\n    children: render\n  }) : null;\n}\n\n// src/step-indicator.tsx\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nfunction StepIndicator(props) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system5.chakra.div, {\n    \"data-status\": status,\n    ...props,\n    __css: styles.indicator,\n    className: (0, import_shared_utils6.cx)(\"chakra-step__indicator\", props.className)\n  });\n}\nfunction StepIndicatorContent() {\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepStatus, {\n    complete: /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepIcon, {}),\n    incomplete: /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepNumber, {}),\n    active: /* @__PURE__ */(0, import_jsx_runtime7.jsx)(StepNumber, {})\n  });\n}\n\n// src/step-separator.tsx\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar StepSeparator = (0, import_system6.forwardRef)(function StepSeparator2(props, ref) {\n  const {\n    orientation,\n    status,\n    isLast,\n    showLastSeparator\n  } = useStepContext();\n  const styles = useStepperStyles();\n  if (isLast && !showLastSeparator) return null;\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsx)(import_system6.chakra.div, {\n    ref,\n    role: \"separator\",\n    \"data-orientation\": orientation,\n    \"data-status\": status,\n    __css: styles.separator,\n    ...props,\n    className: (0, import_shared_utils7.cx)(\"chakra-step__separator\", props.className)\n  });\n});\n\n// src/step-title.tsx\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar StepTitle = (0, import_system7.forwardRef)(function StepTitle2(props, ref) {\n  const {\n    status\n  } = useStepContext();\n  const styles = useStepperStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsx)(import_system7.chakra.h3, {\n    ref,\n    \"data-status\": status,\n    ...props,\n    __css: styles.title,\n    className: (0, import_shared_utils8.cx)(\"chakra-step__title\", props.className)\n  });\n});\n\n// src/stepper.tsx\nvar import_shared_utils9 = require(\"@chakra-ui/shared-utils\");\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nvar Stepper = (0, import_system8.forwardRef)(function Stepper2(props, ref) {\n  const styles = (0, import_system8.useMultiStyleConfig)(\"Stepper\", props);\n  const {\n    children,\n    index,\n    orientation = \"horizontal\",\n    showLastSeparator = false,\n    ...restProps\n  } = (0, import_system8.omitThemingProps)(props);\n  const stepElements = import_react.Children.toArray(children);\n  const stepCount = stepElements.length;\n  function getStatus(step) {\n    if (step < index) return \"complete\";\n    if (step > index) return \"incomplete\";\n    return \"active\";\n  }\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(import_system8.chakra.div, {\n    ref,\n    \"aria-label\": \"Progress\",\n    \"data-orientation\": orientation,\n    ...restProps,\n    __css: styles.stepper,\n    className: (0, import_shared_utils9.cx)(\"chakra-stepper\", props.className),\n    children: /* @__PURE__ */(0, import_jsx_runtime10.jsx)(StepperStylesProvider, {\n      value: styles,\n      children: stepElements.map((child, index2) => /* @__PURE__ */(0, import_jsx_runtime10.jsx)(StepContextProvider, {\n        value: {\n          index: index2,\n          status: getStatus(index2),\n          orientation,\n          showLastSeparator,\n          count: stepCount,\n          isFirst: index2 === 0,\n          isLast: index2 === stepCount - 1\n        },\n        children: child\n      }, index2))\n    })\n  });\n});\n\n// src/use-steps.ts\nvar import_react2 = require(\"react\");\nfunction useSteps(props = {}) {\n  const {\n    index = 0,\n    count\n  } = props;\n  const [activeStep, setActiveStep] = (0, import_react2.useState)(index);\n  const maxStep = typeof count === \"number\" ? count - 1 : 0;\n  const activeStepPercent = activeStep / maxStep;\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step) {\n      return step === activeStep;\n    },\n    isCompleteStep(step) {\n      return step < activeStep;\n    },\n    isIncompleteStep(step) {\n      return step > activeStep;\n    },\n    getStatus(step) {\n      if (step < activeStep) return \"complete\";\n      if (step > activeStep) return \"incomplete\";\n      return \"active\";\n    },\n    goToNext() {\n      setActiveStep(step => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1;\n      });\n    },\n    goToPrevious() {\n      setActiveStep(step => Math.max(0, step - 1));\n    }\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Step,\n  StepDescription,\n  StepIcon,\n  StepIndicator,\n  StepIndicatorContent,\n  StepNumber,\n  StepSeparator,\n  StepStatus,\n  StepTitle,\n  Stepper,\n  useStepContext,\n  useStepperStyles,\n  useSteps\n});","map":{"version":3,"names":["src_exports","__export","Step","StepDescription","StepIcon","StepIndicator","StepIndicatorContent","StepNumber","StepSeparator","StepStatus","StepTitle","Stepper","useStepContext","useStepperStyles","useSteps","module","exports","__toCommonJS","import_shared_utils","require","import_system2","import_react_context","import_system","StepContextProvider","createContext","name","StepperStylesProvider","createStylesContext","import_jsx_runtime","forwardRef","Step2","props","ref","orientation","status","showLastSeparator","styles","jsx","chakra","div","dataAttr","__css","step","className","cx","import_shared_utils2","import_system3","import_jsx_runtime2","StepDescription2","p","description","import_icon","import_shared_utils3","import_jsx_runtime3","CheckIcon","stroke","fill","strokeWidth","viewBox","height","width","children","fillRule","d","clipRule","import_jsx_runtime4","icon","Icon","as","import_shared_utils6","import_system5","import_shared_utils4","import_system4","import_jsx_runtime5","StepNumber2","restProps","index","number","import_shared_utils5","import_jsx_runtime6","complete","incomplete","active","context","render","runIfFn","Fragment","import_jsx_runtime7","indicator","import_shared_utils7","import_system6","import_jsx_runtime8","StepSeparator2","isLast","role","separator","import_shared_utils8","import_system7","import_jsx_runtime9","StepTitle2","h3","title","import_shared_utils9","import_system8","import_react","import_jsx_runtime10","Stepper2","useMultiStyleConfig","omitThemingProps","stepElements","Children","toArray","stepCount","length","getStatus","stepper","value","map","child","index2","count","isFirst","import_react2","activeStep","setActiveStep","useState","maxStep","activeStepPercent","isActiveStep","isCompleteStep","isIncompleteStep","goToNext","Math","min","goToPrevious","max"],"sources":["../src/index.ts","../src/step.tsx","../src/step-context.tsx","../src/step-description.tsx","../src/step-icon.tsx","../src/icons.tsx","../src/step-indicator.tsx","../src/step-number.tsx","../src/step-status.tsx","../src/step-separator.tsx","../src/step-title.tsx","../src/stepper.tsx","../src/use-steps.ts"],"sourcesContent":["export { Step } from \"./step\"\nexport type { StepProps } from \"./step\"\nexport { useStepContext, useStepperStyles } from \"./step-context\"\nexport type { StepStatusType } from \"./step-context\"\nexport { StepDescription } from \"./step-description\"\nexport type { StepDescriptionProps } from \"./step-description\"\nexport { StepIcon } from \"./step-icon\"\nexport { StepIndicator, StepIndicatorContent } from \"./step-indicator\"\nexport type { StepIndicatorProps } from \"./step-indicator\"\nexport { StepNumber } from \"./step-number\"\nexport { StepSeparator } from \"./step-separator\"\nexport type { StepSeparatorProps } from \"./step-separator\"\nexport { StepStatus } from \"./step-status\"\nexport type { StepStatusProps } from \"./step-status\"\nexport { StepTitle } from \"./step-title\"\nexport type { StepTitleProps } from \"./step-title\"\nexport { Stepper } from \"./stepper\"\nexport type { StepperProps } from \"./stepper\"\nexport { useSteps } from \"./use-steps\"\nexport type { UseStepsProps, UseStepsReturn } from \"./use-steps\"\n","import { cx, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\n\nexport interface StepProps extends HTMLChakraProps<\"div\"> {}\n\nexport const Step = forwardRef<{}, \"div\">(function Step(props, ref) {\n  const { orientation, status, showLastSeparator } = useStepContext()\n  const styles = useStepperStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      data-status={status}\n      data-orientation={orientation}\n      data-stretch={dataAttr(showLastSeparator)}\n      __css={styles.step}\n      {...props}\n      className={cx(\"chakra-step\", props.className)}\n    />\n  )\n})\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { createStylesContext } from \"@chakra-ui/system\"\n\nexport type StepStatusType = \"active\" | \"complete\" | \"incomplete\"\n\nexport type Orientation = \"horizontal\" | \"vertical\"\n\nexport interface StepContext {\n  /**\n   * The status of the step\n   * @type \"active\" | \"complete\" | \"incomplete\"\n   */\n  status: StepStatusType\n  /**\n   * The total number of steps\n   */\n  count: number\n  /**\n   * The index of the step\n   */\n  index: number\n  /**\n   * The orientation of the stepper\n   */\n  orientation: Orientation\n  /**\n   * Whether the step is the last step\n   */\n  isLast: boolean\n  /**\n   * Whether the step is the first step\n   */\n  isFirst: boolean\n  /**\n   * Whether to show or not the last separator while in vertical orientation\n   */\n  showLastSeparator?: boolean\n}\n\nexport const [StepContextProvider, useStepContext] = createContext<StepContext>(\n  { name: \"StepContext\" },\n)\n\nexport const [StepperStylesProvider, useStepperStyles] =\n  createStylesContext(\"Stepper\")\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\n\nexport interface StepDescriptionProps extends HTMLChakraProps<\"p\"> {}\n\nexport const StepDescription = forwardRef<{}, \"p\">(function StepDescription(\n  props: StepDescriptionProps,\n  ref,\n) {\n  const { status } = useStepContext()\n  const styles = useStepperStyles()\n  return (\n    <chakra.p\n      ref={ref}\n      data-status={status}\n      {...props}\n      className={cx(\"chakra-step__description\", props.className)}\n      __css={styles.description}\n    />\n  )\n})\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { CheckIcon } from \"./icons\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\n\nexport function StepIcon(props: IconProps) {\n  const { status } = useStepContext()\n  const styles = useStepperStyles()\n  const icon = status === \"complete\" ? CheckIcon : undefined\n  return (\n    <Icon\n      as={icon}\n      __css={styles.icon}\n      {...props}\n      className={cx(\"chakra-step__icon\", props.className)}\n    />\n  )\n}\n","import { ComponentProps } from \"react\"\n\nexport function CheckIcon(props: ComponentProps<\"svg\">) {\n  return (\n    <svg\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 20 20\"\n      aria-hidden=\"true\"\n      height=\"1em\"\n      width=\"1em\"\n      {...props}\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n        clipRule=\"evenodd\"\n      />\n    </svg>\n  )\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\nimport { StepIcon } from \"./step-icon\"\nimport { StepNumber } from \"./step-number\"\nimport { StepStatus } from \"./step-status\"\n\nexport interface StepIndicatorProps extends HTMLChakraProps<\"div\"> {}\n\nexport function StepIndicator(props: StepIndicatorProps) {\n  const { status } = useStepContext()\n  const styles = useStepperStyles()\n  return (\n    <chakra.div\n      data-status={status}\n      {...props}\n      __css={styles.indicator}\n      className={cx(\"chakra-step__indicator\", props.className)}\n    />\n  )\n}\n\nexport function StepIndicatorContent() {\n  return (\n    <StepStatus\n      complete={<StepIcon />}\n      incomplete={<StepNumber />}\n      active={<StepNumber />}\n    />\n  )\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\n\nexport const StepNumber = forwardRef<{}, \"div\">(function StepNumber(\n  props,\n  ref,\n) {\n  const { children, ...restProps } = props\n  const { status, index } = useStepContext()\n  const styles = useStepperStyles()\n  return (\n    <chakra.div\n      ref={ref}\n      data-status={status}\n      __css={styles.number}\n      {...restProps}\n      className={cx(\"chakra-step__number\", props.className)}\n    >\n      {children || index + 1}\n    </chakra.div>\n  )\n})\n","import { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { StepContext, StepStatusType, useStepContext } from \"./step-context\"\n\ntype MaybeRenderProp =\n  | React.ReactNode\n  | ((props: StepContext) => React.ReactNode)\n\nexport interface StepStatusProps\n  extends Partial<Record<StepStatusType, MaybeRenderProp>> {}\n\nexport function StepStatus(props: StepStatusProps) {\n  const { complete, incomplete, active } = props\n  const context = useStepContext()\n\n  let render: React.ReactNode | null = null\n\n  switch (context.status) {\n    case \"complete\":\n      render = runIfFn(complete, context)\n      break\n    case \"incomplete\":\n      render = runIfFn(incomplete, context)\n      break\n    case \"active\":\n      render = runIfFn(active, context)\n      break\n  }\n\n  return render ? <>{render}</> : null\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\n\nexport interface StepSeparatorProps extends HTMLChakraProps<\"div\"> {}\n\nexport const StepSeparator = forwardRef<{}, \"div\">(function StepSeparator(\n  props,\n  ref,\n) {\n  const { orientation, status, isLast, showLastSeparator } = useStepContext()\n  const styles = useStepperStyles()\n\n  if (isLast && !showLastSeparator) return null\n\n  return (\n    <chakra.div\n      ref={ref}\n      role=\"separator\"\n      data-orientation={orientation}\n      data-status={status}\n      __css={styles.separator}\n      {...props}\n      className={cx(\"chakra-step__separator\", props.className)}\n    />\n  )\n})\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStepContext, useStepperStyles } from \"./step-context\"\n\nexport interface StepTitleProps extends HTMLChakraProps<\"h3\"> {}\n\nexport const StepTitle = forwardRef<{}, \"h3\">(function StepTitle(\n  props: StepTitleProps,\n  ref,\n) {\n  const { status } = useStepContext()\n  const styles = useStepperStyles()\n  return (\n    <chakra.h3\n      ref={ref}\n      data-status={status}\n      {...props}\n      __css={styles.title}\n      className={cx(\"chakra-step__title\", props.className)}\n    />\n  )\n})\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport {\n  Orientation,\n  StepContextProvider,\n  StepStatusType,\n  StepperStylesProvider,\n} from \"./step-context\"\n\nexport interface StepperProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Stepper\"> {\n  /**\n   * The active step index\n   */\n  index: number\n  /**\n   * The orientation of the stepper\n   * @default horizontal\n   */\n  orientation?: Orientation\n  /**\n   * Whether to show or not the last separator while in vertical orientation\n   */\n  showLastSeparator?: boolean\n  /**\n   */\n  children: React.ReactNode\n}\n\nexport const Stepper = forwardRef<StepperProps, \"div\">(function Stepper(\n  props: StepperProps,\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Stepper\", props)\n\n  const {\n    children,\n    index,\n    orientation = \"horizontal\",\n    showLastSeparator = false,\n    ...restProps\n  } = omitThemingProps(props)\n\n  const stepElements = Children.toArray(children)\n\n  const stepCount = stepElements.length\n\n  function getStatus(step: number): StepStatusType {\n    if (step < index) return \"complete\"\n    if (step > index) return \"incomplete\"\n    return \"active\"\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      aria-label=\"Progress\"\n      data-orientation={orientation}\n      {...restProps}\n      __css={styles.stepper}\n      className={cx(\"chakra-stepper\", props.className)}\n    >\n      <StepperStylesProvider value={styles}>\n        {stepElements.map((child, index) => (\n          <StepContextProvider\n            key={index}\n            value={{\n              index,\n              status: getStatus(index),\n              orientation,\n              showLastSeparator,\n              count: stepCount,\n              isFirst: index === 0,\n              isLast: index === stepCount - 1,\n            }}\n          >\n            {child}\n          </StepContextProvider>\n        ))}\n      </StepperStylesProvider>\n    </chakra.div>\n  )\n})\n","import { useState } from \"react\"\n\nexport type UseStepsProps = {\n  index?: number\n  count?: number\n}\n\nexport type StepStatus = \"complete\" | \"active\" | \"incomplete\"\n\nexport function useSteps(props: UseStepsProps = {}) {\n  const { index = 0, count } = props\n\n  const [activeStep, setActiveStep] = useState(index)\n\n  const maxStep = typeof count === \"number\" ? count - 1 : 0\n  const activeStepPercent = activeStep / maxStep\n\n  return {\n    activeStep,\n    setActiveStep,\n    activeStepPercent,\n    isActiveStep(step: number) {\n      return step === activeStep\n    },\n    isCompleteStep(step: number) {\n      return step < activeStep\n    },\n    isIncompleteStep(step: number) {\n      return step > activeStep\n    },\n    getStatus(step: number): StepStatus {\n      if (step < activeStep) return \"complete\"\n      if (step > activeStep) return \"incomplete\"\n      return \"active\"\n    },\n    goToNext() {\n      setActiveStep((step) => {\n        return typeof count === \"number\" ? Math.min(count, step + 1) : step + 1\n      })\n    },\n    goToPrevious() {\n      setActiveStep((step) => Math.max(0, step - 1))\n    },\n  }\n}\n\nexport type UseStepsReturn = ReturnType<typeof useSteps>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}