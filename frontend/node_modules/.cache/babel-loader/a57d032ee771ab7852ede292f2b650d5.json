{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Icon: () => Icon,\n  createIcon: () => createIcon\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/icon.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar fallbackIcon = {\n  path: /* @__PURE__ */(0, import_jsx_runtime.jsxs)(\"g\", {\n    stroke: \"currentColor\",\n    strokeWidth: \"1.5\",\n    children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(\"path\", {\n      strokeLinecap: \"round\",\n      fill: \"none\",\n      d: \"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n    }), /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"path\", {\n      fill: \"currentColor\",\n      strokeLinecap: \"round\",\n      d: \"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n    }), /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"circle\", {\n      fill: \"none\",\n      strokeMiterlimit: \"10\",\n      cx: \"12\",\n      cy: \"12\",\n      r: \"11.25\"\n    })]\n  }),\n  viewBox: \"0 0 24 24\"\n};\nvar Icon = (0, import_system.forwardRef)((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = (0, import_shared_utils.cx)(\"chakra-icon\", className);\n  const customStyles = (0, import_system.useStyleConfig)(\"Icon\", props);\n  const styles = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles\n  };\n  const shared = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles\n  };\n  const _viewBox = viewBox != null ? viewBox : fallbackIcon.viewBox;\n  if (element && typeof element !== \"string\") {\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.svg, {\n      as: element,\n      ...shared,\n      ...rest\n    });\n  }\n  const _path = children != null ? children : fallbackIcon.path;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.svg, {\n    verticalAlign: \"middle\",\n    viewBox: _viewBox,\n    ...shared,\n    ...rest,\n    children: _path\n  });\n});\nIcon.displayName = \"Icon\";\n\n// src/create-icon.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nfunction createIcon(options) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {}\n  } = options;\n  const path = import_react.Children.toArray(options.path);\n  const Comp = (0, import_system2.forwardRef)((props, ref) => /* @__PURE__ */(0, import_jsx_runtime2.jsx)(Icon, {\n    ref,\n    viewBox,\n    ...defaultProps,\n    ...props,\n    children: path.length ? path : /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"path\", {\n      fill: \"currentColor\",\n      d: pathDefinition\n    })\n  }));\n  Comp.displayName = displayName;\n  return Comp;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Icon,\n  createIcon\n});","map":{"version":3,"names":["src_exports","__export","Icon","createIcon","module","exports","__toCommonJS","import_system","require","import_shared_utils","import_jsx_runtime","fallbackIcon","path","jsxs","stroke","strokeWidth","children","jsx","strokeLinecap","fill","d","strokeMiterlimit","cx","cy","r","viewBox","forwardRef","props","ref","as","element","color","focusable","className","__css","rest","_className","customStyles","useStyleConfig","styles","w","h","display","lineHeight","flexShrink","shared","_viewBox","chakra","svg","_path","verticalAlign","displayName","import_system2","import_react","import_jsx_runtime2","options","pathDefinition","defaultProps","Children","toArray","Comp","length"],"sources":["../src/index.ts","../src/icon.tsx","../src/create-icon.tsx"],"sourcesContent":["export { Icon } from \"./icon\"\nexport type { IconProps } from \"./icon\"\nexport { createIcon } from \"./create-icon\"\n","import {\n  chakra,\n  ChakraProps,\n  forwardRef,\n  SystemStyleObject,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst fallbackIcon = {\n  path: (\n    <g stroke=\"currentColor\" strokeWidth=\"1.5\">\n      <path\n        strokeLinecap=\"round\"\n        fill=\"none\"\n        d=\"M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25\"\n      />\n      <path\n        fill=\"currentColor\"\n        strokeLinecap=\"round\"\n        d=\"M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0\"\n      />\n      <circle fill=\"none\" strokeMiterlimit=\"10\" cx=\"12\" cy=\"12\" r=\"11.25\" />\n    </g>\n  ),\n  viewBox: \"0 0 24 24\",\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport interface IconProps\n  extends Omit<React.SVGAttributes<SVGElement>, keyof ChakraProps>,\n    ChakraProps {\n  orientation?: Orientation\n}\n\n/**\n * The Icon component renders as an svg element to help define your own custom components.\n *\n * @see Docs https://chakra-ui.com/docs/components/icon#using-the-icon-component\n */\nexport const Icon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const {\n    as: element,\n    viewBox,\n    color = \"currentColor\",\n    focusable = false,\n    children,\n    className,\n    __css,\n    ...rest\n  } = props\n\n  const _className = cx(\"chakra-icon\", className)\n  const customStyles = useStyleConfig(\"Icon\", props)\n\n  const styles: SystemStyleObject = {\n    w: \"1em\",\n    h: \"1em\",\n    display: \"inline-block\",\n    lineHeight: \"1em\",\n    flexShrink: 0,\n    color,\n    ...__css,\n    ...customStyles,\n  }\n\n  const shared: any = {\n    ref,\n    focusable,\n    className: _className,\n    __css: styles,\n  }\n\n  const _viewBox = viewBox ?? fallbackIcon.viewBox\n\n  /**\n   * If you're using an icon library like `react-icons`.\n   * Note: anyone passing the `as` prop, should manage the `viewBox` from the external component\n   */\n  if (element && typeof element !== \"string\") {\n    return <chakra.svg as={element} {...shared} {...rest} />\n  }\n\n  const _path = (children ?? fallbackIcon.path) as React.ReactNode\n\n  return (\n    <chakra.svg verticalAlign=\"middle\" viewBox={_viewBox} {...shared} {...rest}>\n      {_path}\n    </chakra.svg>\n  )\n})\n\nIcon.displayName = \"Icon\"\n\nexport default Icon\n","import { forwardRef } from \"@chakra-ui/system\"\nimport { Children } from \"react\"\nimport { Icon, IconProps } from \"./icon\"\n\ninterface CreateIconOptions {\n  /**\n   * The icon `svg` viewBox\n   * @default \"0 0 24 24\"\n   */\n  viewBox?: string\n  /**\n   * The `svg` path or group element\n   * @type React.ReactElement | React.ReactElement[]\n   */\n  path?: React.ReactElement | React.ReactElement[]\n  /**\n   * If the `svg` has a single path, simply copy the path's `d` attribute\n   */\n  d?: string\n  /**\n   * The display name useful in the dev tools\n   */\n  displayName?: string\n  /**\n   * Default props automatically passed to the component; overwritable\n   */\n  defaultProps?: IconProps\n}\n\nexport function createIcon(options: CreateIconOptions) {\n  const {\n    viewBox = \"0 0 24 24\",\n    d: pathDefinition,\n    displayName,\n    defaultProps = {},\n  } = options\n  const path = Children.toArray(options.path)\n\n  const Comp = forwardRef<IconProps, \"svg\">((props, ref) => (\n    <Icon ref={ref} viewBox={viewBox} {...defaultProps} {...props}>\n      {path.length ? path : <path fill=\"currentColor\" d={pathDefinition} />}\n    </Icon>\n  ))\n\n  Comp.displayName = displayName\n\n  return Comp\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}