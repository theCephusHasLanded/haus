{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AbsoluteCenter: () => AbsoluteCenter,\n  AspectRatio: () => AspectRatio,\n  Badge: () => Badge,\n  Box: () => Box,\n  Center: () => Center,\n  Circle: () => Circle,\n  Code: () => Code,\n  Container: () => Container,\n  Divider: () => Divider,\n  Flex: () => Flex,\n  Grid: () => Grid,\n  GridItem: () => GridItem,\n  HStack: () => HStack,\n  Heading: () => Heading,\n  Highlight: () => Highlight,\n  Indicator: () => Indicator,\n  Kbd: () => Kbd,\n  Link: () => Link,\n  LinkBox: () => LinkBox,\n  LinkOverlay: () => LinkOverlay,\n  List: () => List,\n  ListIcon: () => ListIcon,\n  ListItem: () => ListItem,\n  Mark: () => Mark,\n  OrderedList: () => OrderedList,\n  SimpleGrid: () => SimpleGrid,\n  Spacer: () => Spacer,\n  Square: () => Square,\n  Stack: () => Stack,\n  StackDivider: () => StackDivider,\n  StackItem: () => StackItem,\n  Text: () => Text,\n  UnorderedList: () => UnorderedList,\n  VStack: () => VStack,\n  Wrap: () => Wrap,\n  WrapItem: () => WrapItem,\n  useHighlight: () => useHighlight,\n  useListStyles: () => useListStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/aspect-ratio.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_breakpoint_utils = require(\"@chakra-ui/breakpoint-utils\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar AspectRatio = (0, import_system.forwardRef)(function (props, ref) {\n  const {\n    ratio = 4 / 3,\n    children,\n    className,\n    ...rest\n  } = props;\n  const child = import_react.Children.only(children);\n  const _className = (0, import_shared_utils.cx)(\"chakra-aspect-ratio\", className);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    ref,\n    position: \"relative\",\n    className: _className,\n    _before: {\n      height: 0,\n      content: `\"\"`,\n      display: \"block\",\n      paddingBottom: (0, import_breakpoint_utils.mapResponsive)(ratio, r => `${1 / r * 100}%`)\n    },\n    __css: {\n      \"& > *:not(style)\": {\n        overflow: \"hidden\",\n        position: \"absolute\",\n        top: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      \"& > img, & > video\": {\n        objectFit: \"cover\"\n      }\n    },\n    ...rest,\n    children: child\n  });\n});\nAspectRatio.displayName = \"AspectRatio\";\n\n// src/badge.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar Badge = (0, import_system2.forwardRef)(function Badge2(props, ref) {\n  const styles = (0, import_system2.useStyleConfig)(\"Badge\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system2.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.span, {\n    ref,\n    className: (0, import_shared_utils2.cx)(\"chakra-badge\", props.className),\n    ...rest,\n    __css: {\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      ...styles\n    }\n  });\n});\nBadge.displayName = \"Badge\";\n\n// src/box.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar Box = (0, import_system3.chakra)(\"div\");\nBox.displayName = \"Box\";\nvar Square = (0, import_system3.forwardRef)(function Square2(props, ref) {\n  const {\n    size,\n    centerContent = true,\n    ...rest\n  } = props;\n  const styles = centerContent ? {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  } : {};\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Box, {\n    ref,\n    boxSize: size,\n    __css: {\n      ...styles,\n      flexShrink: 0,\n      flexGrow: 0\n    },\n    ...rest\n  });\n});\nSquare.displayName = \"Square\";\nvar Circle = (0, import_system3.forwardRef)(function Circle2(props, ref) {\n  const {\n    size,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Square, {\n    size,\n    ref,\n    borderRadius: \"9999px\",\n    ...rest\n  });\n});\nCircle.displayName = \"Circle\";\n\n// src/center.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar Center = (0, import_system4.chakra)(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nCenter.displayName = \"Center\";\nvar centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\"\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\"\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n};\nvar AbsoluteCenter = (0, import_system4.forwardRef)(function AbsoluteCenter2(props, ref) {\n  const {\n    axis = \"both\",\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.chakra.div, {\n    ref,\n    __css: centerStyles[axis],\n    ...rest,\n    position: \"absolute\"\n  });\n});\n\n// src/code.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar Code = (0, import_system5.forwardRef)(function Code2(props, ref) {\n  const styles = (0, import_system5.useStyleConfig)(\"Code\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system5.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system5.chakra.code, {\n    ref,\n    className: (0, import_shared_utils3.cx)(\"chakra-code\", props.className),\n    ...rest,\n    __css: {\n      display: \"inline-block\",\n      ...styles\n    }\n  });\n});\nCode.displayName = \"Code\";\n\n// src/container.tsx\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar Container = (0, import_system6.forwardRef)(function Container2(props, ref) {\n  const {\n    className,\n    centerContent,\n    ...rest\n  } = (0, import_system6.omitThemingProps)(props);\n  const styles = (0, import_system6.useStyleConfig)(\"Container\", props);\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.div, {\n    ref,\n    className: (0, import_shared_utils4.cx)(\"chakra-container\", className),\n    ...rest,\n    __css: {\n      ...styles,\n      ...(centerContent && {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      })\n    }\n  });\n});\nContainer.displayName = \"Container\";\n\n// src/divider.tsx\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nvar Divider = (0, import_system7.forwardRef)(function Divider2(props, ref) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = (0, import_system7.useStyleConfig)(\"Divider\", props);\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = (0, import_system7.omitThemingProps)(props);\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system7.chakra.hr, {\n    ref,\n    \"aria-orientation\": orientation,\n    ...rest,\n    __css: {\n      ...styles,\n      border: \"0\",\n      borderColor,\n      borderStyle,\n      ...dividerStyles[orientation],\n      ...__css\n    },\n    className: (0, import_shared_utils5.cx)(\"chakra-divider\", className)\n  });\n});\nDivider.displayName = \"Divider\";\n\n// src/flex.tsx\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar Flex = (0, import_system8.forwardRef)(function Flex2(props, ref) {\n  const {\n    direction,\n    align,\n    justify,\n    wrap,\n    basis,\n    grow,\n    shrink,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsx)(import_system8.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nFlex.displayName = \"Flex\";\n\n// src/grid.tsx\nvar import_system9 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar Grid = (0, import_system9.forwardRef)(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsx)(import_system9.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGrid.displayName = \"Grid\";\n\n// src/grid-item.tsx\nvar import_system10 = require(\"@chakra-ui/system\");\nvar import_object_utils = require(\"@chakra-ui/object-utils\");\nvar import_breakpoint_utils2 = require(\"@chakra-ui/breakpoint-utils\");\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nfunction spanFn(span) {\n  return (0, import_breakpoint_utils2.mapResponsive)(span, value => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`);\n}\nvar GridItem = (0, import_system10.forwardRef)(function GridItem2(props, ref) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props;\n  const styles = (0, import_object_utils.compact)({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(import_system10.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\nGridItem.displayName = \"GridItem\";\n\n// src/heading.tsx\nvar import_system11 = require(\"@chakra-ui/system\");\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime11 = require(\"react/jsx-runtime\");\nvar Heading = (0, import_system11.forwardRef)(function Heading2(props, ref) {\n  const styles = (0, import_system11.useStyleConfig)(\"Heading\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system11.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime11.jsx)(import_system11.chakra.h2, {\n    ref,\n    className: (0, import_shared_utils6.cx)(\"chakra-heading\", props.className),\n    ...rest,\n    __css: styles\n  });\n});\nHeading.displayName = \"Heading\";\n\n// src/highlight.tsx\nvar import_system12 = require(\"@chakra-ui/system\");\nvar import_react2 = require(\"react\");\nvar import_jsx_runtime12 = require(\"react/jsx-runtime\");\nvar escapeRegexp = term => term.replace(/[|\\\\{}()[\\]^$+*?.-]/g, char => `\\\\${char}`);\nfunction buildRegex(query) {\n  const _query = query.filter(text => text.length !== 0).map(text => escapeRegexp(text.trim()));\n  if (!_query.length) {\n    return null;\n  }\n  return new RegExp(`(${_query.join(\"|\")})`, \"ig\");\n}\nfunction highlightWords({\n  text,\n  query\n}) {\n  const regex = buildRegex(Array.isArray(query) ? query : [query]);\n  if (!regex) {\n    return [{\n      text,\n      match: false\n    }];\n  }\n  const result = text.split(regex).filter(Boolean);\n  return result.map(str => ({\n    text: str,\n    match: regex.test(str)\n  }));\n}\nfunction useHighlight(props) {\n  const {\n    text,\n    query\n  } = props;\n  return (0, import_react2.useMemo)(() => highlightWords({\n    text,\n    query\n  }), [text, query]);\n}\nvar Mark = (0, import_system12.forwardRef)(function Mark2(props, ref) {\n  const styles = (0, import_system12.useStyleConfig)(\"Mark\", props);\n  const ownProps = (0, import_system12.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime12.jsx)(Box, {\n    ref,\n    ...ownProps,\n    as: \"mark\",\n    __css: {\n      bg: \"transparent\",\n      whiteSpace: \"nowrap\",\n      ...styles\n    }\n  });\n});\nfunction Highlight(props) {\n  const {\n    children,\n    query,\n    styles\n  } = props;\n  if (typeof children !== \"string\") {\n    throw new Error(\"The children prop of Highlight must be a string\");\n  }\n  const chunks = useHighlight({\n    query,\n    text: children\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime12.jsx)(import_jsx_runtime12.Fragment, {\n    children: chunks.map((chunk, index) => {\n      return chunk.match ? /* @__PURE__ */(0, import_jsx_runtime12.jsx)(Mark, {\n        sx: styles,\n        children: chunk.text\n      }, index) : /* @__PURE__ */(0, import_jsx_runtime12.jsx)(import_react2.Fragment, {\n        children: chunk.text\n      }, index);\n    })\n  });\n}\n\n// src/kbd.tsx\nvar import_system13 = require(\"@chakra-ui/system\");\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime13 = require(\"react/jsx-runtime\");\nvar Kbd = (0, import_system13.forwardRef)(function Kbd2(props, ref) {\n  const styles = (0, import_system13.useStyleConfig)(\"Kbd\", props);\n  const {\n    className,\n    ...rest\n  } = (0, import_system13.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime13.jsx)(import_system13.chakra.kbd, {\n    ref,\n    className: (0, import_shared_utils7.cx)(\"chakra-kbd\", className),\n    ...rest,\n    __css: {\n      fontFamily: \"mono\",\n      ...styles\n    }\n  });\n});\nKbd.displayName = \"Kbd\";\n\n// src/link.tsx\nvar import_system14 = require(\"@chakra-ui/system\");\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime14 = require(\"react/jsx-runtime\");\nvar Link = (0, import_system14.forwardRef)(function Link2(props, ref) {\n  const styles = (0, import_system14.useStyleConfig)(\"Link\", props);\n  const {\n    className,\n    isExternal,\n    ...rest\n  } = (0, import_system14.omitThemingProps)(props);\n  return /* @__PURE__ */(0, import_jsx_runtime14.jsx)(import_system14.chakra.a, {\n    target: isExternal ? \"_blank\" : void 0,\n    rel: isExternal ? \"noopener\" : void 0,\n    ref,\n    className: (0, import_shared_utils8.cx)(\"chakra-link\", className),\n    ...rest,\n    __css: styles\n  });\n});\nLink.displayName = \"Link\";\n\n// src/link-box.tsx\nvar import_system15 = require(\"@chakra-ui/system\");\nvar import_shared_utils9 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime15 = require(\"react/jsx-runtime\");\nvar LinkOverlay = (0, import_system15.forwardRef)(function LinkOverlay2(props, ref) {\n  const {\n    isExternal,\n    target,\n    rel,\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime15.jsx)(import_system15.chakra.a, {\n    ...rest,\n    ref,\n    className: (0, import_shared_utils9.cx)(\"chakra-linkbox__overlay\", className),\n    rel: isExternal ? \"noopener noreferrer\" : rel,\n    target: isExternal ? \"_blank\" : target,\n    __css: {\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        zIndex: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }\n  });\n});\nvar LinkBox = (0, import_system15.forwardRef)(function LinkBox2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime15.jsx)(import_system15.chakra.div, {\n    ref,\n    position: \"relative\",\n    ...rest,\n    className: (0, import_shared_utils9.cx)(\"chakra-linkbox\", className),\n    __css: {\n      /* Elevate the links and abbreviations up */\n      \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n        position: \"relative\",\n        zIndex: 1\n      }\n    }\n  });\n});\n\n// src/list.tsx\nvar import_icon = require(\"@chakra-ui/icon\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\nvar import_system16 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime16 = require(\"react/jsx-runtime\");\nvar [ListStylesProvider, useListStyles] = (0, import_react_context.createContext)({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `\n});\nvar List = (0, import_system16.forwardRef)(function List2(props, ref) {\n  const styles = (0, import_system16.useMultiStyleConfig)(\"List\", props);\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = (0, import_system16.omitThemingProps)(props);\n  const validChildren = (0, import_react_children_utils.getValidChildren)(children);\n  const selector = \"& > *:not(style) ~ *:not(style)\";\n  const spacingStyle = spacing ? {\n    [selector]: {\n      mt: spacing\n    }\n  } : {};\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(ListStylesProvider, {\n    value: styles,\n    children: /* @__PURE__ */(0, import_jsx_runtime16.jsx)(import_system16.chakra.ul, {\n      ref,\n      listStyleType: styleType,\n      listStylePosition: stylePosition,\n      role: \"list\",\n      __css: {\n        ...styles.container,\n        ...spacingStyle\n      },\n      ...rest,\n      children: validChildren\n    })\n  });\n});\nList.displayName = \"List\";\nvar OrderedList = (0, import_system16.forwardRef)((props, ref) => {\n  const {\n    as,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(List, {\n    ref,\n    as: \"ol\",\n    styleType: \"decimal\",\n    marginStart: \"1em\",\n    ...rest\n  });\n});\nOrderedList.displayName = \"OrderedList\";\nvar UnorderedList = (0, import_system16.forwardRef)(function UnorderedList2(props, ref) {\n  const {\n    as,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(List, {\n    ref,\n    as: \"ul\",\n    styleType: \"initial\",\n    marginStart: \"1em\",\n    ...rest\n  });\n});\nUnorderedList.displayName = \"UnorderedList\";\nvar ListItem = (0, import_system16.forwardRef)(function ListItem2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(import_system16.chakra.li, {\n    ref,\n    ...props,\n    __css: styles.item\n  });\n});\nListItem.displayName = \"ListItem\";\nvar ListIcon = (0, import_system16.forwardRef)(function ListIcon2(props, ref) {\n  const styles = useListStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime16.jsx)(import_icon.Icon, {\n    ref,\n    role: \"presentation\",\n    ...props,\n    __css: styles.icon\n  });\n});\nListIcon.displayName = \"ListIcon\";\n\n// src/simple-grid.tsx\nvar import_system17 = require(\"@chakra-ui/system\");\nvar import_breakpoint_utils3 = require(\"@chakra-ui/breakpoint-utils\");\nvar import_jsx_runtime17 = require(\"react/jsx-runtime\");\nvar SimpleGrid = (0, import_system17.forwardRef)(function SimpleGrid2(props, ref) {\n  const {\n    columns,\n    spacingX,\n    spacingY,\n    spacing,\n    minChildWidth,\n    ...rest\n  } = props;\n  const theme = (0, import_system17.useTheme)();\n  const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n  return /* @__PURE__ */(0, import_jsx_runtime17.jsx)(Grid, {\n    ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns,\n    ...rest\n  });\n});\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return (0, import_breakpoint_utils3.mapResponsive)(width, value => {\n    const _value = (0, import_system17.getToken)(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return (0, import_breakpoint_utils3.mapResponsive)(count, value => value === null ? null : `repeat(${value}, minmax(0, 1fr))`);\n}\n\n// src/spacer.tsx\nvar import_system18 = require(\"@chakra-ui/system\");\nvar Spacer = (0, import_system18.chakra)(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\"\n  }\n});\nSpacer.displayName = \"Spacer\";\n\n// src/stack/h-stack.tsx\nvar import_system21 = require(\"@chakra-ui/system\");\n\n// src/stack/stack.tsx\nvar import_react_children_utils2 = require(\"@chakra-ui/react-children-utils\");\nvar import_shared_utils10 = require(\"@chakra-ui/shared-utils\");\nvar import_system20 = require(\"@chakra-ui/system\");\nvar import_react3 = require(\"react\");\n\n// src/stack/stack-item.tsx\nvar import_system19 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime18 = require(\"react/jsx-runtime\");\nvar StackItem = props => /* @__PURE__ */(0, import_jsx_runtime18.jsx)(import_system19.chakra.div, {\n  className: \"chakra-stack__item\",\n  ...props,\n  __css: {\n    display: \"inline-block\",\n    flex: \"0 0 auto\",\n    minWidth: 0,\n    ...props[\"__css\"]\n  }\n});\nStackItem.displayName = \"StackItem\";\n\n// src/stack/stack.utils.tsx\nvar import_breakpoint_utils4 = require(\"@chakra-ui/breakpoint-utils\");\nfunction getDividerStyles(options) {\n  const {\n    spacing,\n    direction\n  } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": (0, import_breakpoint_utils4.mapResponsive)(direction, value => dividerStyles[value])\n  };\n}\n\n// src/stack/stack.tsx\nvar import_jsx_runtime19 = require(\"react/jsx-runtime\");\nvar Stack = (0, import_system20.forwardRef)((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = (0, import_react3.useMemo)(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = (0, import_react3.useMemo)(() => {\n    const validChildren = (0, import_react_children_utils2.getValidChildren)(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */(0, import_jsx_runtime19.jsx)(StackItem, {\n        children: child\n      }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider) return _child;\n      const clonedDivider = (0, import_react3.cloneElement)(divider, {\n        __css: dividerStyle\n      });\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */(0, import_jsx_runtime19.jsxs)(import_react3.Fragment, {\n        children: [_child, _divider]\n      }, key);\n    });\n  }, [divider, dividerStyle, hasDivider, shouldUseChildren, shouldWrapChildren, children]);\n  const _className = (0, import_shared_utils10.cx)(\"chakra-stack\", className);\n  return /* @__PURE__ */(0, import_jsx_runtime19.jsx)(import_system20.chakra.div, {\n    ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: direction,\n    flexWrap: wrap,\n    gap: hasDivider ? void 0 : spacing,\n    className: _className,\n    ...rest,\n    children: clones\n  });\n});\nStack.displayName = \"Stack\";\n\n// src/stack/h-stack.tsx\nvar import_jsx_runtime20 = require(\"react/jsx-runtime\");\nvar HStack = (0, import_system21.forwardRef)((props, ref) => /* @__PURE__ */(0, import_jsx_runtime20.jsx)(Stack, {\n  align: \"center\",\n  ...props,\n  direction: \"row\",\n  ref\n}));\nHStack.displayName = \"HStack\";\n\n// src/stack/stack-divider.tsx\nvar import_system22 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime21 = require(\"react/jsx-runtime\");\nvar StackDivider = props => /* @__PURE__ */(0, import_jsx_runtime21.jsx)(import_system22.chakra.div, {\n  className: \"chakra-stack__divider\",\n  ...props,\n  __css: {\n    ...props[\"__css\"],\n    borderWidth: 0,\n    alignSelf: \"stretch\",\n    borderColor: \"inherit\",\n    width: \"auto\",\n    height: \"auto\"\n  }\n});\nStackDivider.displayName = \"StackDivider\";\n\n// src/stack/v-stack.tsx\nvar import_system23 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime22 = require(\"react/jsx-runtime\");\nvar VStack = (0, import_system23.forwardRef)((props, ref) => /* @__PURE__ */(0, import_jsx_runtime22.jsx)(Stack, {\n  align: \"center\",\n  ...props,\n  direction: \"column\",\n  ref\n}));\nVStack.displayName = \"VStack\";\n\n// src/text.tsx\nvar import_system24 = require(\"@chakra-ui/system\");\nvar import_shared_utils11 = require(\"@chakra-ui/shared-utils\");\nvar import_object_utils2 = require(\"@chakra-ui/object-utils\");\nvar import_jsx_runtime23 = require(\"react/jsx-runtime\");\nvar Text = (0, import_system24.forwardRef)(function Text2(props, ref) {\n  const styles = (0, import_system24.useStyleConfig)(\"Text\", props);\n  const {\n    className,\n    align,\n    decoration,\n    casing,\n    ...rest\n  } = (0, import_system24.omitThemingProps)(props);\n  const aliasedProps = (0, import_object_utils2.compact)({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime23.jsx)(import_system24.chakra.p, {\n    ref,\n    className: (0, import_shared_utils11.cx)(\"chakra-text\", props.className),\n    ...aliasedProps,\n    ...rest,\n    __css: styles\n  });\n});\nText.displayName = \"Text\";\n\n// src/wrap.tsx\nvar import_shared_utils12 = require(\"@chakra-ui/shared-utils\");\nvar import_system25 = require(\"@chakra-ui/system\");\nvar import_react4 = require(\"react\");\nvar import_jsx_runtime24 = require(\"react/jsx-runtime\");\nvar Wrap = (0, import_system25.forwardRef)(function Wrap2(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const _children = (0, import_react4.useMemo)(() => shouldWrapChildren ? import_react4.Children.map(children, (child, index) => /* @__PURE__ */(0, import_jsx_runtime24.jsx)(WrapItem, {\n    children: child\n  }, index)) : children, [children, shouldWrapChildren]);\n  return /* @__PURE__ */(0, import_jsx_runtime24.jsx)(import_system25.chakra.div, {\n    ref,\n    className: (0, import_shared_utils12.cx)(\"chakra-wrap\", className),\n    ...rest,\n    children: /* @__PURE__ */(0, import_jsx_runtime24.jsx)(import_system25.chakra.ul, {\n      className: \"chakra-wrap__list\",\n      __css: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: justify,\n        alignItems: align,\n        flexDirection: direction,\n        listStyleType: \"none\",\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        padding: \"0\"\n      },\n      children: _children\n    })\n  });\n});\nWrap.displayName = \"Wrap\";\nvar WrapItem = (0, import_system25.forwardRef)(function WrapItem2(props, ref) {\n  const {\n    className,\n    ...rest\n  } = props;\n  return /* @__PURE__ */(0, import_jsx_runtime24.jsx)(import_system25.chakra.li, {\n    ref,\n    __css: {\n      display: \"flex\",\n      alignItems: \"flex-start\"\n    },\n    className: (0, import_shared_utils12.cx)(\"chakra-wrap__listitem\", className),\n    ...rest\n  });\n});\nWrapItem.displayName = \"WrapItem\";\n\n// src/indicator.tsx\nvar import_breakpoint_utils5 = require(\"@chakra-ui/breakpoint-utils\");\nvar import_system26 = require(\"@chakra-ui/system\");\nvar import_react5 = require(\"react\");\nvar import_jsx_runtime25 = require(\"react/jsx-runtime\");\nvar Indicator = (0, import_system26.forwardRef)(function Indicator2(props, ref) {\n  const {\n    offsetX,\n    offsetY,\n    offset = \"0\",\n    placement = \"top-end\",\n    ...rest\n  } = props;\n  const styles = (0, import_react5.useMemo)(() => ({\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    insetBlockStart: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [side] = v.split(\"-\");\n      const map = {\n        top: offsetY != null ? offsetY : offset,\n        middle: \"50%\",\n        bottom: \"auto\"\n      };\n      return map[side];\n    }),\n    insetBlockEnd: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [side] = v.split(\"-\");\n      const map = {\n        top: \"auto\",\n        middle: \"50%\",\n        bottom: offsetY != null ? offsetY : offset\n      };\n      return map[side];\n    }),\n    insetStart: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [, align] = v.split(\"-\");\n      const map = {\n        start: offsetX != null ? offsetX : offset,\n        center: \"50%\",\n        end: \"auto\"\n      };\n      return map[align];\n    }),\n    insetEnd: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [, align] = v.split(\"-\");\n      const map = {\n        start: \"auto\",\n        center: \"50%\",\n        end: offsetX != null ? offsetX : offset\n      };\n      return map[align];\n    }),\n    translate: (0, import_breakpoint_utils5.mapResponsive)(placement, v => {\n      const [side, align] = v.split(\"-\");\n      const mapX = {\n        start: \"-50%\",\n        center: \"-50%\",\n        end: \"50%\"\n      };\n      const mapY = {\n        top: \"-50%\",\n        middle: \"-50%\",\n        bottom: \"50%\"\n      };\n      return `${mapX[align]} ${mapY[side]}`;\n    })\n  }), [offset, offsetX, offsetY, placement]);\n  return /* @__PURE__ */(0, import_jsx_runtime25.jsx)(import_system26.chakra.div, {\n    ref,\n    __css: styles,\n    ...rest\n  });\n});\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AbsoluteCenter,\n  AspectRatio,\n  Badge,\n  Box,\n  Center,\n  Circle,\n  Code,\n  Container,\n  Divider,\n  Flex,\n  Grid,\n  GridItem,\n  HStack,\n  Heading,\n  Highlight,\n  Indicator,\n  Kbd,\n  Link,\n  LinkBox,\n  LinkOverlay,\n  List,\n  ListIcon,\n  ListItem,\n  Mark,\n  OrderedList,\n  SimpleGrid,\n  Spacer,\n  Square,\n  Stack,\n  StackDivider,\n  StackItem,\n  Text,\n  UnorderedList,\n  VStack,\n  Wrap,\n  WrapItem,\n  useHighlight,\n  useListStyles\n});","map":{"version":3,"names":["src_exports","__export","AbsoluteCenter","AspectRatio","Badge","Box","Center","Circle","Code","Container","Divider","Flex","Grid","GridItem","HStack","Heading","Highlight","Indicator","Kbd","Link","LinkBox","LinkOverlay","List","ListIcon","ListItem","Mark","OrderedList","SimpleGrid","Spacer","Square","Stack","StackDivider","StackItem","Text","UnorderedList","VStack","Wrap","WrapItem","useHighlight","useListStyles","module","exports","__toCommonJS","import_system","require","import_breakpoint_utils","import_shared_utils","import_react","import_jsx_runtime","forwardRef","props","ref","ratio","children","className","rest","child","Children","only","_className","cx","jsx","chakra","div","position","_before","height","content","display","paddingBottom","mapResponsive","r","__css","overflow","top","right","bottom","left","justifyContent","alignItems","width","objectFit","displayName","import_system2","import_shared_utils2","import_jsx_runtime2","Badge2","styles","useStyleConfig","omitThemingProps","span","whiteSpace","verticalAlign","import_system3","import_jsx_runtime3","Square2","size","centerContent","boxSize","flexShrink","flexGrow","Circle2","borderRadius","import_system4","import_jsx_runtime4","baseStyle","centerStyles","horizontal","insetStart","transform","vertical","both","AbsoluteCenter2","axis","import_system5","import_shared_utils3","import_jsx_runtime5","Code2","code","import_system6","import_shared_utils4","import_jsx_runtime6","Container2","flexDirection","import_system7","import_shared_utils5","import_jsx_runtime7","Divider2","borderLeftWidth","borderBottomWidth","borderTopWidth","borderRightWidth","borderWidth","borderStyle","borderColor","orientation","dividerStyles","hr","border","import_system8","import_jsx_runtime8","Flex2","direction","align","justify","wrap","basis","grow","shrink","flexWrap","flexBasis","import_system9","import_jsx_runtime9","Grid2","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","import_system10","import_object_utils","import_breakpoint_utils2","import_jsx_runtime10","spanFn","value","GridItem2","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","compact","gridArea","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","import_system11","import_shared_utils6","import_jsx_runtime11","Heading2","h2","import_system12","import_react2","import_jsx_runtime12","escapeRegexp","term","replace","char","buildRegex","query","_query","filter","text","length","map","trim","RegExp","join","highlightWords","regex","Array","isArray","match","result","split","Boolean","str","test","useMemo","Mark2","ownProps","as","bg","Error","chunks","Fragment","chunk","index","sx","import_system13","import_shared_utils7","import_jsx_runtime13","Kbd2","kbd","fontFamily","import_system14","import_shared_utils8","import_jsx_runtime14","Link2","isExternal","a","target","rel","import_system15","import_shared_utils9","import_jsx_runtime15","LinkOverlay2","cursor","zIndex","LinkBox2","import_icon","import_react_context","import_react_children_utils","import_system16","import_jsx_runtime16","ListStylesProvider","createContext","name","errorMessage","List2","useMultiStyleConfig","styleType","stylePosition","spacing","validChildren","getValidChildren","selector","spacingStyle","mt","ul","listStyleType","listStylePosition","role","container","marginStart","UnorderedList2","ListItem2","li","item","ListIcon2","Icon","icon","import_system17","import_breakpoint_utils3","import_jsx_runtime17","SimpleGrid2","columns","spacingX","spacingY","minChildWidth","theme","useTheme","widthToColumns","countToColumns","toPx","n","_value","getToken","count","import_system18","flex","justifySelf","alignSelf","import_system21","import_react_children_utils2","import_shared_utils10","import_system20","import_react3","import_system19","import_jsx_runtime18","minWidth","import_breakpoint_utils4","getDividerStyles","options","my","mx","import_jsx_runtime19","isInline","directionProp","divider","shouldWrapChildren","dividerStyle","hasDivider","shouldUseChildren","clones","key","isLast","wrappedChild","_child","clonedDivider","cloneElement","_divider","jsxs","import_jsx_runtime20","import_system22","import_jsx_runtime21","import_system23","import_jsx_runtime22","import_system24","import_shared_utils11","import_object_utils2","import_jsx_runtime23","Text2","decoration","casing","aliasedProps","textAlign","textDecoration","textTransform","p","import_shared_utils12","import_system25","import_react4","import_jsx_runtime24","Wrap2","_children","padding","WrapItem2","import_breakpoint_utils5","import_system26","import_react5","import_jsx_runtime25","Indicator2","offsetX","offsetY","offset","placement","insetBlockStart","v","side","middle","insetBlockEnd","start","center","end","insetEnd","translate","mapX","mapY"],"sources":["../src/index.ts","../src/aspect-ratio.tsx","../src/badge.tsx","../src/box.tsx","../src/center.tsx","../src/code.tsx","../src/container.tsx","../src/divider.tsx","../src/flex.tsx","../src/grid.tsx","../src/grid-item.tsx","../src/heading.tsx","../src/highlight.tsx","../src/kbd.tsx","../src/link.tsx","../src/link-box.tsx","../src/list.tsx","../src/simple-grid.tsx","../src/spacer.tsx","../src/stack/h-stack.tsx","../src/stack/stack.tsx","../src/stack/stack-item.tsx","../src/stack/stack.utils.tsx","../src/stack/stack-divider.tsx","../src/stack/v-stack.tsx","../src/text.tsx","../src/wrap.tsx","../src/indicator.tsx"],"sourcesContent":["export { AspectRatio } from \"./aspect-ratio\"\nexport type { AspectRatioProps } from \"./aspect-ratio\"\nexport { Badge } from \"./badge\"\nexport type { BadgeProps } from \"./badge\"\nexport { Box, Square, Circle } from \"./box\"\nexport type { BoxProps, SquareProps } from \"./box\"\nexport {\n  AbsoluteCenter,\n  Center,\n  type AbsoluteCenterProps,\n  type CenterProps,\n} from \"./center\"\nexport { Code } from \"./code\"\nexport type { CodeProps } from \"./code\"\nexport { Container } from \"./container\"\nexport type { ContainerProps } from \"./container\"\nexport { Divider } from \"./divider\"\nexport type { DividerProps } from \"./divider\"\nexport { Flex } from \"./flex\"\nexport type { FlexProps } from \"./flex\"\nexport { Grid } from \"./grid\"\nexport type { GridProps } from \"./grid\"\nexport { GridItem } from \"./grid-item\"\nexport type { GridItemProps } from \"./grid-item\"\nexport { Heading } from \"./heading\"\nexport type { HeadingProps } from \"./heading\"\nexport { Highlight, Mark, useHighlight } from \"./highlight\"\nexport type { HighlightProps, MarkProps, UseHighlightProps } from \"./highlight\"\nexport { Kbd } from \"./kbd\"\nexport type { KbdProps } from \"./kbd\"\nexport { Link } from \"./link\"\nexport type { LinkProps } from \"./link\"\nexport { LinkBox, LinkOverlay } from \"./link-box\"\nexport type { LinkBoxProps, LinkOverlayProps } from \"./link-box\"\nexport {\n  List,\n  ListIcon,\n  ListItem,\n  OrderedList,\n  UnorderedList,\n  useListStyles,\n} from \"./list\"\nexport type { ListItemProps, ListProps } from \"./list\"\nexport { SimpleGrid } from \"./simple-grid\"\nexport type { SimpleGridProps } from \"./simple-grid\"\nexport { Spacer } from \"./spacer\"\nexport type { SpacerProps } from \"./spacer\"\nexport { HStack, Stack, StackDivider, StackItem, VStack } from \"./stack\"\nexport type { StackDirection, StackDividerProps, StackProps } from \"./stack\"\nexport { Text } from \"./text\"\nexport type { TextProps } from \"./text\"\nexport { Wrap, WrapItem } from \"./wrap\"\nexport type { WrapItemProps, WrapProps } from \"./wrap\"\nexport { Indicator } from \"./indicator\"\nexport type { IndicatorProps } from \"./indicator\"\n","import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children } from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends Omit<HTMLChakraProps<\"div\">, \"aspectRatio\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(function (\n  props,\n  ref,\n) {\n  const { ratio = 4 / 3, children, className, ...rest } = props\n\n  // enforce single child\n  const child = Children.only(children)\n\n  const _className = cx(\"chakra-aspect-ratio\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      className={_className}\n      _before={{\n        height: 0,\n        content: `\"\"`,\n        display: \"block\",\n        paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n      }}\n      __css={{\n        \"& > *:not(style)\": {\n          overflow: \"hidden\",\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n        },\n        \"& > img, & > video\": {\n          objectFit: \"cover\",\n        },\n      }}\n      {...rest}\n    >\n      {child}\n    </chakra.div>\n  )\n})\n\nAspectRatio.displayName = \"AspectRatio\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface BadgeProps\n  extends HTMLChakraProps<\"span\">,\n    ThemingProps<\"Badge\"> {}\n\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/badge\n */\nexport const Badge = forwardRef<BadgeProps, \"span\">(function Badge(props, ref) {\n  const styles = useStyleConfig(\"Badge\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.span\n      ref={ref}\n      className={cx(\"chakra-badge\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        verticalAlign: \"middle\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nBadge.displayName = \"Badge\"\n","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface CenterProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * React component used to horizontally and vertically center its child.\n * It uses the popular `display: flex` centering technique.\n *\n * @see Docs https://chakra-ui.com/center\n */\nexport const Center = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n})\n\nCenter.displayName = \"Center\"\n\nexport interface AbsoluteCenterProps extends HTMLChakraProps<\"div\"> {\n  axis?: \"horizontal\" | \"vertical\" | \"both\"\n}\n\nconst centerStyles = {\n  horizontal: {\n    insetStart: \"50%\",\n    transform: \"translateX(-50%)\",\n  },\n  vertical: {\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n  both: {\n    insetStart: \"50%\",\n    top: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n}\n\n/**\n * React component used to horizontally and vertically center an element\n * relative to its parent dimensions.\n *\n * It uses the `position: absolute` strategy.\n *\n * @see Docs https://chakra-ui.com/center\n * @see WebDev https://web.dev/centering-in-css/#5.-pop-and-plop\n */\nexport const AbsoluteCenter = forwardRef<AbsoluteCenterProps, \"div\">(\n  function AbsoluteCenter(props, ref) {\n    const { axis = \"both\", ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        __css={centerStyles[axis]}\n        {...rest}\n        position=\"absolute\"\n      />\n    )\n  },\n)\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface CodeProps\n  extends HTMLChakraProps<\"code\">,\n    ThemingProps<\"Code\"> {}\n\n/**\n * React component to render inline code snippets.\n *\n * @see Docs https://chakra-ui.com/code\n */\nexport const Code = forwardRef<CodeProps, \"code\">(function Code(props, ref) {\n  const styles = useStyleConfig(\"Code\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.code\n      ref={ref}\n      className={cx(\"chakra-code\", props.className)}\n      {...rest}\n      __css={{\n        display: \"inline-block\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nCode.displayName = \"Code\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It displays a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">(function Divider(\n  props,\n  ref,\n) {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Divider\"> {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nDivider.displayName = \"Divider\"\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface FlexOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n\n  /**\n   * Shorthand for `flexDirection` style prop\n   * @type SystemProps[\"flexDirection\"]\n   * @default \"row\"\n   */\n  direction?: SystemProps[\"flexDirection\"]\n\n  /**\n   * Shorthand for `flexBasis` style prop\n   * @type SystemProps[\"flexBasis\"]\n   */\n  basis?: SystemProps[\"flexBasis\"]\n\n  /**\n   * Shorthand for `flexGrow` style prop\n   * @type SystemProps[\"flexGrow\"]\n   */\n  grow?: SystemProps[\"flexGrow\"]\n\n  /**\n   * Shorthand for `flexShrink` style prop\n   * @type SystemProps[\"flexShrink\"]\n   */\n  shrink?: SystemProps[\"flexShrink\"]\n}\n\nexport interface FlexProps extends HTMLChakraProps<\"div\">, FlexOptions {}\n\n/**\n * React component used to create flexbox layouts.\n *\n * It renders a `div` with `display: flex` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/flex\n */\nexport const Flex = forwardRef<FlexProps, \"div\">(function Flex(props, ref) {\n  const { direction, align, justify, wrap, basis, grow, shrink, ...rest } =\n    props\n\n  const styles = {\n    display: \"flex\",\n    flexDirection: direction,\n    alignItems: align,\n    justifyContent: justify,\n    flexWrap: wrap,\n    flexBasis: basis,\n    flexGrow: grow,\n    flexShrink: shrink,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nFlex.displayName = \"Flex\"\n","import {\n  chakra,\n  forwardRef,\n  SystemProps,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface GridOptions {\n  /**\n   * Shorthand prop for `gridTemplateColumns`\n   * @type SystemProps[\"gridTemplateColumns\"]\n   */\n  templateColumns?: SystemProps[\"gridTemplateColumns\"]\n  /**\n   * Shorthand prop for `gridGap`\n   * @type SystemProps[\"gridGap\"]\n   */\n  gap?: SystemProps[\"gridGap\"]\n  /**\n   * Shorthand prop for `gridRowGap`\n   * @type SystemProps[\"gridRowGap\"]\n   */\n  rowGap?: SystemProps[\"gridRowGap\"]\n  /**\n   * Shorthand prop for `gridColumnGap`\n   * @type SystemProps[\"gridColumnGap\"]\n   */\n  columnGap?: SystemProps[\"gridColumnGap\"]\n  /**\n   * Shorthand prop for `gridAutoFlow`\n   * @type SystemProps[\"gridAutoFlow\"]\n   */\n  autoFlow?: SystemProps[\"gridAutoFlow\"]\n  /**\n   * Shorthand prop for `gridAutoRows`\n   * @type SystemProps[\"gridAutoRows\"]\n   */\n  autoRows?: SystemProps[\"gridAutoRows\"]\n  /**\n   * Shorthand prop for `gridAutoColumns`\n   * @type SystemProps[\"gridAutoColumns\"]\n   */\n  autoColumns?: SystemProps[\"gridAutoColumns\"]\n  /**\n   * Shorthand prop for `gridTemplateRows`\n   * @type SystemProps[\"gridTemplateRows\"]\n   */\n  templateRows?: SystemProps[\"gridTemplateRows\"]\n  /**\n   * Shorthand prop for `gridTemplateAreas`\n   * @type SystemProps[\"gridTemplateAreas\"]\n   */\n  templateAreas?: SystemProps[\"gridTemplateAreas\"]\n  /**\n   * Shorthand prop for `gridColumn`\n   * @type SystemProps[\"gridColumn\"]\n   */\n  column?: SystemProps[\"gridColumn\"]\n  /**\n   * Shorthand prop for `gridRow`\n   * @type SystemProps[\"gridRow\"]\n   */\n  row?: SystemProps[\"gridRow\"]\n}\n\nexport interface GridProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof GridOptions>,\n    GridOptions {}\n\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/grid\n */\nexport const Grid = forwardRef<GridProps, \"div\">(function Grid(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props\n\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns,\n  }\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGrid.displayName = \"Grid\"\n","import {\n  ResponsiveValue,\n  SystemProps,\n  forwardRef,\n  chakra,\n} from \"@chakra-ui/system\"\nimport { compact } from \"@chakra-ui/object-utils\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nimport { BoxProps } from \"./box\"\n\nexport interface GridItemProps extends BoxProps {\n  /**\n   * Shorthand prop for `gridArea`\n   * @type SystemProps[\"gridArea\"]\n   */\n  area?: SystemProps[\"gridArea\"]\n  /**\n   * The number of columns the grid item should `span`.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colSpan?: ResponsiveValue<number | \"auto\">\n  /**\n   * The column number the grid item should start.\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  colEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowStart?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowEnd?: ResponsiveValue<number | \"auto\">\n  /**\n   * @type ResponsiveValue<number | \"auto\">\n   */\n  rowSpan?: ResponsiveValue<number | \"auto\">\n}\n\nfunction spanFn(span?: ResponsiveValue<number | \"auto\">) {\n  return mapResponsive(span, (value) =>\n    value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`,\n  )\n}\n\nexport const GridItem = forwardRef<GridItemProps, \"div\">(function GridItem(\n  props,\n  ref,\n) {\n  const {\n    area,\n    colSpan,\n    colStart,\n    colEnd,\n    rowEnd,\n    rowSpan,\n    rowStart,\n    ...rest\n  } = props\n\n  const styles = compact({\n    gridArea: area,\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd,\n  })\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n\nGridItem.displayName = \"GridItem\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n","import {\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { Fragment, useMemo } from \"react\"\nimport { Box } from \"./box\"\n\ntype Chunk = {\n  text: string\n  match: boolean\n}\n\ntype HighlightOptions = {\n  text: string\n  query: string | string[]\n}\n\nconst escapeRegexp = (term: string): string =>\n  term.replace(/[|\\\\{}()[\\]^$+*?.-]/g, (char: string) => `\\\\${char}`)\n\nfunction buildRegex(query: string[]) {\n  const _query = query\n    .filter((text) => text.length !== 0)\n    .map((text) => escapeRegexp(text.trim()))\n  if (!_query.length) {\n    return null\n  }\n\n  return new RegExp(`(${_query.join(\"|\")})`, \"ig\")\n}\n\nfunction highlightWords({ text, query }: HighlightOptions): Chunk[] {\n  const regex = buildRegex(Array.isArray(query) ? query : [query])\n  if (!regex) {\n    return [{ text, match: false }]\n  }\n  const result = text.split(regex).filter(Boolean)\n  return result.map((str) => ({ text: str, match: regex.test(str) }))\n}\n\nexport type UseHighlightProps = HighlightOptions\n\nexport function useHighlight(props: UseHighlightProps) {\n  const { text, query } = props\n  return useMemo(() => highlightWords({ text, query }), [text, query])\n}\n\nexport type HighlightProps = {\n  query: string | string[]\n  children: string | ((props: Chunk[]) => React.ReactNode)\n  styles?: SystemStyleObject\n}\n\nexport type MarkProps = ThemingProps<\"Mark\"> & HTMLChakraProps<\"mark\">\n\nexport const Mark = forwardRef<MarkProps, \"mark\">(function Mark(props, ref) {\n  const styles = useStyleConfig(\"Mark\", props)\n  const ownProps = omitThemingProps(props)\n  return (\n    <Box\n      ref={ref}\n      {...ownProps}\n      as=\"mark\"\n      __css={{ bg: \"transparent\", whiteSpace: \"nowrap\", ...styles }}\n    />\n  )\n})\n\n/**\n * `Highlight` allows you to highlight substrings of a text.\n *\n * @see Docs https://chakra-ui.com/docs/components/highlight\n */\nexport function Highlight(props: HighlightProps): JSX.Element {\n  const { children, query, styles } = props\n\n  if (typeof children !== \"string\") {\n    throw new Error(\"The children prop of Highlight must be a string\")\n  }\n\n  const chunks = useHighlight({ query, text: children })\n\n  return (\n    <>\n      {chunks.map((chunk, index) => {\n        return chunk.match ? (\n          <Mark key={index} sx={styles}>\n            {chunk.text}\n          </Mark>\n        ) : (\n          <Fragment key={index}>{chunk.text}</Fragment>\n        )\n      })}\n    </>\n  )\n}\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface KbdProps extends HTMLChakraProps<\"kbd\">, ThemingProps<\"Kbd\"> {}\n\n/**\n * Semantic component to render a keyboard shortcut\n * within an application.\n *\n * @example\n *\n * ```jsx\n * <Kbd>⌘ + T</Kbd>\n * ```\n *\n * @see Docs https://chakra-ui.com/kbd\n */\nexport const Kbd = forwardRef<KbdProps, \"kbd\">(function Kbd(props, ref) {\n  const styles = useStyleConfig(\"Kbd\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.kbd\n      ref={ref}\n      className={cx(\"chakra-kbd\", className)}\n      {...rest}\n      __css={{\n        fontFamily: \"mono\",\n        ...styles,\n      }}\n    />\n  )\n})\n\nKbd.displayName = \"Kbd\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkProps extends HTMLChakraProps<\"a\">, ThemingProps<\"Link\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\n/**\n * Links are accessible elements used primarily for navigation.\n *\n * It integrates well with other routing libraries like\n * React Router, Reach Router and Next.js Link.\n *\n * @example\n *\n * ```jsx\n * <Link as={ReactRouterLink} to=\"/home\">Home</Link>\n * ```\n *\n * @see Docs https://chakra-ui.com/link\n */\nexport const Link = forwardRef<LinkProps, \"a\">(function Link(props, ref) {\n  const styles = useStyleConfig(\"Link\", props)\n  const { className, isExternal, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.a\n      target={isExternal ? \"_blank\" : undefined}\n      rel={isExternal ? \"noopener\" : undefined}\n      ref={ref}\n      className={cx(\"chakra-link\", className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nLink.displayName = \"Link\"\n","import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {\n  /**\n   *  If `true`, the link will open in new tab\n   *\n   * @default false\n   */\n  isExternal?: boolean\n}\n\nexport const LinkOverlay = forwardRef<LinkOverlayProps, \"a\">(\n  function LinkOverlay(props, ref) {\n    const { isExternal, target, rel, className, ...rest } = props\n    return (\n      <chakra.a\n        {...rest}\n        ref={ref}\n        className={cx(\"chakra-linkbox__overlay\", className)}\n        rel={isExternal ? \"noopener noreferrer\" : rel}\n        target={isExternal ? \"_blank\" : target}\n        __css={{\n          position: \"static\",\n          \"&::before\": {\n            content: \"''\",\n            cursor: \"inherit\",\n            display: \"block\",\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            zIndex: 0,\n            width: \"100%\",\n            height: \"100%\",\n          },\n        }}\n      />\n    )\n  },\n)\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * `LinkBox` is used to wrap content areas within a link while ensuring semantic html\n *\n * @see Docs https://chakra-ui.com/docs/navigation/link-overlay\n * @see Resources https://www.sarasoueidan.com/blog/nested-links\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">(function LinkBox(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      {...rest}\n      className={cx(\"chakra-linkbox\", className)}\n      __css={{\n        /* Elevate the links and abbreviations up */\n        \"a[href]:not(.chakra-linkbox__overlay), abbr[title]\": {\n          position: \"relative\",\n          zIndex: 1,\n        },\n      }}\n    />\n  )\n})\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import {\n  forwardRef,\n  getToken,\n  ResponsiveValue,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { Grid, GridProps } from \"./grid\"\n\ninterface SimpleGridOptions {\n  /**\n   * The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length.\n   */\n  minChildWidth?: GridProps[\"minWidth\"]\n  /**\n   * The number of columns\n   */\n  columns?: ResponsiveValue<number>\n  /**\n   * The gap between the grid items\n   */\n  spacing?: GridProps[\"gridGap\"]\n  /**\n   * The column gap between the grid items\n   */\n  spacingX?: GridProps[\"gridGap\"]\n  /**\n   * The row gap between the grid items\n   */\n  spacingY?: GridProps[\"gridGap\"]\n}\n\nexport interface SimpleGridProps extends GridProps, SimpleGridOptions {}\n\n/**\n * SimpleGrid\n *\n * React component that uses the `Grid` component and provides\n * a simpler interface to create responsive grid layouts.\n *\n * Provides props that easily define columns and spacing.\n *\n * @see Docs https://chakra-ui.com/simplegrid\n */\nexport const SimpleGrid = forwardRef<SimpleGridProps, \"div\">(\n  function SimpleGrid(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } =\n      props\n\n    const theme = useTheme()\n    const templateColumns = minChildWidth\n      ? widthToColumns(minChildWidth, theme)\n      : countToColumns(columns)\n\n    return (\n      <Grid\n        ref={ref}\n        gap={spacing}\n        columnGap={spacingX}\n        rowGap={spacingY}\n        templateColumns={templateColumns}\n        {...rest}\n      />\n    )\n  },\n)\n\nSimpleGrid.displayName = \"SimpleGrid\"\n\nfunction toPx(n: string | number) {\n  return typeof n === \"number\" ? `${n}px` : n\n}\n\nfunction widthToColumns(width: any, theme: Record<string, any>) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme)\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`\n  })\n}\n\nfunction countToColumns(count: any) {\n  return mapResponsive(count, (value) =>\n    value === null ? null : `repeat(${value}, minmax(0, 1fr))`,\n  )\n}\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface SpacerProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * A flexible flex spacer that expands along the major axis of its containing flex layout.\n * It renders a `div` by default, and takes up any available space.\n *\n * @see Docs https://chakra-ui.com/flex#using-the-spacer\n */\nexport const Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\",\n  },\n})\n\nSpacer.displayName = \"Spacer\"\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n","import { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cloneElement, Fragment, useMemo } from \"react\"\n\nimport { StackItem } from \"./stack-item\"\nimport type { StackDirection } from \"./stack.utils\"\nimport { getDividerStyles } from \"./stack.utils\"\n\nexport type { StackDirection }\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   * @default \"0.5rem\"\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   * @default \"column\"\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   *\n   * @default false\n   *\n   * @deprecated - Use `direction=\"row\"` or `HStack` instead\n   */\n  isInline?: boolean\n}\n\nexport interface StackProps extends HTMLChakraProps<\"div\">, StackOptions {}\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction],\n  )\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children)\n    return shouldUseChildren\n      ? validChildren\n      : validChildren.map((child, index) => {\n          // Prefer provided child key, fallback to index\n          const key = typeof child.key !== \"undefined\" ? child.key : index\n          const isLast = index + 1 === validChildren.length\n          const wrappedChild = <StackItem key={key}>{child}</StackItem>\n          const _child = shouldWrapChildren ? wrappedChild : child\n\n          if (!hasDivider) return _child\n\n          const clonedDivider = cloneElement(\n            divider as React.ReactElement<any>,\n            {\n              __css: dividerStyle,\n            },\n          )\n\n          const _divider = isLast ? null : clonedDivider\n\n          return (\n            <Fragment key={key}>\n              {_child}\n              {_divider}\n            </Fragment>\n          )\n        })\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children,\n  ])\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={direction}\n      flexWrap={wrap}\n      gap={hasDivider ? undefined : spacing}\n      className={_className}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nStack.displayName = \"Stack\"\n","import { ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nStackItem.displayName = \"StackItem\"\n","import { ResponsiveValue, SystemProps } from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\ninterface Options {\n  spacing: SystemProps[\"margin\"]\n  direction: StackDirection\n}\n\nexport function getDividerStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n  }\n\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value: keyof typeof dividerStyles) => dividerStyles[value],\n    ),\n  }\n}\n","import { HTMLChakraProps, ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport interface StackDividerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const StackDivider: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__divider\"\n    {...props}\n    __css={{\n      ...props[\"__css\"],\n      borderWidth: 0,\n      alignSelf: \"stretch\",\n      borderColor: \"inherit\",\n      width: \"auto\",\n      height: \"auto\",\n    }}\n  />\n)\n\nStackDivider.displayName = \"StackDivider\"\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { Children, useMemo } from \"react\"\n\nexport interface WrapProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The space between each child (even if it wraps)\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The horizontal space between the each child (even if it wraps). Defaults to `spacing` if not defined.\n   * @type SystemProps[\"margin\"]\n   */\n  spacingX?: SystemProps[\"margin\"]\n  /**\n   * The vertical space between the each child (even if it wraps). Defaults to `spacing` if not defined.\n   * @type SystemProps[\"margin\"]\n   */\n  spacingY?: SystemProps[\"margin\"]\n  /**\n   * The `justify-content` value (for cross-axis alignment)\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * The `align-items` value (for main axis alignment)\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The `flex-direction` value\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * If `true`, the children will be wrapped in a `WrapItem`\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n}\n\n/**\n * Layout component used to stack elements that differ in length\n * and are liable to wrap.\n *\n * Common use cases:\n * - Buttons that appear together at the end of forms\n * - Lists of tags and chips\n *\n * @see Docs https://chakra-ui.com/wrap\n */\nexport const Wrap = forwardRef<WrapProps, \"div\">(function Wrap(props, ref) {\n  const {\n    spacing = \"0.5rem\",\n    spacingX,\n    spacingY,\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const _children = useMemo(\n    () =>\n      shouldWrapChildren\n        ? Children.map(children, (child, index) => (\n            <WrapItem key={index}>{child}</WrapItem>\n          ))\n        : children,\n    [children, shouldWrapChildren],\n  )\n\n  return (\n    <chakra.div ref={ref} className={cx(\"chakra-wrap\", className)} {...rest}>\n      <chakra.ul\n        className=\"chakra-wrap__list\"\n        __css={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: justify,\n          alignItems: align,\n          flexDirection: direction,\n          listStyleType: \"none\",\n          gap: spacing,\n          columnGap: spacingX,\n          rowGap: spacingY,\n          padding: \"0\",\n        }}\n      >\n        {_children}\n      </chakra.ul>\n    </chakra.div>\n  )\n})\n\nWrap.displayName = \"Wrap\"\n\nexport interface WrapItemProps extends HTMLChakraProps<\"li\"> {}\n\nexport const WrapItem = forwardRef<WrapItemProps, \"li\">(function WrapItem(\n  props,\n  ref,\n) {\n  const { className, ...rest } = props\n  return (\n    <chakra.li\n      ref={ref}\n      __css={{ display: \"flex\", alignItems: \"flex-start\" }}\n      className={cx(\"chakra-wrap__listitem\", className)}\n      {...rest}\n    />\n  )\n})\n\nWrapItem.displayName = \"WrapItem\"\n","import { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport {\n  HTMLChakraProps,\n  ResponsiveValue,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\n\ntype Dict = Record<string, any>\n\nexport interface IndicatorOptions {\n  /**\n   * The x offset of the indicator\n   */\n  offsetX?: SystemStyleObject[\"left\"]\n  /**\n   * The y offset of the indicator\n   */\n  offsetY?: SystemStyleObject[\"top\"]\n  /**\n   * The x and y offset of the indicator\n   */\n  offset?: SystemStyleObject[\"top\"]\n  /**\n   * The placement of the indicator\n   * @default \"top-end\"\n   */\n  placement?: ResponsiveValue<\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"bottom-center\"\n    | \"top-center\"\n    | \"middle-center\"\n    | \"middle-end\"\n    | \"middle-start\"\n  >\n}\n\nexport interface IndicatorProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof IndicatorOptions>,\n    IndicatorOptions {}\n\nexport const Indicator = forwardRef<IndicatorProps, \"div\">(function Indicator(\n  props,\n  ref,\n) {\n  const {\n    offsetX,\n    offsetY,\n    offset = \"0\",\n    placement = \"top-end\",\n    ...rest\n  } = props\n\n  const styles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      insetBlockStart: mapResponsive(placement, (v) => {\n        const [side] = v.split(\"-\")\n        const map: Dict = {\n          top: offsetY ?? offset,\n          middle: \"50%\",\n          bottom: \"auto\",\n        }\n        return map[side]\n      }),\n      insetBlockEnd: mapResponsive(placement, (v) => {\n        const [side] = v.split(\"-\")\n        const map: Dict = {\n          top: \"auto\",\n          middle: \"50%\",\n          bottom: offsetY ?? offset,\n        }\n        return map[side]\n      }),\n      insetStart: mapResponsive(placement, (v) => {\n        const [, align] = v.split(\"-\")\n        const map: Dict = {\n          start: offsetX ?? offset,\n          center: \"50%\",\n          end: \"auto\",\n        }\n        return map[align]\n      }),\n      insetEnd: mapResponsive(placement, (v) => {\n        const [, align] = v.split(\"-\")\n        const map: Dict = {\n          start: \"auto\",\n          center: \"50%\",\n          end: offsetX ?? offset,\n        }\n        return map[align]\n      }),\n      translate: mapResponsive(placement, (v) => {\n        const [side, align] = v.split(\"-\")\n        const mapX: Dict = { start: \"-50%\", center: \"-50%\", end: \"50%\" }\n        const mapY: Dict = { top: \"-50%\", middle: \"-50%\", bottom: \"50%\" }\n        return `${mapX[align]} ${mapY[side]}`\n      }),\n    }),\n    [offset, offsetX, offsetY, placement],\n  )\n\n  return <chakra.div ref={ref} __css={styles} {...rest} />\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}