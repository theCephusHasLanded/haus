{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  useControllableProp: () => useControllableProp,\n  useControllableState: () => useControllableState\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_react = require(\"react\");\nvar import_react_use_callback_ref = require(\"@chakra-ui/react-use-callback-ref\");\nfunction useControllableProp(prop, state) {\n  const controlled = typeof prop !== \"undefined\";\n  const value = controlled ? prop : state;\n  return (0, import_react.useMemo)(() => [controlled, value], [controlled, value]);\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = (0, import_react_use_callback_ref.useCallbackRef)(onChange);\n  const shouldUpdateProp = (0, import_react_use_callback_ref.useCallbackRef)(shouldUpdate);\n  const [uncontrolledState, setUncontrolledState] = (0, import_react.useState)(defaultValue);\n  const controlled = valueProp !== void 0;\n  const value = controlled ? valueProp : uncontrolledState;\n  const setValue = (0, import_react_use_callback_ref.useCallbackRef)(next => {\n    const setter = next;\n    const nextValue = typeof next === \"function\" ? setter(value) : next;\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!controlled) {\n      setUncontrolledState(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [controlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, setValue];\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  useControllableProp,\n  useControllableState\n});","map":{"version":3,"names":["src_exports","__export","useControllableProp","useControllableState","module","exports","__toCommonJS","import_react","require","import_react_use_callback_ref","prop","state","controlled","value","useMemo","props","valueProp","defaultValue","onChange","shouldUpdate","prev","next","onChangeProp","useCallbackRef","shouldUpdateProp","uncontrolledState","setUncontrolledState","useState","setValue","setter","nextValue"],"sources":["../src/index.ts"],"sourcesContent":["import { useMemo, useState } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\n/**\n * Given a prop value and state value, the useControllableProp hook is used to determine whether a component is controlled or uncontrolled, and also returns the computed value.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-controllable#usecontrollableprop\n */\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const controlled = typeof prop !== \"undefined\"\n  const value = controlled ? prop : state\n  return useMemo<[boolean, T]>(() => [controlled, value], [controlled, value])\n}\n\nexport interface UseControllableStateProps<T> {\n  value?: T\n  defaultValue?: T | (() => T)\n  onChange?: (value: T) => void\n  shouldUpdate?: (prev: T, next: T) => boolean\n}\n\n/**\n * The `useControllableState` hook returns the state and function that updates the state, just like React.useState does.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-controllable#usecontrollablestate\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next,\n  } = props\n\n  const onChangeProp = useCallbackRef(onChange)\n  const shouldUpdateProp = useCallbackRef(shouldUpdate)\n\n  const [uncontrolledState, setUncontrolledState] = useState(defaultValue as T)\n  const controlled = valueProp !== undefined\n  const value = controlled ? valueProp : uncontrolledState\n\n  const setValue = useCallbackRef(\n    (next: React.SetStateAction<T>) => {\n      const setter = next as (prevState?: T) => T\n      const nextValue = typeof next === \"function\" ? setter(value) : next\n\n      if (!shouldUpdateProp(value, nextValue)) {\n        return\n      }\n\n      if (!controlled) {\n        setUncontrolledState(nextValue)\n      }\n\n      onChangeProp(nextValue)\n    },\n    [controlled, onChangeProp, value, shouldUpdateProp],\n  )\n\n  return [value, setValue] as [T, React.Dispatch<React.SetStateAction<T>>]\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,mBAAA,EAAAA,CAAA,KAAAA,mBAAA;EAAAC,oBAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAN,WAAA;AAAA,IAAAO,YAAA,GAAkCC,OAAA;AAClC,IAAAC,6BAAA,GAA+BD,OAAA;AAOxB,SAASN,oBAAuBQ,IAAA,EAAqBC,KAAA,EAAU;EACpE,MAAMC,UAAA,GAAa,OAAOF,IAAA,KAAS;EACnC,MAAMG,KAAA,GAAQD,UAAA,GAAaF,IAAA,GAAOC,KAAA;EAClC,WAAOJ,YAAA,CAAAO,OAAA,EAAsB,MAAM,CAACF,UAAA,EAAYC,KAAK,GAAG,CAACD,UAAA,EAAYC,KAAK,CAAC;AAC7E;AAcO,SAASV,qBAAwBY,KAAA,EAAqC;EAC3E,MAAM;IACJF,KAAA,EAAOG,SAAA;IACPC,YAAA;IACAC,QAAA;IACAC,YAAA,GAAeA,CAACC,IAAA,EAAMC,IAAA,KAASD,IAAA,KAASC;EAC1C,IAAIN,KAAA;EAEJ,MAAMO,YAAA,OAAeb,6BAAA,CAAAc,cAAA,EAAeL,QAAQ;EAC5C,MAAMM,gBAAA,OAAmBf,6BAAA,CAAAc,cAAA,EAAeJ,YAAY;EAEpD,MAAM,CAACM,iBAAA,EAAmBC,oBAAoB,QAAInB,YAAA,CAAAoB,QAAA,EAASV,YAAiB;EAC5E,MAAML,UAAA,GAAaI,SAAA,KAAc;EACjC,MAAMH,KAAA,GAAQD,UAAA,GAAaI,SAAA,GAAYS,iBAAA;EAEvC,MAAMG,QAAA,OAAWnB,6BAAA,CAAAc,cAAA,EACdF,IAAA,IAAkC;IACjC,MAAMQ,MAAA,GAASR,IAAA;IACf,MAAMS,SAAA,GAAY,OAAOT,IAAA,KAAS,aAAaQ,MAAA,CAAOhB,KAAK,IAAIQ,IAAA;IAE/D,IAAI,CAACG,gBAAA,CAAiBX,KAAA,EAAOiB,SAAS,GAAG;MACvC;IACF;IAEA,IAAI,CAAClB,UAAA,EAAY;MACfc,oBAAA,CAAqBI,SAAS;IAChC;IAEAR,YAAA,CAAaQ,SAAS;EACxB,GACA,CAAClB,UAAA,EAAYU,YAAA,EAAcT,KAAA,EAAOW,gBAAgB,CACpD;EAEA,OAAO,CAACX,KAAA,EAAOe,QAAQ;AACzB","ignoreList":[]},"metadata":{},"sourceType":"script"}