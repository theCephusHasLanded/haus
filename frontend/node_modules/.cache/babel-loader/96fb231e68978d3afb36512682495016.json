{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Toast: () => Toast,\n  ToastOptionProvider: () => ToastOptionProvider,\n  ToastProvider: () => ToastProvider,\n  createRenderToast: () => createRenderToast,\n  createStandaloneToast: () => createStandaloneToast,\n  createToastFn: () => createToastFn,\n  getToastPlacement: () => getToastPlacement,\n  useToast: () => useToast\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/use-toast.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\n\n// src/toast.tsx\nvar import_alert = require(\"@chakra-ui/alert\");\nvar import_system = require(\"@chakra-ui/system\");\nvar import_close_button = require(\"@chakra-ui/close-button\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\n\n// src/toast.placement.ts\nfunction getToastPlacement(position, dir) {\n  var _a;\n  const computedPosition = position != null ? position : \"bottom\";\n  const logicals = {\n    \"top-start\": {\n      ltr: \"top-left\",\n      rtl: \"top-right\"\n    },\n    \"top-end\": {\n      ltr: \"top-right\",\n      rtl: \"top-left\"\n    },\n    \"bottom-start\": {\n      ltr: \"bottom-left\",\n      rtl: \"bottom-right\"\n    },\n    \"bottom-end\": {\n      ltr: \"bottom-right\",\n      rtl: \"bottom-left\"\n    }\n  };\n  const logical = logicals[computedPosition];\n  return (_a = logical == null ? void 0 : logical[dir]) != null ? _a : computedPosition;\n}\n\n// src/toast.utils.ts\nvar findById = (arr, id) => arr.find(toast => toast.id === id);\nfunction findToast(toasts, id) {\n  const position = getToastPosition(toasts, id);\n  const index = position ? toasts[position].findIndex(toast => toast.id === id) : -1;\n  return {\n    position,\n    index\n  };\n}\nfunction getToastPosition(toasts, id) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position;\n    }\n  }\n}\nfunction getToastStyle(position) {\n  const isRighty = position.includes(\"right\");\n  const isLefty = position.includes(\"left\");\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems\n  };\n}\nfunction getToastListStyle(position) {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\";\n  const margin = isTopOrBottom ? \"0 auto\" : void 0;\n  const top = position.includes(\"top\") ? \"env(safe-area-inset-top, 0px)\" : void 0;\n  const bottom = position.includes(\"bottom\") ? \"env(safe-area-inset-bottom, 0px)\" : void 0;\n  const right = !position.includes(\"left\") ? \"env(safe-area-inset-right, 0px)\" : void 0;\n  const left = !position.includes(\"right\") ? \"env(safe-area-inset-left, 0px)\" : void 0;\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left\n  };\n}\n\n// src/toast.store.ts\nvar initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": []\n};\nvar toastStore = createStore(initialState);\nfunction createStore(initialState2) {\n  let state = initialState2;\n  const listeners = /* @__PURE__ */new Set();\n  const setState = setStateFn => {\n    state = setStateFn(state);\n    listeners.forEach(l => l());\n  };\n  return {\n    getState: () => state,\n    subscribe: listener => {\n      listeners.add(listener);\n      return () => {\n        setState(() => initialState2);\n        listeners.delete(listener);\n      };\n    },\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState(prevState => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter(toast => toast.id != id)\n      }));\n    },\n    notify: (message, options) => {\n      const toast = createToast(message, options);\n      const {\n        position,\n        id\n      } = toast;\n      setState(prevToasts => {\n        var _a, _b;\n        const isTop = position.includes(\"top\");\n        const toasts = isTop ? [toast, ...((_a = prevToasts[position]) != null ? _a : [])] : [...((_b = prevToasts[position]) != null ? _b : []), toast];\n        return {\n          ...prevToasts,\n          [position]: toasts\n        };\n      });\n      return id;\n    },\n    update: (id, options) => {\n      if (!id) return;\n      setState(prevState => {\n        const nextState = {\n          ...prevState\n        };\n        const {\n          position,\n          index\n        } = findToast(nextState, id);\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options)\n          };\n        }\n        return nextState;\n      });\n    },\n    closeAll: ({\n      positions\n    } = {}) => {\n      setState(prev => {\n        const allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        const positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce((acc, position) => {\n          acc[position] = prev[position].map(toast => ({\n            ...toast,\n            requestClose: true\n          }));\n          return acc;\n        }, {\n          ...prev\n        });\n      });\n    },\n    close: id => {\n      setState(prevState => {\n        const position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return {\n          ...prevState,\n          [position]: prevState[position].map(toast => {\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true\n              };\n            }\n            return toast;\n          })\n        };\n      });\n    },\n    isActive: id => Boolean(findToast(toastStore.getState(), id).position)\n  };\n}\nvar counter = 0;\nfunction createToast(message, options = {}) {\n  var _a, _b;\n  counter += 1;\n  const id = (_a = options.id) != null ? _a : counter;\n  const position = (_b = options.position) != null ? _b : \"bottom\";\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle\n  };\n}\n\n// src/toast.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar Toast = props => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon\n  } = props;\n  const ids = id ? {\n    root: `toast-${id}`,\n    title: `toast-${id}-title`,\n    description: `toast-${id}-description`\n  } : void 0;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_alert.Alert, {\n    addRole: false,\n    status,\n    variant,\n    id: ids == null ? void 0 : ids.root,\n    alignItems: \"start\",\n    borderRadius: \"md\",\n    boxShadow: \"lg\",\n    paddingEnd: 8,\n    textAlign: \"start\",\n    width: \"auto\",\n    colorScheme,\n    children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(import_alert.AlertIcon, {\n      children: icon\n    }), /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_system.chakra.div, {\n      flex: \"1\",\n      maxWidth: \"100%\",\n      children: [title && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_alert.AlertTitle, {\n        id: ids == null ? void 0 : ids.title,\n        children: title\n      }), description && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_alert.AlertDescription, {\n        id: ids == null ? void 0 : ids.description,\n        display: \"block\",\n        children: description\n      })]\n    }), isClosable && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_close_button.CloseButton, {\n      size: \"sm\",\n      onClick: onClose,\n      position: \"absolute\",\n      insetEnd: 1,\n      top: 1\n    })]\n  });\n};\nfunction createRenderToast(options = {}) {\n  const {\n    render,\n    toastComponent: ToastComponent2 = Toast\n  } = options;\n  const renderToast = props => {\n    if (typeof render === \"function\") {\n      return render({\n        ...props,\n        ...options\n      });\n    }\n    return /* @__PURE__ */(0, import_jsx_runtime.jsx)(ToastComponent2, {\n      ...props,\n      ...options\n    });\n  };\n  return renderToast;\n}\nfunction createToastFn(dir, defaultOptions) {\n  const normalizeToastOptions = options => {\n    var _a;\n    return {\n      ...defaultOptions,\n      ...options,\n      position: getToastPlacement((_a = options == null ? void 0 : options.position) != null ? _a : defaultOptions == null ? void 0 : defaultOptions.position, dir)\n    };\n  };\n  const toast = options => {\n    const normalizedToastOptions = normalizeToastOptions(options);\n    const Message = createRenderToast(normalizedToastOptions);\n    return toastStore.notify(Message, normalizedToastOptions);\n  };\n  toast.update = (id, options) => {\n    toastStore.update(id, normalizeToastOptions(options));\n  };\n  toast.promise = (promise, options) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null\n    });\n    promise.then(data => toast.update(id, {\n      status: \"success\",\n      duration: 5e3,\n      ...(0, import_shared_utils.runIfFn)(options.success, data)\n    })).catch(error => toast.update(id, {\n      status: \"error\",\n      duration: 5e3,\n      ...(0, import_shared_utils.runIfFn)(options.error, error)\n    }));\n  };\n  toast.closeAll = toastStore.closeAll;\n  toast.close = toastStore.close;\n  toast.isActive = toastStore.isActive;\n  return toast;\n}\n\n// src/use-toast.tsx\nvar import_react3 = require(\"react\");\n\n// src/toast.provider.tsx\nvar import_framer_motion2 = require(\"framer-motion\");\nvar import_portal = require(\"@chakra-ui/portal\");\n\n// src/toast.component.tsx\nvar import_react_use_timeout = require(\"@chakra-ui/react-use-timeout\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_framer_motion = require(\"framer-motion\");\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar toastMotionVariants = {\n  initial: props => {\n    const {\n      position\n    } = props;\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\";\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1;\n    if (position === \"bottom\") factor = 1;\n    return {\n      opacity: 0,\n      [dir]: factor * 24\n    };\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1]\n    }\n  }\n};\nvar ToastComponent = (0, import_react.memo)(props => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5e3,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\"\n  } = props;\n  const [delay, setDelay] = (0, import_react.useState)(duration);\n  const isPresent = (0, import_framer_motion.useIsPresent)();\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    if (!isPresent) {\n      onCloseComplete == null ? void 0 : onCloseComplete();\n    }\n  }, [isPresent]);\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    setDelay(duration);\n  }, [duration]);\n  const onMouseEnter = () => setDelay(null);\n  const onMouseLeave = () => setDelay(duration);\n  const close = () => {\n    if (isPresent) onRequestRemove();\n  };\n  (0, import_react.useEffect)(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove();\n    }\n  }, [isPresent, requestClose, onRequestRemove]);\n  (0, import_react_use_timeout.useTimeout)(close, delay);\n  const containerStyles = (0, import_react.useMemo)(() => ({\n    pointerEvents: \"auto\",\n    maxWidth: 560,\n    minWidth: 300,\n    margin: toastSpacing,\n    ...containerStyle\n  }), [containerStyle, toastSpacing]);\n  const toastStyle = (0, import_react.useMemo)(() => getToastStyle(position), [position]);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_framer_motion.motion.div, {\n    layout: true,\n    className: \"chakra-toast\",\n    variants: motionVariants,\n    initial: \"initial\",\n    animate: \"animate\",\n    exit: \"exit\",\n    onHoverStart: onMouseEnter,\n    onHoverEnd: onMouseLeave,\n    custom: {\n      position\n    },\n    style: toastStyle,\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, {\n      role: \"status\",\n      \"aria-atomic\": \"true\",\n      className: \"chakra-toast__inner\",\n      __css: containerStyles,\n      children: (0, import_shared_utils2.runIfFn)(message, {\n        id,\n        onClose: close\n      })\n    })\n  });\n});\nToastComponent.displayName = \"ToastComponent\";\n\n// src/toast.provider.tsx\nvar import_react2 = require(\"react\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar [ToastOptionProvider, useToastOptionContext] = (0, import_react_context.createContext)({\n  name: `ToastOptionsContext`,\n  strict: false\n});\nvar ToastProvider = props => {\n  const state = (0, import_react2.useSyncExternalStore)(toastStore.subscribe, toastStore.getState, toastStore.getState);\n  const {\n    motionVariants,\n    component: Component = ToastComponent,\n    portalProps\n  } = props;\n  const stateKeys = Object.keys(state);\n  const toastList = stateKeys.map(position => {\n    const toasts = state[position];\n    return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(\"div\", {\n      role: \"region\",\n      \"aria-live\": \"polite\",\n      \"aria-label\": `Notifications-${position}`,\n      id: `chakra-toast-manager-${position}`,\n      style: getToastListStyle(position),\n      children: /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_framer_motion2.AnimatePresence, {\n        initial: false,\n        children: toasts.map(toast => /* @__PURE__ */(0, import_jsx_runtime3.jsx)(Component, {\n          motionVariants,\n          ...toast\n        }, toast.id))\n      })\n    }, position);\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_portal.Portal, {\n    ...portalProps,\n    children: toastList\n  });\n};\n\n// src/use-toast.tsx\nfunction useToast(options) {\n  const {\n    theme\n  } = (0, import_system3.useChakra)();\n  const defaultOptions = useToastOptionContext();\n  return (0, import_react3.useMemo)(() => createToastFn(theme.direction, {\n    ...defaultOptions,\n    ...options\n  }), [options, theme.direction, defaultOptions]);\n}\n\n// src/create-standalone-toast.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_theme = require(\"@chakra-ui/theme\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar defaults = {\n  duration: 5e3,\n  variant: \"solid\"\n};\nvar defaultStandaloneParam = {\n  theme: import_theme.theme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false\n};\nfunction createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced\n} = defaultStandaloneParam) {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced\n  };\n  const ToastContainer = () => /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.ThemeProvider, {\n    theme,\n    children: /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.ColorModeContext.Provider, {\n      value: colorModeContextValue,\n      children: /* @__PURE__ */(0, import_jsx_runtime4.jsx)(ToastProvider, {\n        defaultOptions,\n        motionVariants,\n        toastSpacing,\n        component\n      })\n    })\n  });\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions)\n  };\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Toast,\n  ToastOptionProvider,\n  ToastProvider,\n  createRenderToast,\n  createStandaloneToast,\n  createToastFn,\n  getToastPlacement,\n  useToast\n});","map":{"version":3,"names":["src_exports","__export","Toast","ToastOptionProvider","ToastProvider","createRenderToast","createStandaloneToast","createToastFn","getToastPlacement","useToast","module","exports","__toCommonJS","import_system3","require","import_alert","import_system","import_close_button","import_shared_utils","position","dir","_a","computedPosition","logicals","ltr","rtl","logical","findById","arr","id","find","toast","findToast","toasts","getToastPosition","index","findIndex","values","Object","entries","getToastStyle","isRighty","includes","isLefty","alignItems","display","flexDirection","getToastListStyle","isTopOrBottom","margin","top","bottom","right","left","zIndex","pointerEvents","initialState","toastStore","createStore","initialState2","state","listeners","Set","setState","setStateFn","forEach","l","getState","subscribe","listener","add","delete","removeToast","prevState","filter","notify","message","options","createToast","prevToasts","_b","isTop","update","nextState","closeAll","positions","prev","allPositions","positionsToClose","reduce","acc","map","requestClose","close","isActive","Boolean","counter","duration","onCloseComplete","onRequestRemove","String","status","containerStyle","import_jsx_runtime","props","variant","title","isClosable","onClose","description","colorScheme","icon","ids","root","jsxs","Alert","addRole","borderRadius","boxShadow","paddingEnd","textAlign","width","children","jsx","AlertIcon","chakra","div","flex","maxWidth","AlertTitle","AlertDescription","CloseButton","size","onClick","insetEnd","render","toastComponent","ToastComponent2","renderToast","defaultOptions","normalizeToastOptions","normalizedToastOptions","Message","promise","loading","then","data","runIfFn","success","catch","error","import_react3","import_framer_motion2","import_portal","import_react_use_timeout","import_react_use_update_effect","import_shared_utils2","import_framer_motion","import_system2","import_react","import_jsx_runtime2","toastMotionVariants","initial","factor","opacity","animate","y","x","scale","transition","ease","exit","ToastComponent","memo","motionVariants","toastSpacing","delay","setDelay","useState","isPresent","useIsPresent","useUpdateEffect","onMouseEnter","onMouseLeave","useEffect","useTimeout","containerStyles","useMemo","minWidth","toastStyle","motion","layout","className","variants","onHoverStart","onHoverEnd","custom","style","role","__css","displayName","import_react2","import_react_context","import_jsx_runtime3","useToastOptionContext","createContext","name","strict","useSyncExternalStore","component","Component","portalProps","stateKeys","keys","toastList","AnimatePresence","Portal","theme","useChakra","direction","import_system4","import_theme","import_jsx_runtime4","defaults","defaultStandaloneParam","colorMode","toggleColorMode","setColorMode","forced","colorModeContextValue","ToastContainer","ThemeProvider","ColorModeContext","Provider","value"],"sources":["../src/index.ts","../src/use-toast.tsx","../src/toast.tsx","../src/toast.placement.ts","../src/toast.utils.ts","../src/toast.store.ts","../src/toast.provider.tsx","../src/toast.component.tsx","../src/create-standalone-toast.tsx"],"sourcesContent":["export { useToast } from \"./use-toast\"\nexport type { UseToastOptions } from \"./use-toast\"\nexport { ToastProvider, ToastOptionProvider } from \"./toast.provider\"\nexport type {\n  ToastMethods,\n  ToastProviderProps,\n  CreateToastOptions,\n} from \"./toast.provider\"\nexport type {\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n  ToastState,\n} from \"./toast.types\"\nexport { getToastPlacement } from \"./toast.placement\"\nexport type {\n  ToastPosition,\n  ToastPositionWithLogical,\n  LogicalToastPosition,\n} from \"./toast.placement\"\nexport { createStandaloneToast } from \"./create-standalone-toast\"\nexport type {\n  CreateStandAloneToastParam,\n  CreateStandaloneToastReturn,\n} from \"./create-standalone-toast\"\nexport { Toast, createToastFn, createRenderToast } from \"./toast\"\nexport type { ToastProps, CreateToastFnReturn } from \"./toast\"\n","import type { AlertStatus } from \"@chakra-ui/alert\"\nimport { StyleProps, ThemingProps, useChakra } from \"@chakra-ui/system\"\nimport type { RenderProps, ToastId, ToastOptions } from \"./toast.types\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { useMemo } from \"react\"\nimport { useToastOptionContext } from \"./toast.provider\"\n\nexport interface UseToastOptions extends ThemingProps<\"Alert\"> {\n  /**\n   * The placement of the toast\n   *\n   * @default \"bottom\"\n   */\n  position?: ToastPosition\n  /**\n   * The delay before the toast hides (in milliseconds)\n   * If set to `null`, toast will never dismiss.\n   *\n   * @default 5000 ( = 5000ms )\n   */\n  duration?: ToastOptions[\"duration\"]\n  /**\n   * Render a component toast component.\n   * Any component passed will receive 2 props: `id` and `onClose`.\n   */\n  render?(props: RenderProps): React.ReactNode\n  /**\n   * The title of the toast\n   */\n  title?: React.ReactNode\n  /**\n   * The description of the toast\n   */\n  description?: React.ReactNode\n  /**\n   * If `true`, toast will show a close button\n   * @default false\n   */\n  isClosable?: boolean\n  /**\n   * The status of the toast.\n   */\n  status?: AlertStatus\n  /**\n   * A custom icon that will be displayed by the toast.\n   */\n  icon?: React.ReactNode\n  /**\n   * The `id` of the toast.\n   *\n   * Mostly used when you need to prevent duplicate.\n   * By default, we generate a unique `id` for each toast\n   */\n  id?: ToastId\n  /**\n   * Callback function to run side effects after the toast has closed.\n   */\n  onCloseComplete?: () => void\n  /**\n   * Optional style overrides for the container wrapping the toast component.\n   */\n  containerStyle?: StyleProps\n}\n\n/**\n * React hook used to create a function that can be used\n * to show toasts in an application.\n */\nexport function useToast(options?: UseToastOptions): CreateToastFnReturn {\n  const { theme } = useChakra()\n  const defaultOptions = useToastOptionContext()\n\n  return useMemo(\n    () =>\n      createToastFn(theme.direction, {\n        ...defaultOptions,\n        ...options,\n      }),\n    [options, theme.direction, defaultOptions],\n  )\n}\n\nexport default useToast\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertProps,\n  AlertTitle,\n} from \"@chakra-ui/alert\"\nimport { chakra } from \"@chakra-ui/system\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport type { RenderProps, ToastId } from \"./toast.types\"\nimport { getToastPlacement } from \"./toast.placement\"\nimport { toastStore } from \"./toast.store\"\n\nexport interface ToastProps\n  extends UseToastOptions,\n    Omit<AlertProps, keyof UseToastOptions> {\n  onClose?: () => void\n}\n\n/**\n * The `Toast` component is used to give feedback to users after an action has taken place.\n *\n * @see Docs https://chakra-ui.com/docs/components/toast\n */\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon,\n  } = props\n\n  const ids = id\n    ? {\n        root: `toast-${id}`,\n        title: `toast-${id}-title`,\n        description: `toast-${id}-description`,\n      }\n    : undefined\n\n  return (\n    <Alert\n      addRole={false}\n      status={status}\n      variant={variant}\n      id={ids?.root}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      paddingEnd={8}\n      textAlign=\"start\"\n      width=\"auto\"\n      colorScheme={colorScheme}\n    >\n      <AlertIcon>{icon}</AlertIcon>\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={ids?.title}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription id={ids?.description} display=\"block\">\n            {description}\n          </AlertDescription>\n        )}\n      </chakra.div>\n      {isClosable && (\n        <CloseButton\n          size=\"sm\"\n          onClick={onClose}\n          position=\"absolute\"\n          insetEnd={1}\n          top={1}\n        />\n      )}\n    </Alert>\n  )\n}\n\nexport function createRenderToast(\n  options: UseToastOptions & {\n    toastComponent?: React.FC<ToastProps>\n  } = {},\n) {\n  const { render, toastComponent: ToastComponent = Toast } = options\n  const renderToast: React.FC<RenderProps> = (props) => {\n    if (typeof render === \"function\") {\n      return render({ ...props, ...options }) as JSX.Element\n    }\n    return <ToastComponent {...props} {...options} />\n  }\n  return renderToast\n}\n\ntype UseToastPromiseOption = Omit<UseToastOptions, \"status\">\n\nexport function createToastFn(\n  dir: \"ltr\" | \"rtl\",\n  defaultOptions?: UseToastOptions,\n) {\n  const normalizeToastOptions = (options?: UseToastOptions) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir,\n    ),\n  })\n\n  const toast = (options?: UseToastOptions) => {\n    const normalizedToastOptions = normalizeToastOptions(options)\n    const Message = createRenderToast(normalizedToastOptions)\n    return toastStore.notify(Message, normalizedToastOptions)\n  }\n\n  toast.update = (id: ToastId, options: Omit<UseToastOptions, \"id\">) => {\n    toastStore.update(id, normalizeToastOptions(options))\n  }\n\n  toast.promise = <Result extends any, Err extends Error = Error>(\n    promise: Promise<Result>,\n    options: {\n      success: MaybeFunction<UseToastPromiseOption, [Result]>\n      error: MaybeFunction<UseToastPromiseOption, [Err]>\n      loading: UseToastPromiseOption\n    },\n  ) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null,\n    })\n\n    promise\n      .then((data) =>\n        toast.update(id, {\n          status: \"success\",\n          duration: 5_000,\n          ...runIfFn(options.success, data),\n        }),\n      )\n      .catch((error) =>\n        toast.update(id, {\n          status: \"error\",\n          duration: 5_000,\n          ...runIfFn(options.error, error),\n        }),\n      )\n  }\n\n  toast.closeAll = toastStore.closeAll\n  toast.close = toastStore.close\n  toast.isActive = toastStore.isActive\n\n  return toast\n}\n\nexport type CreateToastFnReturn = ReturnType<typeof createToastFn>\n\ntype MaybeFunction<T, Args extends unknown[] = []> = T | ((...args: Args) => T)\n","export type LogicalToastPosition =\n  | \"top-start\"\n  | \"top-end\"\n  | \"bottom-start\"\n  | \"bottom-end\"\n\nexport type ToastPositionWithLogical =\n  | LogicalToastPosition\n  | \"top\"\n  | \"top-left\"\n  | \"top-right\"\n  | \"bottom\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n\nexport type ToastPosition = Exclude<\n  ToastPositionWithLogical,\n  LogicalToastPosition\n>\n\ntype LogicalPlacementMap = Record<\n  LogicalToastPosition,\n  { ltr: ToastPosition; rtl: ToastPosition }\n>\n\nexport function getToastPlacement(\n  position: ToastPosition | undefined,\n  dir: \"ltr\" | \"rtl\",\n): ToastPosition | undefined {\n  const computedPosition = position ?? \"bottom\"\n  const logicals: LogicalPlacementMap = {\n    \"top-start\": { ltr: \"top-left\", rtl: \"top-right\" },\n    \"top-end\": { ltr: \"top-right\", rtl: \"top-left\" },\n    \"bottom-start\": { ltr: \"bottom-left\", rtl: \"bottom-right\" },\n    \"bottom-end\": { ltr: \"bottom-right\", rtl: \"bottom-left\" },\n  }\n\n  const logical = logicals[computedPosition as keyof typeof logicals]\n  return logical?.[dir] ?? computedPosition\n}\n","import type { ToastPosition } from \"./toast.placement\"\nimport type { ToastId, ToastOptions, ToastState } from \"./toast.types\"\n\n/**\n * Given an array of toasts for a specific position.\n * It returns the toast that matches the `id` passed\n */\nexport const findById = (arr: ToastOptions[], id: ToastId) =>\n  arr.find((toast) => toast.id === id)\n\n/**\n * Given the toast manager state, finds the toast that matches\n * the id and return its position and index\n */\nexport function findToast(toasts: ToastState, id: ToastId) {\n  const position = getToastPosition(toasts, id)\n\n  const index = position\n    ? toasts[position].findIndex((toast) => toast.id === id)\n    : -1\n\n  return {\n    position,\n    index,\n  }\n}\n\n/**\n * Given the toast manager state, finds the position of the toast that\n * matches the `id`\n */\nexport function getToastPosition(toasts: ToastState, id: ToastId) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position as ToastPosition\n    }\n  }\n}\n\n/**\n * Given the toast manager state, checks if a specific toast is\n * still in the state, which means it is still visible on screen.\n */\nexport const isVisible = (toasts: ToastState, id: ToastId) =>\n  !!getToastPosition(toasts, id)\n\n/**\n * Gets the styles to be applied to a toast's container\n * based on its position in the manager\n */\nexport function getToastStyle(position: ToastPosition): React.CSSProperties {\n  const isRighty = position.includes(\"right\")\n  const isLefty = position.includes(\"left\")\n\n  let alignItems = \"center\"\n  if (isRighty) alignItems = \"flex-end\"\n  if (isLefty) alignItems = \"flex-start\"\n\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems,\n  }\n}\n\n/**\n * Compute the style of a toast based on its position\n */\nexport function getToastListStyle(\n  position: ToastPosition,\n): React.CSSProperties {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\"\n  const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n  const top = position.includes(\"top\")\n    ? \"env(safe-area-inset-top, 0px)\"\n    : undefined\n  const bottom = position.includes(\"bottom\")\n    ? \"env(safe-area-inset-bottom, 0px)\"\n    : undefined\n  const right = !position.includes(\"left\")\n    ? \"env(safe-area-inset-right, 0px)\"\n    : undefined\n  const left = !position.includes(\"right\")\n    ? \"env(safe-area-inset-left, 0px)\"\n    : undefined\n\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left,\n  }\n}\n","import { createRenderToast } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { CreateToastOptions, ToastMethods } from \"./toast.provider\"\nimport type { ToastId, ToastMessage, ToastState } from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\ntype ToastStore = ToastMethods & {\n  getState: () => ToastState\n  subscribe: (onStoreChange: () => void) => () => void\n  removeToast: (id: ToastId, position: ToastPosition) => void\n}\n\nconst initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": [],\n}\n\n/**\n * Store to track all the toast across all positions\n */\nexport const toastStore = createStore(initialState)\n\nfunction createStore(initialState: ToastState): ToastStore {\n  let state = initialState\n  const listeners = new Set<() => void>()\n\n  const setState = (setStateFn: (values: ToastState) => ToastState) => {\n    state = setStateFn(state)\n    listeners.forEach((l) => l())\n  }\n\n  return {\n    getState: () => state,\n\n    subscribe: (listener) => {\n      listeners.add(listener)\n      return () => {\n        // Delete all toasts on unmount\n        setState(() => initialState)\n        listeners.delete(listener)\n      }\n    },\n\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState((prevState) => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter((toast) => toast.id != id),\n      }))\n    },\n\n    notify: (message, options) => {\n      const toast = createToast(message, options)\n      const { position, id } = toast\n\n      setState((prevToasts) => {\n        const isTop = position.includes(\"top\")\n\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n        const toasts = isTop\n          ? [toast, ...(prevToasts[position] ?? [])]\n          : [...(prevToasts[position] ?? []), toast]\n\n        return {\n          ...prevToasts,\n          [position]: toasts,\n        }\n      })\n\n      return id\n    },\n\n    update: (id, options) => {\n      if (!id) return\n\n      setState((prevState) => {\n        const nextState = { ...prevState }\n        const { position, index } = findToast(nextState, id)\n\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options),\n          }\n        }\n\n        return nextState\n      })\n    },\n\n    closeAll: ({ positions } = {}) => {\n      // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n      setState((prev) => {\n        const allPositions: ToastPosition[] = [\n          \"bottom\",\n          \"bottom-right\",\n          \"bottom-left\",\n          \"top\",\n          \"top-left\",\n          \"top-right\",\n        ]\n\n        const positionsToClose = positions ?? allPositions\n\n        return positionsToClose.reduce(\n          (acc, position) => {\n            acc[position] = prev[position].map((toast) => ({\n              ...toast,\n              requestClose: true,\n            }))\n\n            return acc\n          },\n          { ...prev } as ToastState,\n        )\n      })\n    },\n\n    close: (id) => {\n      setState((prevState) => {\n        const position = getToastPosition(prevState, id)\n\n        if (!position) return prevState\n\n        return {\n          ...prevState,\n          [position]: prevState[position].map((toast) => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true,\n              }\n            }\n\n            return toast\n          }),\n        }\n      })\n    },\n\n    isActive: (id) => Boolean(findToast(toastStore.getState(), id).position),\n  }\n}\n\n/**\n * Static id counter to create unique ids\n * for each toast\n */\nlet counter = 0\n\n/**\n * Create properties for a new toast\n */\nfunction createToast(message: ToastMessage, options: CreateToastOptions = {}) {\n  counter += 1\n  const id = options.id ?? counter\n\n  const position = options.position ?? \"bottom\"\n\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle,\n  }\n}\n","import { AnimatePresence, Variants } from \"framer-motion\"\nimport { Portal, PortalProps } from \"@chakra-ui/portal\"\nimport { ToastComponent, ToastComponentProps } from \"./toast.component\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport { toastStore } from \"./toast.store\"\nimport { getToastListStyle } from \"./toast.utils\"\nimport { useSyncExternalStore } from \"react\"\nimport { createContext } from \"@chakra-ui/react-context\"\n\nexport interface ToastMethods {\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n  notify: (message: ToastMessage, options?: CreateToastOptions) => ToastId\n  /**\n   * Close all toasts at once.\n   * If given positions, will only close those.\n   */\n  closeAll: (options?: CloseAllToastsOptions) => void\n  /**\n   * Requests to close a toast based on its id and position\n   */\n  close: (id: ToastId) => void\n  /**\n   * Update a specific toast with new options based on the\n   * passed `id`\n   */\n  update: (id: ToastId, options: Omit<UseToastOptions, \"id\">) => void\n  isActive: (id: ToastId) => boolean\n}\n\nexport type CreateToastOptions = Partial<\n  Pick<\n    ToastOptions,\n    | \"status\"\n    | \"duration\"\n    | \"position\"\n    | \"id\"\n    | \"onCloseComplete\"\n    | \"containerStyle\"\n  >\n>\n\nexport type ToastProviderProps = React.PropsWithChildren<{\n  /**\n   * Default options for `useToast(options)`\n   *\n   * @example\n   * <ToastProvider defaultOptions={{ duration: 10_000, isClosable: true }} />\n   */\n  defaultOptions?: UseToastOptions\n\n  /**\n   * Customize the default motion config to animate the toasts your way\n   *\n   * @example\n   * const motionVariants =\n   * <ToastProvider motionVariants={motionVariants} />\n   */\n  motionVariants?: Variants\n\n  /**\n   * Are you looking for a way to style the toast? Use a custom `Alert` variant in the theme.\n   * This property overrides the default ToastComponent with your own implementation.\n   *\n   * @example\n   * const CustomToastComponent = (props: ToastComponentProps) => ...\n   * <ToastProvider component={CustomToastComponent} />\n   *\n   * @default ToastComponent\n   */\n  component?: React.FC<ToastComponentProps>\n\n  /**\n   * Define the margin between toasts\n   *\n   * @default 0.5rem\n   */\n  toastSpacing?: string | number\n  /**\n   * Props to be forwarded to the portal component\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n}>\n\n/**\n * Passes default options down to be used by toast creator function\n */\nexport const [ToastOptionProvider, useToastOptionContext] = createContext<\n  UseToastOptions | undefined\n>({\n  name: `ToastOptionsContext`,\n  strict: false,\n})\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const state = useSyncExternalStore(\n    toastStore.subscribe,\n    toastStore.getState,\n    toastStore.getState,\n  )\n\n  const {\n    motionVariants,\n    component: Component = ToastComponent,\n    portalProps,\n  } = props\n\n  const stateKeys = Object.keys(state) as Array<keyof typeof state>\n  const toastList = stateKeys.map((position) => {\n    const toasts = state[position]\n\n    return (\n      <div\n        role=\"region\"\n        aria-live=\"polite\"\n        aria-label={`Notifications-${position}`}\n        key={position}\n        id={`chakra-toast-manager-${position}`}\n        style={getToastListStyle(position)}\n      >\n        <AnimatePresence initial={false}>\n          {toasts.map((toast) => (\n            <Component\n              key={toast.id}\n              motionVariants={motionVariants}\n              {...toast}\n            />\n          ))}\n        </AnimatePresence>\n      </div>\n    )\n  })\n\n  return <Portal {...portalProps}>{toastList}</Portal>\n}\n","import { useTimeout } from \"@chakra-ui/react-use-timeout\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport { chakra } from \"@chakra-ui/system\"\nimport type { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\nimport { ToastProviderProps } from \"./toast.provider\"\nimport { memo, useEffect, useMemo, useState } from \"react\"\n\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastComponentProps\n  extends ToastOptions,\n    Pick<ToastProviderProps, \"motionVariants\" | \"toastSpacing\"> {}\n\nexport const ToastComponent = memo((props: ToastComponentProps) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\",\n  } = props\n\n  const [delay, setDelay] = useState(duration)\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const containerStyles = useMemo(\n    () => ({\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: toastSpacing,\n      ...containerStyle,\n    }),\n    [containerStyle, toastSpacing],\n  )\n\n  const toastStyle = useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.div\n      layout\n      className=\"chakra-toast\"\n      variants={motionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={toastStyle}\n    >\n      <chakra.div\n        role=\"status\"\n        aria-atomic=\"true\"\n        className=\"chakra-toast__inner\"\n        __css={containerStyles}\n      >\n        {runIfFn(message, { id, onClose: close })}\n      </chakra.div>\n    </motion.div>\n  )\n})\n\nToastComponent.displayName = \"ToastComponent\"\n","import {\n  ColorMode,\n  ColorModeContext,\n  ThemeProvider,\n  useChakra,\n} from \"@chakra-ui/system\"\nimport { theme as defaultTheme } from \"@chakra-ui/theme\"\nimport { ToastProvider, ToastProviderProps } from \"./toast.provider\"\nimport { UseToastOptions } from \"./use-toast\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\n\nconst defaults: UseToastOptions = {\n  duration: 5000,\n  variant: \"solid\",\n}\n\nexport interface CreateStandAloneToastParam\n  extends Partial<\n      ReturnType<typeof useChakra> & {\n        setColorMode: (value: ColorMode) => void\n        defaultOptions: UseToastOptions\n      }\n    >,\n    Omit<ToastProviderProps, \"children\"> {}\n\nexport const defaultStandaloneParam: CreateStandAloneToastParam &\n  Required<Omit<CreateStandAloneToastParam, keyof ToastProviderProps>> = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false,\n}\n\nexport type CreateStandaloneToastReturn = {\n  ToastContainer: () => JSX.Element\n  toast: CreateToastFnReturn\n}\n\n/**\n * Create a toast\n */\nexport function createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced,\n}: CreateStandAloneToastParam = defaultStandaloneParam): CreateStandaloneToastReturn {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced,\n  }\n  const ToastContainer = () => (\n    <ThemeProvider theme={theme}>\n      <ColorModeContext.Provider value={colorModeContextValue}>\n        <ToastProvider\n          defaultOptions={defaultOptions}\n          motionVariants={motionVariants}\n          toastSpacing={toastSpacing}\n          component={component}\n        />\n      </ColorModeContext.Provider>\n    </ThemeProvider>\n  )\n\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions),\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}