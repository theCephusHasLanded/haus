{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  popperCSSVars: () => cssVars,\n  usePopper: () => usePopper\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/use-popper.ts\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_core = require(\"@popperjs/core\");\nvar import_react = require(\"react\");\n\n// src/utils.ts\nvar toVar = (value, fallback) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`\n});\nvar cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\")\n};\nfunction getBoxShadow(placement) {\n  if (placement.includes(\"top\")) return `1px 1px 0px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"bottom\")) return `-1px -1px 0px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"right\")) return `-1px 1px 0px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"left\")) return `1px -1px 0px 0 var(--popper-arrow-shadow-color)`;\n}\nvar transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nvar toTransformOrigin = placement => transforms[placement];\nvar defaultEventListeners = {\n  scroll: true,\n  resize: true\n};\nfunction getEventListenerOptions(value) {\n  let eventListeners;\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: {\n        ...defaultEventListeners,\n        ...value\n      }\n    };\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners\n    };\n  }\n  return eventListeners;\n}\n\n// src/modifiers.ts\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({\n    state\n  }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: ({\n    state\n  }) => () => {\n    const reference = state.elements.reference;\n    state.elements.popper.style.width = `${reference.offsetWidth}px`;\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({\n    state\n  }) => {\n    setTransformOrigin(state);\n  },\n  effect: ({\n    state\n  }) => () => {\n    setTransformOrigin(state);\n  }\n};\nvar setTransformOrigin = state => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({\n    state\n  }) => {\n    setArrowStyles(state);\n  }\n};\nvar setArrowStyles = state => {\n  var _a;\n  if (!state.placement) return;\n  const overrides = getArrowStyle(state.placement);\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`\n    };\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\nvar getArrowStyle = placement => {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({\n    state\n  }) => {\n    setInnerArrowStyles(state);\n  },\n  effect: ({\n    state\n  }) => () => {\n    setInnerArrowStyles(state);\n  }\n};\nvar setInnerArrowStyles = state => {\n  if (!state.elements.arrow) return;\n  const inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  const boxShadow = getBoxShadow(state.placement);\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow);\n  }\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`\n  });\n};\n\n// src/popper.placement.ts\nvar logicals = {\n  \"start-start\": {\n    ltr: \"left-start\",\n    rtl: \"right-start\"\n  },\n  \"start-end\": {\n    ltr: \"left-end\",\n    rtl: \"right-end\"\n  },\n  \"end-start\": {\n    ltr: \"right-start\",\n    rtl: \"left-start\"\n  },\n  \"end-end\": {\n    ltr: \"right-end\",\n    rtl: \"left-end\"\n  },\n  start: {\n    ltr: \"left\",\n    rtl: \"right\"\n  },\n  end: {\n    ltr: \"right\",\n    rtl: \"left\"\n  }\n};\nvar opposites = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\"\n};\nfunction getPopperPlacement(placement, dir = \"ltr\") {\n  var _a, _b;\n  const value = ((_a = logicals[placement]) == null ? void 0 : _a[dir]) || placement;\n  if (dir === \"ltr\") return value;\n  return (_b = opposites[placement]) != null ? _b : value;\n}\n\n// src/use-popper.ts\nfunction usePopper(props = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth: matchWidth2,\n    direction = \"ltr\"\n  } = props;\n  const reference = (0, import_react.useRef)(null);\n  const popper = (0, import_react.useRef)(null);\n  const instance = (0, import_react.useRef)(null);\n  const placement = getPopperPlacement(placementProp, direction);\n  const cleanup = (0, import_react.useRef)(() => {});\n  const setupPopper = (0, import_react.useCallback)(() => {\n    var _a;\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    instance.current = (0, import_core.createPopper)(reference.current, popper.current, {\n      placement,\n      modifiers: [innerArrow, positionArrow, transformOrigin, {\n        ...matchWidth,\n        enabled: !!matchWidth2\n      }, {\n        name: \"eventListeners\",\n        ...getEventListenerOptions(eventListeners)\n      }, {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset != null ? offset : [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary\n        }\n      },\n      // allow users override internal modifiers\n      ...(modifiers != null ? modifiers : [])],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth2, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  (0, import_react.useEffect)(() => {\n    return () => {\n      var _a;\n      if (!reference.current && !popper.current) {\n        (_a = instance.current) == null ? void 0 : _a.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  const referenceRef = (0, import_react.useCallback)(node => {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = (0, import_react.useCallback)((props2 = {}, ref = null) => ({\n    ...props2,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(referenceRef, ref)\n  }), [referenceRef]);\n  const popperRef = (0, import_react.useCallback)(node => {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = (0, import_react.useCallback)((props2 = {}, ref = null) => ({\n    ...props2,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(popperRef, ref),\n    style: {\n      ...props2.style,\n      position: strategy,\n      minWidth: matchWidth2 ? void 0 : \"max-content\",\n      inset: \"0 auto auto 0\"\n    }\n  }), [strategy, popperRef, matchWidth2]);\n  const getArrowProps = (0, import_react.useCallback)((props2 = {}, ref = null) => {\n    const {\n      size,\n      shadowColor,\n      bg,\n      style,\n      ...rest\n    } = props2;\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle2(props2)\n    };\n  }, []);\n  const getArrowInnerProps = (0, import_react.useCallback)((props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-popper-arrow-inner\": \"\"\n  }), []);\n  return {\n    update() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.update();\n    },\n    forceUpdate() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps\n  };\n}\nfunction getArrowStyle2(props) {\n  const {\n    size,\n    shadowColor,\n    bg,\n    style\n  } = props;\n  const computedStyle = {\n    ...style,\n    position: \"absolute\"\n  };\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n  return computedStyle;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  popperCSSVars,\n  usePopper\n});","map":{"version":3,"names":["src_exports","__export","popperCSSVars","cssVars","usePopper","module","exports","__toCommonJS","import_react_use_merge_refs","require","import_core","import_react","toVar","value","fallback","var","varRef","arrowShadowColor","arrowSize","arrowSizeHalf","arrowBg","transformOrigin","arrowOffset","getBoxShadow","placement","includes","transforms","top","bottom","left","right","toTransformOrigin","defaultEventListeners","scroll","resize","getEventListenerOptions","eventListeners","enabled","options","matchWidth","name","phase","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","setTransformOrigin","setProperty","positionArrow","setArrowStyles","_a","overrides","getArrowStyle","arrow","Object","assign","property","height","zIndex","vars","startsWith","innerArrow","setInnerArrowStyles","inner","querySelector","boxShadow","transform","background","position","logicals","ltr","rtl","start","end","opposites","getPopperPlacement","dir","_b","props","modifiers","placementProp","strategy","arrowPadding","offset","gutter","flip","boundary","preventOverflow","matchWidth2","direction","useRef","instance","cleanup","setupPopper","useCallback","current","call","createPopper","padding","forceUpdate","destroy","useEffect","referenceRef","node","getReferenceProps","props2","ref","mergeRefs","popperRef","getPopperProps","minWidth","inset","getArrowProps","size","shadowColor","bg","rest","getArrowStyle2","getArrowInnerProps","update","computedStyle"],"sources":["../src/index.ts","../src/use-popper.ts","../src/utils.ts","../src/modifiers.ts","../src/popper.placement.ts"],"sourcesContent":["export type { Placement, PlacementWithLogical } from \"./popper.placement\"\nexport { usePopper } from \"./use-popper\"\nexport type { UsePopperProps, UsePopperReturn } from \"./use-popper\"\nexport { cssVars as popperCSSVars } from \"./utils\"\n","import { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { getPopperPlacement, PlacementWithLogical } from \"./popper.placement\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: PlacementWithLogical\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n  /**\n   * Theme direction `ltr` or `rtl`. Popper's placement will\n   * be set accordingly\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of the popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n    direction = \"ltr\",\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n  const placement = getPopperPlacement(placementProp, direction)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it, so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        {\n          ...customModifiers.matchWidth,\n          enabled: !!matchWidth,\n        },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  const getArrowProps: PropGetter = useCallback((props = {}, ref = null) => {\n    const { size, shadowColor, bg, style, ...rest } = props\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props),\n    }\n  }, [])\n\n  const getArrowInnerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n","import { Placement } from \"@popperjs/core\"\n\nconst toVar = (value: string, fallback?: string) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`,\n})\n\nexport const cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\"),\n} as const\n\nexport function getBoxShadow(placement: Placement) {\n  if (placement.includes(\"top\"))\n    return `1px 1px 0px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"bottom\"))\n    return `-1px -1px 0px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"right\"))\n    return `-1px 1px 0px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"left\"))\n    return `1px -1px 0px 0 var(--popper-arrow-shadow-color)`\n}\n\nconst transforms: Record<string, string> = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const toTransformOrigin = (placement: Placement) => transforms[placement]\n\nconst defaultEventListeners = {\n  scroll: true,\n  resize: true,\n}\n\nexport function getEventListenerOptions(\n  value?: boolean | Partial<typeof defaultEventListeners>,\n) {\n  let eventListeners: {\n    enabled?: boolean\n    options?: typeof defaultEventListeners\n  }\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: { ...defaultEventListeners, ...value },\n    }\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners,\n    }\n  }\n  return eventListeners\n}\n","import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It is useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      const reference = state.elements.reference as HTMLElement\n      state.elements.popper.style.width = `${reference.offsetWidth}px`\n    },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setTransformOrigin(state)\n    },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf\n        .var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setInnerArrowStyles(state)\n    },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n  const boxShadow = getBoxShadow(state.placement)\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow)\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`,\n  })\n}\n","import type { Placement } from \"@popperjs/core\"\n\ntype Logical =\n  | \"start-start\"\n  | \"start-end\"\n  | \"end-start\"\n  | \"end-end\"\n  | \"start\"\n  | \"end\"\n\ntype PlacementWithLogical = Placement | Logical\n\nexport type { Placement, PlacementWithLogical }\n\nconst logicals: Record<Logical, { ltr: Placement; rtl: Placement }> = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" },\n}\n\nconst opposites: Partial<Record<Placement, Placement>> = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\",\n}\n\nexport function getPopperPlacement(\n  placement: PlacementWithLogical,\n  dir: \"ltr\" | \"rtl\" = \"ltr\",\n): Placement {\n  const value = ((logicals as any)[placement]?.[dir] || placement) as Placement\n  if (dir === \"ltr\") return value\n  return (opposites as any)[placement] ?? value\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}