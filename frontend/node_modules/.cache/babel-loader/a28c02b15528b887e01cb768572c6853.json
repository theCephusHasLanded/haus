{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Tab: () => Tab,\n  TabIndicator: () => TabIndicator,\n  TabList: () => TabList,\n  TabPanel: () => TabPanel,\n  TabPanels: () => TabPanels,\n  Tabs: () => Tabs,\n  TabsDescendantsProvider: () => TabsDescendantsProvider,\n  TabsProvider: () => TabsProvider,\n  useTab: () => useTab,\n  useTabIndicator: () => useTabIndicator,\n  useTabList: () => useTabList,\n  useTabPanel: () => useTabPanel,\n  useTabPanels: () => useTabPanels,\n  useTabs: () => useTabs,\n  useTabsContext: () => useTabsContext,\n  useTabsDescendant: () => useTabsDescendant,\n  useTabsDescendants: () => useTabsDescendants,\n  useTabsDescendantsContext: () => useTabsDescendantsContext,\n  useTabsStyles: () => useTabsStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/tab.tsx\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_system2 = require(\"@chakra-ui/system\");\n\n// src/tabs.tsx\nvar import_react_context2 = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_react2 = require(\"react\");\n\n// src/use-tabs.ts\nvar import_clickable = require(\"@chakra-ui/clickable\");\nvar import_descendant = require(\"@chakra-ui/descendant\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_react_use_safe_layout_effect = require(\"@chakra-ui/react-use-safe-layout-effect\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_lazy_utils = require(\"@chakra-ui/lazy-utils\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_react = require(\"react\");\nvar [TabsDescendantsProvider, useTabsDescendantsContext, useTabsDescendants, useTabsDescendant] = (0, import_descendant.createDescendantContext)();\nfunction useTabs(props) {\n  var _a;\n  const {\n    defaultIndex,\n    onChange,\n    index,\n    isManual,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    orientation = \"horizontal\",\n    direction = \"ltr\",\n    ...htmlProps\n  } = props;\n  const [focusedIndex, setFocusedIndex] = (0, import_react.useState)(defaultIndex != null ? defaultIndex : 0);\n  const [selectedIndex, setSelectedIndex] = (0, import_react_use_controllable_state.useControllableState)({\n    defaultValue: defaultIndex != null ? defaultIndex : 0,\n    value: index,\n    onChange\n  });\n  (0, import_react.useEffect)(() => {\n    if (index != null) {\n      setFocusedIndex(index);\n    }\n  }, [index]);\n  const descendants = useTabsDescendants();\n  const uuid = (0, import_react.useId)();\n  const uid = (_a = props.id) != null ? _a : uuid;\n  const id = `tabs-${uid}`;\n  return {\n    id,\n    selectedIndex,\n    focusedIndex,\n    setSelectedIndex,\n    setFocusedIndex,\n    isManual,\n    isLazy,\n    lazyBehavior,\n    orientation,\n    descendants,\n    direction,\n    htmlProps\n  };\n}\nvar [TabsProvider, useTabsContext] = (0, import_react_context.createContext)({\n  name: \"TabsContext\",\n  errorMessage: \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\"\n});\nfunction useTabList(props) {\n  const {\n    focusedIndex,\n    orientation,\n    direction\n  } = useTabsContext();\n  const descendants = useTabsDescendantsContext();\n  const onKeyDown = (0, import_react.useCallback)(event => {\n    const nextTab = () => {\n      var _a;\n      const next = descendants.nextEnabled(focusedIndex);\n      if (next) (_a = next.node) == null ? void 0 : _a.focus();\n    };\n    const prevTab = () => {\n      var _a;\n      const prev = descendants.prevEnabled(focusedIndex);\n      if (prev) (_a = prev.node) == null ? void 0 : _a.focus();\n    };\n    const firstTab = () => {\n      var _a;\n      const first = descendants.firstEnabled();\n      if (first) (_a = first.node) == null ? void 0 : _a.focus();\n    };\n    const lastTab = () => {\n      var _a;\n      const last = descendants.lastEnabled();\n      if (last) (_a = last.node) == null ? void 0 : _a.focus();\n    };\n    const isHorizontal = orientation === \"horizontal\";\n    const isVertical = orientation === \"vertical\";\n    const eventKey = event.key;\n    const ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\";\n    const ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\";\n    const keyMap = {\n      [ArrowStart]: () => isHorizontal && prevTab(),\n      [ArrowEnd]: () => isHorizontal && nextTab(),\n      ArrowDown: () => isVertical && nextTab(),\n      ArrowUp: () => isVertical && prevTab(),\n      Home: firstTab,\n      End: lastTab\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, focusedIndex, orientation, direction]);\n  return {\n    ...props,\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: (0, import_shared_utils.callAllHandlers)(props.onKeyDown, onKeyDown)\n  };\n}\nfunction useTab(props) {\n  const {\n    isDisabled = false,\n    isFocusable = false,\n    ...htmlProps\n  } = props;\n  const {\n    setSelectedIndex,\n    isManual,\n    id,\n    setFocusedIndex,\n    selectedIndex\n  } = useTabsContext();\n  const {\n    index,\n    register\n  } = useTabsDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const isSelected = index === selectedIndex;\n  const onClick = () => {\n    setSelectedIndex(index);\n  };\n  const onFocus = () => {\n    setFocusedIndex(index);\n    const isDisabledButFocusable = isDisabled && isFocusable;\n    const shouldSelect = !isManual && !isDisabledButFocusable;\n    if (shouldSelect) {\n      setSelectedIndex(index);\n    }\n  };\n  const clickableProps = (0, import_clickable.useClickable)({\n    ...htmlProps,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(register, props.ref),\n    isDisabled,\n    isFocusable,\n    onClick: (0, import_shared_utils.callAllHandlers)(props.onClick, onClick)\n  });\n  const type = \"button\";\n  return {\n    ...clickableProps,\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? void 0 : (0, import_shared_utils.callAllHandlers)(props.onFocus, onFocus)\n  };\n}\nvar [TabPanelProvider, useTabPanelContext] = (0, import_react_context.createContext)({});\nfunction useTabPanels(props) {\n  const context = useTabsContext();\n  const {\n    id,\n    selectedIndex\n  } = context;\n  const validChildren = (0, import_react_children_utils.getValidChildren)(props.children);\n  const children = validChildren.map((child, index) => (0, import_react.createElement)(TabPanelProvider, {\n    key: index,\n    value: {\n      isSelected: index === selectedIndex,\n      id: makeTabPanelId(id, index),\n      tabId: makeTabId(id, index),\n      selectedIndex\n    }\n  }, child));\n  return {\n    ...props,\n    children\n  };\n}\nfunction useTabPanel(props) {\n  const {\n    children,\n    ...htmlProps\n  } = props;\n  const {\n    isLazy,\n    lazyBehavior\n  } = useTabsContext();\n  const {\n    isSelected,\n    id,\n    tabId\n  } = useTabPanelContext();\n  const hasBeenSelected = (0, import_react.useRef)(false);\n  if (isSelected) {\n    hasBeenSelected.current = true;\n  }\n  const shouldRenderChildren = (0, import_lazy_utils.lazyDisclosure)({\n    wasSelected: hasBeenSelected.current,\n    isSelected,\n    enabled: isLazy,\n    mode: lazyBehavior\n  });\n  return {\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0,\n    ...htmlProps,\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    \"aria-labelledby\": tabId,\n    hidden: !isSelected,\n    id\n  };\n}\nfunction useTabIndicator() {\n  const context = useTabsContext();\n  const descendants = useTabsDescendantsContext();\n  const {\n    selectedIndex,\n    orientation\n  } = context;\n  const isHorizontal = orientation === \"horizontal\";\n  const isVertical = orientation === \"vertical\";\n  const [rect, setRect] = (0, import_react.useState)(() => {\n    if (isHorizontal) return {\n      left: 0,\n      width: 0\n    };\n    if (isVertical) return {\n      top: 0,\n      height: 0\n    };\n    return void 0;\n  });\n  const [hasMeasured, setHasMeasured] = (0, import_react.useState)(false);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (selectedIndex == null) return;\n    const tab = descendants.item(selectedIndex);\n    if (tab == null) return;\n    if (isHorizontal) {\n      setRect({\n        left: tab.node.offsetLeft,\n        width: tab.node.offsetWidth\n      });\n    }\n    if (isVertical) {\n      setRect({\n        top: tab.node.offsetTop,\n        height: tab.node.offsetHeight\n      });\n    }\n    const id = requestAnimationFrame(() => {\n      setHasMeasured(true);\n    });\n    return () => {\n      if (id) {\n        cancelAnimationFrame(id);\n      }\n    };\n  }, [selectedIndex, isHorizontal, isVertical, descendants]);\n  return {\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    ...rect\n  };\n}\nfunction makeTabId(id, index) {\n  return `${id}--tab-${index}`;\n}\nfunction makeTabPanelId(id, index) {\n  return `${id}--tabpanel-${index}`;\n}\n\n// src/tabs.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar [TabsStylesProvider, useTabsStyles] = (0, import_react_context2.createContext)({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `\n});\nvar Tabs = (0, import_system.forwardRef)(function Tabs2(props, ref) {\n  const styles = (0, import_system.useMultiStyleConfig)(\"Tabs\", props);\n  const {\n    children,\n    className,\n    ...rest\n  } = (0, import_system.omitThemingProps)(props);\n  const {\n    htmlProps,\n    descendants,\n    ...ctx\n  } = useTabs(rest);\n  const context = (0, import_react2.useMemo)(() => ctx, [ctx]);\n  const {\n    isFitted: _,\n    ...rootProps\n  } = htmlProps;\n  const tabsStyles = {\n    position: \"relative\",\n    ...styles.root\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(TabsDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(TabsProvider, {\n      value: context,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(TabsStylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n          className: (0, import_shared_utils2.cx)(\"chakra-tabs\", className),\n          ref,\n          ...rootProps,\n          __css: tabsStyles,\n          children\n        })\n      })\n    })\n  });\n});\nTabs.displayName = \"Tabs\";\n\n// src/tab.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar Tab = (0, import_system2.forwardRef)(function Tab2(props, ref) {\n  const styles = useTabsStyles();\n  const tabProps = useTab({\n    ...props,\n    ref\n  });\n  const tabStyles = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.button, {\n    ...tabProps,\n    className: (0, import_shared_utils3.cx)(\"chakra-tabs__tab\", props.className),\n    __css: tabStyles\n  });\n});\nTab.displayName = \"Tab\";\n\n// src/tab-indicator.tsx\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar TabIndicator = (0, import_system3.forwardRef)(function TabIndicator2(props, ref) {\n  const indicatorStyle = useTabIndicator();\n  const style = {\n    ...props.style,\n    ...indicatorStyle\n  };\n  const styles = useTabsStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_system3.chakra.div, {\n    ref,\n    ...props,\n    className: (0, import_shared_utils4.cx)(\"chakra-tabs__tab-indicator\", props.className),\n    style,\n    __css: styles.indicator\n  });\n});\nTabIndicator.displayName = \"TabIndicator\";\n\n// src/tab-list.tsx\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar TabList = (0, import_system4.forwardRef)(function TabList2(props, ref) {\n  const tablistProps = useTabList({\n    ...props,\n    ref\n  });\n  const styles = useTabsStyles();\n  const tablistStyles = {\n    display: \"flex\",\n    ...styles.tablist\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.chakra.div, {\n    ...tablistProps,\n    className: (0, import_shared_utils5.cx)(\"chakra-tabs__tablist\", props.className),\n    __css: tablistStyles\n  });\n});\nTabList.displayName = \"TabList\";\n\n// src/tab-panel.tsx\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar TabPanel = (0, import_system5.forwardRef)(function TabPanel2(props, ref) {\n  const panelProps = useTabPanel({\n    ...props,\n    ref\n  });\n  const styles = useTabsStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system5.chakra.div, {\n    outline: \"0\",\n    ...panelProps,\n    className: (0, import_shared_utils6.cx)(\"chakra-tabs__tab-panel\", props.className),\n    __css: styles.tabpanel\n  });\n});\nTabPanel.displayName = \"TabPanel\";\n\n// src/tab-panels.tsx\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar TabPanels = (0, import_system6.forwardRef)(function TabPanels2(props, ref) {\n  const panelsProps = useTabPanels(props);\n  const styles = useTabsStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.div, {\n    ...panelsProps,\n    width: \"100%\",\n    ref,\n    className: (0, import_shared_utils7.cx)(\"chakra-tabs__tab-panels\", props.className),\n    __css: styles.tabpanels\n  });\n});\nTabPanels.displayName = \"TabPanels\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Tab,\n  TabIndicator,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTab,\n  useTabIndicator,\n  useTabList,\n  useTabPanel,\n  useTabPanels,\n  useTabs,\n  useTabsContext,\n  useTabsDescendant,\n  useTabsDescendants,\n  useTabsDescendantsContext,\n  useTabsStyles\n});","map":{"version":3,"names":["src_exports","__export","Tab","TabIndicator","TabList","TabPanel","TabPanels","Tabs","TabsDescendantsProvider","TabsProvider","useTab","useTabIndicator","useTabList","useTabPanel","useTabPanels","useTabs","useTabsContext","useTabsDescendant","useTabsDescendants","useTabsDescendantsContext","useTabsStyles","module","exports","__toCommonJS","import_shared_utils3","require","import_system2","import_react_context2","import_system","import_shared_utils2","import_react2","import_clickable","import_descendant","import_react_context","import_react_use_safe_layout_effect","import_react_use_controllable_state","import_react_children_utils","import_react_use_merge_refs","import_lazy_utils","import_shared_utils","import_react","createDescendantContext","props","_a","defaultIndex","onChange","index","isManual","isLazy","lazyBehavior","orientation","direction","htmlProps","focusedIndex","setFocusedIndex","useState","selectedIndex","setSelectedIndex","useControllableState","defaultValue","value","useEffect","descendants","uuid","useId","uid","id","createContext","name","errorMessage","onKeyDown","useCallback","event","nextTab","next","nextEnabled","node","focus","prevTab","prev","prevEnabled","firstTab","first","firstEnabled","lastTab","last","lastEnabled","isHorizontal","isVertical","eventKey","key","ArrowStart","ArrowEnd","keyMap","ArrowDown","ArrowUp","Home","End","action","preventDefault","role","callAllHandlers","isDisabled","isFocusable","register","disabled","isSelected","onClick","onFocus","isDisabledButFocusable","shouldSelect","clickableProps","useClickable","ref","mergeRefs","type","makeTabId","tabIndex","makeTabPanelId","TabPanelProvider","useTabPanelContext","context","validChildren","getValidChildren","children","map","child","createElement","tabId","hasBeenSelected","useRef","current","shouldRenderChildren","lazyDisclosure","wasSelected","enabled","mode","hidden","rect","setRect","left","width","top","height","hasMeasured","setHasMeasured","useSafeLayoutEffect","tab","item","offsetLeft","offsetWidth","offsetTop","offsetHeight","requestAnimationFrame","cancelAnimationFrame","position","transitionProperty","transitionDuration","transitionTimingFunction","import_jsx_runtime","TabsStylesProvider","forwardRef","Tabs2","styles","useMultiStyleConfig","className","rest","omitThemingProps","ctx","useMemo","isFitted","_","rootProps","tabsStyles","root","jsx","chakra","div","cx","__css","displayName","import_jsx_runtime2","Tab2","tabProps","tabStyles","outline","display","alignItems","justifyContent","button","import_shared_utils4","import_system3","import_jsx_runtime3","TabIndicator2","indicatorStyle","style","indicator","import_shared_utils5","import_system4","import_jsx_runtime4","TabList2","tablistProps","tablistStyles","tablist","import_shared_utils6","import_system5","import_jsx_runtime5","TabPanel2","panelProps","tabpanel","import_shared_utils7","import_system6","import_jsx_runtime6","TabPanels2","panelsProps","tabpanels"],"sources":["../src/index.ts","../src/tab.tsx","../src/tabs.tsx","../src/use-tabs.ts","../src/tab-indicator.tsx","../src/tab-list.tsx","../src/tab-panel.tsx","../src/tab-panels.tsx"],"sourcesContent":["export { Tab } from \"./tab\"\nexport type { TabProps } from \"./tab\"\nexport { TabIndicator } from \"./tab-indicator\"\nexport type { TabIndicatorProps } from \"./tab-indicator\"\nexport { TabList } from \"./tab-list\"\nexport type { TabListProps } from \"./tab-list\"\nexport { TabPanel } from \"./tab-panel\"\nexport type { TabPanelProps } from \"./tab-panel\"\nexport { TabPanels } from \"./tab-panels\"\nexport type { TabPanelsProps } from \"./tab-panels\"\nexport { Tabs, useTabsStyles } from \"./tabs\"\nexport type { TabsProps } from \"./tabs\"\nexport {\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTab,\n  useTabIndicator,\n  useTabList,\n  useTabPanel,\n  useTabPanels,\n  useTabs,\n  useTabsContext,\n  useTabsDescendant,\n  useTabsDescendants,\n  useTabsDescendantsContext,\n} from \"./use-tabs\"\nexport type {\n  UseTabListProps,\n  UseTabListReturn,\n  UseTabOptions,\n  UseTabPanelsProps,\n  UseTabProps,\n  UseTabsProps,\n  UseTabsReturn,\n} from \"./use-tabs\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { UseTabOptions, useTab } from \"./use-tabs\"\n\nexport interface TabProps extends UseTabOptions, HTMLChakraProps<\"button\"> {}\n\n/**\n * Tab button used to activate a specific tab panel. It renders a `button`,\n * and is responsible for automatic and manual selection modes.\n */\nexport const Tab = forwardRef<TabProps, \"button\">(function Tab(props, ref) {\n  const styles = useTabsStyles()\n  const tabProps = useTab({ ...props, ref })\n\n  const tabStyles: SystemStyleObject = {\n    outline: \"0\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...styles.tab,\n  }\n\n  return (\n    <chakra.button\n      {...tabProps}\n      className={cx(\"chakra-tabs__tab\", props.className)}\n      __css={tabStyles}\n    />\n  )\n})\n\nTab.displayName = \"Tab\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  TabsDescendantsProvider,\n  TabsProvider,\n  useTabs,\n  UseTabsProps,\n} from \"./use-tabs\"\n\nconst [TabsStylesProvider, useTabsStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TabsStylesContext`,\n  errorMessage: `useTabsStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\" `,\n})\n\nexport { useTabsStyles }\n\ninterface TabsOptions {\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   * @default false\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs\n   */\n  align?: \"start\" | \"end\" | \"center\"\n}\n\nexport interface TabsProps\n  extends UseTabsProps,\n    ThemingProps<\"Tabs\">,\n    Omit<HTMLChakraProps<\"div\">, \"onChange\">,\n    TabsOptions {\n  children: React.ReactNode\n}\n\n/**\n * Tabs\n *\n * Provides context and logic for all tabs components.\n *\n * @see Docs https://chakra-ui.com/docs/components/tabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport const Tabs = forwardRef<TabsProps, \"div\">(function Tabs(props, ref) {\n  const styles = useMultiStyleConfig(\"Tabs\", props)\n  const { children, className, ...rest } = omitThemingProps(props)\n\n  const { htmlProps, descendants, ...ctx } = useTabs(rest)\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isFitted: _, ...rootProps } = htmlProps as any\n\n  const tabsStyles: SystemStyleObject = {\n    position: \"relative\",\n    ...styles.root,\n  }\n\n  return (\n    <TabsDescendantsProvider value={descendants}>\n      <TabsProvider value={context}>\n        <TabsStylesProvider value={styles}>\n          <chakra.div\n            className={cx(\"chakra-tabs\", className)}\n            ref={ref}\n            {...rootProps}\n            __css={tabsStyles}\n          >\n            {children}\n          </chakra.div>\n        </TabsStylesProvider>\n      </TabsProvider>\n    </TabsDescendantsProvider>\n  )\n})\n\nTabs.displayName = \"Tabs\"\n","import { useClickable, UseClickableProps } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\nimport { callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  useId,\n  createElement,\n} from \"react\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  TabsDescendantsProvider,\n  useTabsDescendantsContext,\n  useTabsDescendants,\n  useTabsDescendant,\n] = createDescendantContext<HTMLButtonElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * useTabs - The root react hook that manages all tab items\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseTabsProps {\n  /**\n   * The orientation of the tab list.\n   * @default \"horizontal\"\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * If `true`, the tabs will be manually activated and\n   * display its panel by pressing Space or Enter.\n   *\n   * If `false`, the tabs will be automatically activated\n   * and their panel is displayed when they receive focus.\n   *\n   * @default false\n   */\n  isManual?: boolean\n  /**\n   * Callback when the index (controlled or un-controlled) changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * The index of the selected tab (in controlled mode)\n   */\n  index?: number\n  /**\n   * The initial index of the selected tab (in uncontrolled mode)\n   */\n  defaultIndex?: number\n  /**\n   * The id of the tab\n   */\n  id?: string\n  /**\n   * Performance 🚀:\n   * If `true`, rendering of the tab panel's will be deferred until it is selected.\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of tab panels' content when not active.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The content of inactive tab panels are always unmounted.\n   * - \"keepMounted\": The content of inactive tab panels is initially unmounted,\n   * but stays mounted when selected.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * The writing mode direction.\n   *\n   * - When in RTL, the left and right navigation is flipped\n   * @default \"ltr\"\n   */\n  direction?: \"rtl\" | \"ltr\"\n}\n\n/**\n * Tabs hook that provides all the states, and accessibility\n * helpers to keep all things working properly.\n *\n * Its returned object will be passed unto a Context Provider\n * so all child components can read from it.\n * There is no document link yet\n * @see Docs https://chakra-ui.com/docs/components/useTabs\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n */\nexport function useTabs(props: UseTabsProps) {\n  const {\n    defaultIndex,\n    onChange,\n    index,\n    isManual,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    orientation = \"horizontal\",\n    direction = \"ltr\",\n    ...htmlProps\n  } = props\n\n  /**\n   * We use this to keep track of the index of the focused tab.\n   *\n   * Tabs can be automatically activated, this means selection follows focus.\n   * When we navigate with the arrow keys, we move focus and selection to next/prev tab\n   *\n   * Tabs can also be manually activated, this means selection does not follow focus.\n   * When we navigate with the arrow keys, we only move focus NOT selection. The user\n   * will need not manually activate the tab using `Enter` or `Space`.\n   *\n   * This is why we need to keep track of the `focusedIndex` and `selectedIndex`\n   */\n  const [focusedIndex, setFocusedIndex] = useState(defaultIndex ?? 0)\n\n  const [selectedIndex, setSelectedIndex] = useControllableState({\n    defaultValue: defaultIndex ?? 0,\n    value: index,\n    onChange,\n  })\n\n  /**\n   * Sync focused `index` with controlled `selectedIndex` (which is the `props.index`)\n   */\n  useEffect(() => {\n    if (index != null) {\n      setFocusedIndex(index)\n    }\n  }, [index])\n\n  /**\n   * Think of `useDescendants` as a register for the tab nodes.\n   */\n  const descendants = useTabsDescendants()\n\n  /**\n   * Generate a unique id or use user-provided id for the tabs widget\n   */\n  const uuid = useId()\n  const uid = props.id ?? uuid\n  const id = `tabs-${uid}`\n\n  return {\n    id,\n    selectedIndex,\n    focusedIndex,\n    setSelectedIndex,\n    setFocusedIndex,\n    isManual,\n    isLazy,\n    lazyBehavior,\n    orientation,\n    descendants,\n    direction,\n    htmlProps,\n  }\n}\n\nexport type UseTabsReturn = Omit<\n  ReturnType<typeof useTabs>,\n  \"htmlProps\" | \"descendants\"\n>\n\nexport const [TabsProvider, useTabsContext] = createContext<UseTabsReturn>({\n  name: \"TabsContext\",\n  errorMessage:\n    \"useTabsContext: `context` is undefined. Seems you forgot to wrap all tabs components within <Tabs />\",\n})\n\nexport interface UseTabListProps {\n  children?: React.ReactNode\n  onKeyDown?: React.KeyboardEventHandler\n  ref?: React.Ref<any>\n}\n\n/**\n * Tabs hook to manage multiple tab buttons,\n * and ensures only one tab is selected per time.\n *\n * @param props props object for the tablist\n */\nexport function useTabList<P extends UseTabListProps>(props: P) {\n  const { focusedIndex, orientation, direction } = useTabsContext()\n\n  const descendants = useTabsDescendantsContext()\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const nextTab = () => {\n        const next = descendants.nextEnabled(focusedIndex)\n        if (next) next.node?.focus()\n      }\n      const prevTab = () => {\n        const prev = descendants.prevEnabled(focusedIndex)\n        if (prev) prev.node?.focus()\n      }\n      const firstTab = () => {\n        const first = descendants.firstEnabled()\n        if (first) first.node?.focus()\n      }\n      const lastTab = () => {\n        const last = descendants.lastEnabled()\n        if (last) last.node?.focus()\n      }\n\n      const isHorizontal = orientation === \"horizontal\"\n      const isVertical = orientation === \"vertical\"\n\n      const eventKey = event.key\n\n      const ArrowStart = direction === \"ltr\" ? \"ArrowLeft\" : \"ArrowRight\"\n      const ArrowEnd = direction === \"ltr\" ? \"ArrowRight\" : \"ArrowLeft\"\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        [ArrowStart]: () => isHorizontal && prevTab(),\n        [ArrowEnd]: () => isHorizontal && nextTab(),\n        ArrowDown: () => isVertical && nextTab(),\n        ArrowUp: () => isVertical && prevTab(),\n        Home: firstTab,\n        End: lastTab,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        action(event)\n      }\n    },\n    [descendants, focusedIndex, orientation, direction],\n  )\n\n  return {\n    ...props,\n    role: \"tablist\",\n    \"aria-orientation\": orientation,\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nexport type UseTabListReturn = ReturnType<typeof useTabList>\n\nexport interface UseTabOptions {\n  /**\n   * If `true`, the `Tab` won't be toggleable\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and `isDisabled`, the `Tab` will be focusable but not interactive.\n   * @default false\n   */\n  isFocusable?: boolean\n}\n\nexport interface UseTabProps\n  extends Omit<UseClickableProps, \"color\">,\n    UseTabOptions {}\n\n/**\n * Tabs hook to manage each tab button.\n *\n * A tab can be disabled and focusable, or both,\n * hence the use of `useClickable` to handle this scenario\n */\nexport function useTab<P extends UseTabProps>(props: P) {\n  const { isDisabled = false, isFocusable = false, ...htmlProps } = props\n\n  const { setSelectedIndex, isManual, id, setFocusedIndex, selectedIndex } =\n    useTabsContext()\n\n  const { index, register } = useTabsDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const isSelected = index === selectedIndex\n\n  const onClick = () => {\n    setSelectedIndex(index)\n  }\n\n  const onFocus = () => {\n    setFocusedIndex(index)\n    const isDisabledButFocusable = isDisabled && isFocusable\n    const shouldSelect = !isManual && !isDisabledButFocusable\n    if (shouldSelect) {\n      setSelectedIndex(index)\n    }\n  }\n\n  const clickableProps = useClickable({\n    ...htmlProps,\n    ref: mergeRefs(register, props.ref),\n    isDisabled,\n    isFocusable,\n    onClick: callAllHandlers(props.onClick, onClick),\n  })\n\n  const type: \"button\" | \"submit\" | \"reset\" = \"button\"\n\n  return {\n    ...clickableProps,\n    id: makeTabId(id, index),\n    role: \"tab\",\n    tabIndex: isSelected ? 0 : -1,\n    type,\n    \"aria-selected\": isSelected,\n    \"aria-controls\": makeTabPanelId(id, index),\n    onFocus: isDisabled ? undefined : callAllHandlers(props.onFocus, onFocus),\n  }\n}\n\nexport interface UseTabPanelsProps {\n  children?: React.ReactNode\n}\n\nconst [TabPanelProvider, useTabPanelContext] = createContext<{\n  isSelected: boolean\n  id: string\n  tabId: string\n  selectedIndex: number\n}>({})\n\n/**\n * Tabs hook for managing the visibility of multiple tab panels.\n *\n * Since only one panel can be show at a time, we use `cloneElement`\n * to inject `selected` panel to each TabPanel.\n *\n * It returns a cloned version of its children with\n * all functionality included.\n */\nexport function useTabPanels<P extends UseTabPanelsProps>(props: P) {\n  const context = useTabsContext()\n\n  const { id, selectedIndex } = context\n\n  const validChildren = getValidChildren(props.children)\n\n  const children = validChildren.map((child, index) =>\n    createElement(\n      TabPanelProvider,\n      {\n        key: index,\n        value: {\n          isSelected: index === selectedIndex,\n          id: makeTabPanelId(id, index),\n          tabId: makeTabId(id, index),\n          selectedIndex,\n        },\n      },\n      child,\n    ),\n  )\n\n  return { ...props, children }\n}\n\n/**\n * Tabs hook for managing the visible/hidden states\n * of the tab panel.\n *\n * @param props props object for the tab panel\n */\nexport function useTabPanel(props: Record<string, any>) {\n  const { children, ...htmlProps } = props\n  const { isLazy, lazyBehavior } = useTabsContext()\n  const { isSelected, id, tabId } = useTabPanelContext()\n\n  const hasBeenSelected = useRef(false)\n  if (isSelected) {\n    hasBeenSelected.current = true\n  }\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenSelected.current,\n    isSelected,\n    enabled: isLazy,\n    mode: lazyBehavior,\n  })\n\n  return {\n    // Puts the tabpanel in the page `Tab` sequence.\n    tabIndex: 0,\n    ...htmlProps,\n    children: shouldRenderChildren ? children : null,\n    role: \"tabpanel\",\n    \"aria-labelledby\": tabId,\n    hidden: !isSelected,\n    id,\n  }\n}\n\n/**\n * Tabs hook to show an animated indicators that\n * follows the active tab.\n *\n * The way we do it is by measuring the DOM Rect (or dimensions)\n * of the active tab, and return that as CSS style for\n * the indicator.\n */\nexport function useTabIndicator(): React.CSSProperties {\n  const context = useTabsContext()\n  const descendants = useTabsDescendantsContext()\n\n  const { selectedIndex, orientation } = context\n\n  const isHorizontal = orientation === \"horizontal\"\n  const isVertical = orientation === \"vertical\"\n\n  // Get the clientRect of the selected tab\n  const [rect, setRect] = useState(() => {\n    if (isHorizontal) return { left: 0, width: 0 }\n    if (isVertical) return { top: 0, height: 0 }\n    return undefined\n  })\n\n  const [hasMeasured, setHasMeasured] = useState(false)\n\n  // Update the selected tab rect when the selectedIndex changes\n  useSafeLayoutEffect(() => {\n    if (selectedIndex == null) return\n\n    const tab = descendants.item(selectedIndex)\n    if (tab == null) return\n\n    // Horizontal Tab: Calculate width and left distance\n    if (isHorizontal) {\n      setRect({ left: tab.node.offsetLeft, width: tab.node.offsetWidth })\n    }\n\n    // Vertical Tab: Calculate height and top distance\n    if (isVertical) {\n      setRect({ top: tab.node.offsetTop, height: tab.node.offsetHeight })\n    }\n\n    // Prevent unwanted transition from 0 to measured rect\n    // by setting the measured state in the next tick\n    const id = requestAnimationFrame(() => {\n      setHasMeasured(true)\n    })\n\n    return () => {\n      if (id) {\n        cancelAnimationFrame(id)\n      }\n    }\n  }, [selectedIndex, isHorizontal, isVertical, descendants])\n\n  return {\n    position: \"absolute\",\n    transitionProperty: \"left, right, top, bottom, height, width\",\n    transitionDuration: hasMeasured ? \"200ms\" : \"0ms\",\n    transitionTimingFunction: \"cubic-bezier(0, 0, 0.2, 1)\",\n    ...rect,\n  }\n}\n\nfunction makeTabId(id: string, index: number) {\n  return `${id}--tab-${index}`\n}\n\nfunction makeTabPanelId(id: string, index: number) {\n  return `${id}--tabpanel-${index}`\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabIndicator } from \"./use-tabs\"\n\nexport interface TabIndicatorProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabIndicator\n *\n * Used to render an active tab indicator that animates between\n * selected tabs.\n */\nexport const TabIndicator = forwardRef<TabIndicatorProps, \"div\">(\n  function TabIndicator(props, ref) {\n    const indicatorStyle = useTabIndicator()\n    const style = {\n      ...props.style,\n      ...indicatorStyle,\n    }\n\n    const styles = useTabsStyles()\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx(\"chakra-tabs__tab-indicator\", props.className)}\n        style={style}\n        __css={styles.indicator}\n      />\n    )\n  },\n)\n\nTabIndicator.displayName = \"TabIndicator\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { UseTabListProps, useTabList } from \"./use-tabs\"\n\nexport interface TabListProps\n  extends UseTabListProps,\n    Omit<HTMLChakraProps<\"div\">, \"onKeyDown\" | \"ref\"> {}\n\n/**\n * TabList is used to manage a list of tab buttons. It renders a `div` by default,\n * and is responsible the keyboard interaction between tabs.\n */\nexport const TabList = forwardRef<TabListProps, \"div\">(function TabList(\n  props,\n  ref,\n) {\n  const tablistProps = useTabList({ ...props, ref })\n\n  const styles = useTabsStyles()\n\n  const tablistStyles: SystemStyleObject = {\n    display: \"flex\",\n    ...styles.tablist,\n  }\n\n  return (\n    <chakra.div\n      {...tablistProps}\n      className={cx(\"chakra-tabs__tablist\", props.className)}\n      __css={tablistStyles}\n    />\n  )\n})\n\nTabList.displayName = \"TabList\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabPanel } from \"./use-tabs\"\n\nexport interface TabPanelProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n * Used to render the content for a specific tab.\n */\nexport const TabPanel = forwardRef<TabPanelProps, \"div\">(function TabPanel(\n  props,\n  ref,\n) {\n  const panelProps = useTabPanel({ ...props, ref })\n  const styles = useTabsStyles()\n\n  return (\n    <chakra.div\n      outline=\"0\"\n      {...panelProps}\n      className={cx(\"chakra-tabs__tab-panel\", props.className)}\n      __css={styles.tabpanel}\n    />\n  )\n})\n\nTabPanel.displayName = \"TabPanel\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { useTabsStyles } from \"./tabs\"\nimport { useTabPanels } from \"./use-tabs\"\n\nexport interface TabPanelsProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * TabPanel\n *\n * Used to manage the rendering of multiple tab panels. It uses\n * `cloneElement` to hide/show tab panels.\n *\n * It renders a `div` by default.\n */\nexport const TabPanels = forwardRef<TabPanelsProps, \"div\">(function TabPanels(\n  props,\n  ref,\n) {\n  const panelsProps = useTabPanels(props)\n  const styles = useTabsStyles()\n\n  return (\n    <chakra.div\n      {...panelsProps}\n      width=\"100%\"\n      ref={ref}\n      className={cx(\"chakra-tabs__tab-panels\", props.className)}\n      __css={styles.tabpanels}\n    />\n  )\n})\n\nTabPanels.displayName = \"TabPanels\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,GAAA,EAAAA,CAAA,KAAAA,GAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAA,YAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAA,OAAA;EAAAC,QAAA,EAAAA,CAAA,KAAAA,QAAA;EAAAC,SAAA,EAAAA,CAAA,KAAAA,SAAA;EAAAC,IAAA,EAAAA,CAAA,KAAAA,IAAA;EAAAC,uBAAA,EAAAA,CAAA,KAAAA,uBAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAA,YAAA;EAAAC,MAAA,EAAAA,CAAA,KAAAA,MAAA;EAAAC,eAAA,EAAAA,CAAA,KAAAA,eAAA;EAAAC,UAAA,EAAAA,CAAA,KAAAA,UAAA;EAAAC,WAAA,EAAAA,CAAA,KAAAA,WAAA;EAAAC,YAAA,EAAAA,CAAA,KAAAA,YAAA;EAAAC,OAAA,EAAAA,CAAA,KAAAA,OAAA;EAAAC,cAAA,EAAAA,CAAA,KAAAA,cAAA;EAAAC,iBAAA,EAAAA,CAAA,KAAAA,iBAAA;EAAAC,kBAAA,EAAAA,CAAA,KAAAA,kBAAA;EAAAC,yBAAA,EAAAA,CAAA,KAAAA,yBAAA;EAAAC,aAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAvB,WAAA;;;ACAA,IAAAwB,oBAAA,GAAmBC,OAAA;AACnB,IAAAC,cAAA,GAKOD,OAAA;;;ACNP,IAAAE,qBAAA,GAA8BF,OAAA;AAC9B,IAAAG,aAAA,GAQOH,OAAA;AACP,IAAAI,oBAAA,GAAmBJ,OAAA;AACnB,IAAAK,aAAA,GAAwBL,OAAA;;;ACXxB,IAAAM,gBAAA,GAAgDN,OAAA;AAChD,IAAAO,iBAAA,GAAwCP,OAAA;AACxC,IAAAQ,oBAAA,GAA8BR,OAAA;AAC9B,IAAAS,mCAAA,GAAoCT,OAAA;AACpC,IAAAU,mCAAA,GAAqCV,OAAA;AACrC,IAAAW,2BAAA,GAAiCX,OAAA;AACjC,IAAAY,2BAAA,GAA0BZ,OAAA;AAC1B,IAAAa,iBAAA,GAAyCb,OAAA;AACzC,IAAAc,mBAAA,GAAgCd,OAAA;AAChC,IAAAe,YAAA,GAOOf,OAAA;AAMA,IAAM,CACXjB,uBAAA,EACAW,yBAAA,EACAD,kBAAA,EACAD,iBAAA,CACF,OAAIe,iBAAA,CAAAS,uBAAA,EAA2C;AA2ExC,SAAS1B,QAAQ2B,KAAA,EAAqB;EAtG7C,IAAAC,EAAA;EAuGE,MAAM;IACJC,YAAA;IACAC,QAAA;IACAC,KAAA;IACAC,QAAA;IACAC,MAAA;IACAC,YAAA,GAAe;IACfC,WAAA,GAAc;IACdC,SAAA,GAAY;IACZ,GAAGC;EACL,IAAIV,KAAA;EAcJ,MAAM,CAACW,YAAA,EAAcC,eAAe,QAAId,YAAA,CAAAe,QAAA,EAASX,YAAA,WAAAA,YAAA,GAAgB,CAAC;EAElE,MAAM,CAACY,aAAA,EAAeC,gBAAgB,QAAItB,mCAAA,CAAAuB,oBAAA,EAAqB;IAC7DC,YAAA,EAAcf,YAAA,WAAAA,YAAA,GAAgB;IAC9BgB,KAAA,EAAOd,KAAA;IACPD;EACF,CAAC;EAKD,IAAAL,YAAA,CAAAqB,SAAA,EAAU,MAAM;IACd,IAAIf,KAAA,IAAS,MAAM;MACjBQ,eAAA,CAAgBR,KAAK;IACvB;EACF,GAAG,CAACA,KAAK,CAAC;EAKV,MAAMgB,WAAA,GAAc5C,kBAAA,CAAmB;EAKvC,MAAM6C,IAAA,OAAOvB,YAAA,CAAAwB,KAAA,EAAM;EACnB,MAAMC,GAAA,IAAMtB,EAAA,GAAAD,KAAA,CAAMwB,EAAA,KAAN,OAAAvB,EAAA,GAAYoB,IAAA;EACxB,MAAMG,EAAA,GAAK,QAAQD,GAAG;EAEtB,OAAO;IACLC,EAAA;IACAV,aAAA;IACAH,YAAA;IACAI,gBAAA;IACAH,eAAA;IACAP,QAAA;IACAC,MAAA;IACAC,YAAA;IACAC,WAAA;IACAY,WAAA;IACAX,SAAA;IACAC;EACF;AACF;AAOO,IAAM,CAAC3C,YAAA,EAAcO,cAAc,QAAIiB,oBAAA,CAAAkC,aAAA,EAA6B;EACzEC,IAAA,EAAM;EACNC,YAAA,EACE;AACJ,CAAC;AAcM,SAASzD,WAAsC8B,KAAA,EAAU;EAC9D,MAAM;IAAEW,YAAA;IAAcH,WAAA;IAAaC;EAAU,IAAInC,cAAA,CAAe;EAEhE,MAAM8C,WAAA,GAAc3C,yBAAA,CAA0B;EAE9C,MAAMmD,SAAA,OAAY9B,YAAA,CAAA+B,WAAA,EACfC,KAAA,IAA+B;IAC9B,MAAMC,OAAA,GAAUA,CAAA,KAAM;MA1M5B,IAAA9B,EAAA;MA2MQ,MAAM+B,IAAA,GAAOZ,WAAA,CAAYa,WAAA,CAAYtB,YAAY;MACjD,IAAIqB,IAAA,EAAM,CAAA/B,EAAA,GAAA+B,IAAA,CAAKE,IAAA,KAAL,gBAAAjC,EAAA,CAAWkC,KAAA;IACvB;IACA,MAAMC,OAAA,GAAUA,CAAA,KAAM;MA9M5B,IAAAnC,EAAA;MA+MQ,MAAMoC,IAAA,GAAOjB,WAAA,CAAYkB,WAAA,CAAY3B,YAAY;MACjD,IAAI0B,IAAA,EAAM,CAAApC,EAAA,GAAAoC,IAAA,CAAKH,IAAA,KAAL,gBAAAjC,EAAA,CAAWkC,KAAA;IACvB;IACA,MAAMI,QAAA,GAAWA,CAAA,KAAM;MAlN7B,IAAAtC,EAAA;MAmNQ,MAAMuC,KAAA,GAAQpB,WAAA,CAAYqB,YAAA,CAAa;MACvC,IAAID,KAAA,EAAO,CAAAvC,EAAA,GAAAuC,KAAA,CAAMN,IAAA,KAAN,gBAAAjC,EAAA,CAAYkC,KAAA;IACzB;IACA,MAAMO,OAAA,GAAUA,CAAA,KAAM;MAtN5B,IAAAzC,EAAA;MAuNQ,MAAM0C,IAAA,GAAOvB,WAAA,CAAYwB,WAAA,CAAY;MACrC,IAAID,IAAA,EAAM,CAAA1C,EAAA,GAAA0C,IAAA,CAAKT,IAAA,KAAL,gBAAAjC,EAAA,CAAWkC,KAAA;IACvB;IAEA,MAAMU,YAAA,GAAerC,WAAA,KAAgB;IACrC,MAAMsC,UAAA,GAAatC,WAAA,KAAgB;IAEnC,MAAMuC,QAAA,GAAWjB,KAAA,CAAMkB,GAAA;IAEvB,MAAMC,UAAA,GAAaxC,SAAA,KAAc,QAAQ,cAAc;IACvD,MAAMyC,QAAA,GAAWzC,SAAA,KAAc,QAAQ,eAAe;IAEtD,MAAM0C,MAAA,GAAqD;MACzD,CAACF,UAAU,GAAG,MAAMJ,YAAA,IAAgBT,OAAA,CAAQ;MAC5C,CAACc,QAAQ,GAAG,MAAML,YAAA,IAAgBd,OAAA,CAAQ;MAC1CqB,SAAA,EAAWA,CAAA,KAAMN,UAAA,IAAcf,OAAA,CAAQ;MACvCsB,OAAA,EAASA,CAAA,KAAMP,UAAA,IAAcV,OAAA,CAAQ;MACrCkB,IAAA,EAAMf,QAAA;MACNgB,GAAA,EAAKb;IACP;IAEA,MAAMc,MAAA,GAASL,MAAA,CAAOJ,QAAQ;IAE9B,IAAIS,MAAA,EAAQ;MACV1B,KAAA,CAAM2B,cAAA,CAAe;MACrBD,MAAA,CAAO1B,KAAK;IACd;EACF,GACA,CAACV,WAAA,EAAaT,YAAA,EAAcH,WAAA,EAAaC,SAAS,CACpD;EAEA,OAAO;IACL,GAAGT,KAAA;IACH0D,IAAA,EAAM;IACN,oBAAoBlD,WAAA;IACpBoB,SAAA,MAAW/B,mBAAA,CAAA8D,eAAA,EAAgB3D,KAAA,CAAM4B,SAAA,EAAWA,SAAS;EACvD;AACF;AA2BO,SAAS5D,OAA8BgC,KAAA,EAAU;EACtD,MAAM;IAAE4D,UAAA,GAAa;IAAOC,WAAA,GAAc;IAAO,GAAGnD;EAAU,IAAIV,KAAA;EAElE,MAAM;IAAEe,gBAAA;IAAkBV,QAAA;IAAUmB,EAAA;IAAIZ,eAAA;IAAiBE;EAAc,IACrExC,cAAA,CAAe;EAEjB,MAAM;IAAE8B,KAAA;IAAO0D;EAAS,IAAIvF,iBAAA,CAAkB;IAC5CwF,QAAA,EAAUH,UAAA,IAAc,CAACC;EAC3B,CAAC;EAED,MAAMG,UAAA,GAAa5D,KAAA,KAAUU,aAAA;EAE7B,MAAMmD,OAAA,GAAUA,CAAA,KAAM;IACpBlD,gBAAA,CAAiBX,KAAK;EACxB;EAEA,MAAM8D,OAAA,GAAUA,CAAA,KAAM;IACpBtD,eAAA,CAAgBR,KAAK;IACrB,MAAM+D,sBAAA,GAAyBP,UAAA,IAAcC,WAAA;IAC7C,MAAMO,YAAA,GAAe,CAAC/D,QAAA,IAAY,CAAC8D,sBAAA;IACnC,IAAIC,YAAA,EAAc;MAChBrD,gBAAA,CAAiBX,KAAK;IACxB;EACF;EAEA,MAAMiE,cAAA,OAAiBhF,gBAAA,CAAAiF,YAAA,EAAa;IAClC,GAAG5D,SAAA;IACH6D,GAAA,MAAK5E,2BAAA,CAAA6E,SAAA,EAAUV,QAAA,EAAU9D,KAAA,CAAMuE,GAAG;IAClCX,UAAA;IACAC,WAAA;IACAI,OAAA,MAASpE,mBAAA,CAAA8D,eAAA,EAAgB3D,KAAA,CAAMiE,OAAA,EAASA,OAAO;EACjD,CAAC;EAED,MAAMQ,IAAA,GAAsC;EAE5C,OAAO;IACL,GAAGJ,cAAA;IACH7C,EAAA,EAAIkD,SAAA,CAAUlD,EAAA,EAAIpB,KAAK;IACvBsD,IAAA,EAAM;IACNiB,QAAA,EAAUX,UAAA,GAAa,IAAI;IAC3BS,IAAA;IACA,iBAAiBT,UAAA;IACjB,iBAAiBY,cAAA,CAAepD,EAAA,EAAIpB,KAAK;IACzC8D,OAAA,EAASN,UAAA,GAAa,aAAY/D,mBAAA,CAAA8D,eAAA,EAAgB3D,KAAA,CAAMkE,OAAA,EAASA,OAAO;EAC1E;AACF;AAMA,IAAM,CAACW,gBAAA,EAAkBC,kBAAkB,QAAIvF,oBAAA,CAAAkC,aAAA,EAK5C,CAAC,CAAC;AAWE,SAASrD,aAA0C4B,KAAA,EAAU;EAClE,MAAM+E,OAAA,GAAUzG,cAAA,CAAe;EAE/B,MAAM;IAAEkD,EAAA;IAAIV;EAAc,IAAIiE,OAAA;EAE9B,MAAMC,aAAA,OAAgBtF,2BAAA,CAAAuF,gBAAA,EAAiBjF,KAAA,CAAMkF,QAAQ;EAErD,MAAMA,QAAA,GAAWF,aAAA,CAAcG,GAAA,CAAI,CAACC,KAAA,EAAOhF,KAAA,SACzCN,YAAA,CAAAuF,aAAA,EACER,gBAAA,EACA;IACE7B,GAAA,EAAK5C,KAAA;IACLc,KAAA,EAAO;MACL8C,UAAA,EAAY5D,KAAA,KAAUU,aAAA;MACtBU,EAAA,EAAIoD,cAAA,CAAepD,EAAA,EAAIpB,KAAK;MAC5BkF,KAAA,EAAOZ,SAAA,CAAUlD,EAAA,EAAIpB,KAAK;MAC1BU;IACF;EACF,GACAsE,KACF,CACF;EAEA,OAAO;IAAE,GAAGpF,KAAA;IAAOkF;EAAS;AAC9B;AAQO,SAAS/G,YAAY6B,KAAA,EAA4B;EACtD,MAAM;IAAEkF,QAAA;IAAU,GAAGxE;EAAU,IAAIV,KAAA;EACnC,MAAM;IAAEM,MAAA;IAAQC;EAAa,IAAIjC,cAAA,CAAe;EAChD,MAAM;IAAE0F,UAAA;IAAYxC,EAAA;IAAI8D;EAAM,IAAIR,kBAAA,CAAmB;EAErD,MAAMS,eAAA,OAAkBzF,YAAA,CAAA0F,MAAA,EAAO,KAAK;EACpC,IAAIxB,UAAA,EAAY;IACduB,eAAA,CAAgBE,OAAA,GAAU;EAC5B;EAEA,MAAMC,oBAAA,OAAuB9F,iBAAA,CAAA+F,cAAA,EAAe;IAC1CC,WAAA,EAAaL,eAAA,CAAgBE,OAAA;IAC7BzB,UAAA;IACA6B,OAAA,EAASvF,MAAA;IACTwF,IAAA,EAAMvF;EACR,CAAC;EAED,OAAO;IAAA;IAELoE,QAAA,EAAU;IACV,GAAGjE,SAAA;IACHwE,QAAA,EAAUQ,oBAAA,GAAuBR,QAAA,GAAW;IAC5CxB,IAAA,EAAM;IACN,mBAAmB4B,KAAA;IACnBS,MAAA,EAAQ,CAAC/B,UAAA;IACTxC;EACF;AACF;AAUO,SAASvD,gBAAA,EAAuC;EACrD,MAAM8G,OAAA,GAAUzG,cAAA,CAAe;EAC/B,MAAM8C,WAAA,GAAc3C,yBAAA,CAA0B;EAE9C,MAAM;IAAEqC,aAAA;IAAeN;EAAY,IAAIuE,OAAA;EAEvC,MAAMlC,YAAA,GAAerC,WAAA,KAAgB;EACrC,MAAMsC,UAAA,GAAatC,WAAA,KAAgB;EAGnC,MAAM,CAACwF,IAAA,EAAMC,OAAO,QAAInG,YAAA,CAAAe,QAAA,EAAS,MAAM;IACrC,IAAIgC,YAAA,EAAc,OAAO;MAAEqD,IAAA,EAAM;MAAGC,KAAA,EAAO;IAAE;IAC7C,IAAIrD,UAAA,EAAY,OAAO;MAAEsD,GAAA,EAAK;MAAGC,MAAA,EAAQ;IAAE;IAC3C,OAAO;EACT,CAAC;EAED,MAAM,CAACC,WAAA,EAAaC,cAAc,QAAIzG,YAAA,CAAAe,QAAA,EAAS,KAAK;EAGpD,IAAArB,mCAAA,CAAAgH,mBAAA,EAAoB,MAAM;IACxB,IAAI1F,aAAA,IAAiB,MAAM;IAE3B,MAAM2F,GAAA,GAAMrF,WAAA,CAAYsF,IAAA,CAAK5F,aAAa;IAC1C,IAAI2F,GAAA,IAAO,MAAM;IAGjB,IAAI5D,YAAA,EAAc;MAChBoD,OAAA,CAAQ;QAAEC,IAAA,EAAMO,GAAA,CAAIvE,IAAA,CAAKyE,UAAA;QAAYR,KAAA,EAAOM,GAAA,CAAIvE,IAAA,CAAK0E;MAAY,CAAC;IACpE;IAGA,IAAI9D,UAAA,EAAY;MACdmD,OAAA,CAAQ;QAAEG,GAAA,EAAKK,GAAA,CAAIvE,IAAA,CAAK2E,SAAA;QAAWR,MAAA,EAAQI,GAAA,CAAIvE,IAAA,CAAK4E;MAAa,CAAC;IACpE;IAIA,MAAMtF,EAAA,GAAKuF,qBAAA,CAAsB,MAAM;MACrCR,cAAA,CAAe,IAAI;IACrB,CAAC;IAED,OAAO,MAAM;MACX,IAAI/E,EAAA,EAAI;QACNwF,oBAAA,CAAqBxF,EAAE;MACzB;IACF;EACF,GAAG,CAACV,aAAA,EAAe+B,YAAA,EAAcC,UAAA,EAAY1B,WAAW,CAAC;EAEzD,OAAO;IACL6F,QAAA,EAAU;IACVC,kBAAA,EAAoB;IACpBC,kBAAA,EAAoBb,WAAA,GAAc,UAAU;IAC5Cc,wBAAA,EAA0B;IAC1B,GAAGpB;EACL;AACF;AAEA,SAAStB,UAAUlD,EAAA,EAAYpB,KAAA,EAAe;EAC5C,OAAO,GAAGoB,EAAE,SAASpB,KAAK;AAC5B;AAEA,SAASwE,eAAepD,EAAA,EAAYpB,KAAA,EAAe;EACjD,OAAO,GAAGoB,EAAE,cAAcpB,KAAK;AACjC;;;ADpZU,IAAAiH,kBAAA,GAAAtI,OAAA;AAvDV,IAAM,CAACuI,kBAAA,EAAoB5I,aAAa,QAAIO,qBAAA,CAAAwC,aAAA,EAE1C;EACAC,IAAA,EAAM;EACNC,YAAA,EAAc;AAChB,CAAC;AAgCM,IAAM9D,IAAA,OAAOqB,aAAA,CAAAqI,UAAA,EAA6B,SAASC,MAAKxH,KAAA,EAAOuE,GAAA,EAAK;EACzE,MAAMkD,MAAA,OAASvI,aAAA,CAAAwI,mBAAA,EAAoB,QAAQ1H,KAAK;EAChD,MAAM;IAAEkF,QAAA;IAAUyC,SAAA;IAAW,GAAGC;EAAK,QAAI1I,aAAA,CAAA2I,gBAAA,EAAiB7H,KAAK;EAE/D,MAAM;IAAEU,SAAA;IAAWU,WAAA;IAAa,GAAG0G;EAAI,IAAIzJ,OAAA,CAAQuJ,IAAI;EACvD,MAAM7C,OAAA,OAAU3F,aAAA,CAAA2I,OAAA,EAAQ,MAAMD,GAAA,EAAK,CAACA,GAAG,CAAC;EAExC,MAAM;IAAEE,QAAA,EAAUC,CAAA;IAAG,GAAGC;EAAU,IAAIxH,SAAA;EAEtC,MAAMyH,UAAA,GAAgC;IACpClB,QAAA,EAAU;IACV,GAAGQ,MAAA,CAAOW;EACZ;EAEA,OACE,mBAAAf,kBAAA,CAAAgB,GAAA,EAACvK,uBAAA;IAAwBoD,KAAA,EAAOE,WAAA;IAC9B8D,QAAA,qBAAAmC,kBAAA,CAAAgB,GAAA,EAACtK,YAAA;MAAamD,KAAA,EAAO6D,OAAA;MACnBG,QAAA,qBAAAmC,kBAAA,CAAAgB,GAAA,EAACf,kBAAA;QAAmBpG,KAAA,EAAOuG,MAAA;QACzBvC,QAAA,qBAAAmC,kBAAA,CAAAgB,GAAA,EAACnJ,aAAA,CAAAoJ,MAAA,CAAOC,GAAA,EAAP;UACCZ,SAAA,MAAWxI,oBAAA,CAAAqJ,EAAA,EAAG,eAAeb,SAAS;UACtCpD,GAAA;UACC,GAAG2D,SAAA;UACJO,KAAA,EAAON,UAAA;UAENjD;QAAA,CACH;MAAA,CACF;IAAA,CACF;EAAA,CACF;AAEJ,CAAC;AAEDrH,IAAA,CAAK6K,WAAA,GAAc;;;AD1Df,IAAAC,mBAAA,GAAA5J,OAAA;AAbG,IAAMvB,GAAA,OAAMwB,cAAA,CAAAuI,UAAA,EAA+B,SAASqB,KAAI5I,KAAA,EAAOuE,GAAA,EAAK;EACzE,MAAMkD,MAAA,GAAS/I,aAAA,CAAc;EAC7B,MAAMmK,QAAA,GAAW7K,MAAA,CAAO;IAAE,GAAGgC,KAAA;IAAOuE;EAAI,CAAC;EAEzC,MAAMuE,SAAA,GAA+B;IACnCC,OAAA,EAAS;IACTC,OAAA,EAAS;IACTC,UAAA,EAAY;IACZC,cAAA,EAAgB;IAChB,GAAGzB,MAAA,CAAOhB;EACZ;EAEA,OACE,mBAAAkC,mBAAA,CAAAN,GAAA,EAACrJ,cAAA,CAAAsJ,MAAA,CAAOa,MAAA,EAAP;IACE,GAAGN,QAAA;IACJlB,SAAA,MAAW7I,oBAAA,CAAA0J,EAAA,EAAG,oBAAoBxI,KAAA,CAAM2H,SAAS;IACjDc,KAAA,EAAOK;EAAA,CACT;AAEJ,CAAC;AAEDtL,GAAA,CAAIkL,WAAA,GAAc;;;AGtClB,IAAAU,oBAAA,GAAmBrK,OAAA;AACnB,IAAAsK,cAAA,GAAoDtK,OAAA;AAwB9C,IAAAuK,mBAAA,GAAAvK,OAAA;AAXC,IAAMtB,YAAA,OAAe4L,cAAA,CAAA9B,UAAA,EAC1B,SAASgC,cAAavJ,KAAA,EAAOuE,GAAA,EAAK;EAChC,MAAMiF,cAAA,GAAiBvL,eAAA,CAAgB;EACvC,MAAMwL,KAAA,GAAQ;IACZ,GAAGzJ,KAAA,CAAMyJ,KAAA;IACT,GAAGD;EACL;EAEA,MAAM/B,MAAA,GAAS/I,aAAA,CAAc;EAE7B,OACE,mBAAA4K,mBAAA,CAAAjB,GAAA,EAACgB,cAAA,CAAAf,MAAA,CAAOC,GAAA,EAAP;IACChE,GAAA;IACC,GAAGvE,KAAA;IACJ2H,SAAA,MAAWyB,oBAAA,CAAAZ,EAAA,EAAG,8BAA8BxI,KAAA,CAAM2H,SAAS;IAC3D8B,KAAA;IACAhB,KAAA,EAAOhB,MAAA,CAAOiC;EAAA,CAChB;AAEJ,CACF;AAEAjM,YAAA,CAAaiL,WAAA,GAAc;;;ACpC3B,IAAAiB,oBAAA,GAAmB5K,OAAA;AACnB,IAAA6K,cAAA,GAKO7K,OAAA;AA2BH,IAAA8K,mBAAA,GAAA9K,OAAA;AAdG,IAAMrB,OAAA,OAAUkM,cAAA,CAAArC,UAAA,EAAgC,SAASuC,SAC9D9J,KAAA,EACAuE,GAAA,EACA;EACA,MAAMwF,YAAA,GAAe7L,UAAA,CAAW;IAAE,GAAG8B,KAAA;IAAOuE;EAAI,CAAC;EAEjD,MAAMkD,MAAA,GAAS/I,aAAA,CAAc;EAE7B,MAAMsL,aAAA,GAAmC;IACvChB,OAAA,EAAS;IACT,GAAGvB,MAAA,CAAOwC;EACZ;EAEA,OACE,mBAAAJ,mBAAA,CAAAxB,GAAA,EAACuB,cAAA,CAAAtB,MAAA,CAAOC,GAAA,EAAP;IACE,GAAGwB,YAAA;IACJpC,SAAA,MAAWgC,oBAAA,CAAAnB,EAAA,EAAG,wBAAwBxI,KAAA,CAAM2H,SAAS;IACrDc,KAAA,EAAOuB;EAAA,CACT;AAEJ,CAAC;AAEDtM,OAAA,CAAQgL,WAAA,GAAc;;;ACzCtB,IAAAwB,oBAAA,GAAmBnL,OAAA;AACnB,IAAAoL,cAAA,GAAoDpL,OAAA;AAmBhD,IAAAqL,mBAAA,GAAArL,OAAA;AARG,IAAMpB,QAAA,OAAWwM,cAAA,CAAA5C,UAAA,EAAiC,SAAS8C,UAChErK,KAAA,EACAuE,GAAA,EACA;EACA,MAAM+F,UAAA,GAAanM,WAAA,CAAY;IAAE,GAAG6B,KAAA;IAAOuE;EAAI,CAAC;EAChD,MAAMkD,MAAA,GAAS/I,aAAA,CAAc;EAE7B,OACE,mBAAA0L,mBAAA,CAAA/B,GAAA,EAAC8B,cAAA,CAAA7B,MAAA,CAAOC,GAAA,EAAP;IACCQ,OAAA,EAAQ;IACP,GAAGuB,UAAA;IACJ3C,SAAA,MAAWuC,oBAAA,CAAA1B,EAAA,EAAG,0BAA0BxI,KAAA,CAAM2H,SAAS;IACvDc,KAAA,EAAOhB,MAAA,CAAO8C;EAAA,CAChB;AAEJ,CAAC;AAED5M,QAAA,CAAS+K,WAAA,GAAc;;;AC7BvB,IAAA8B,oBAAA,GAAmBzL,OAAA;AACnB,IAAA0L,cAAA,GAAoD1L,OAAA;AAuBhD,IAAA2L,mBAAA,GAAA3L,OAAA;AARG,IAAMnB,SAAA,OAAY6M,cAAA,CAAAlD,UAAA,EAAkC,SAASoD,WAClE3K,KAAA,EACAuE,GAAA,EACA;EACA,MAAMqG,WAAA,GAAcxM,YAAA,CAAa4B,KAAK;EACtC,MAAMyH,MAAA,GAAS/I,aAAA,CAAc;EAE7B,OACE,mBAAAgM,mBAAA,CAAArC,GAAA,EAACoC,cAAA,CAAAnC,MAAA,CAAOC,GAAA,EAAP;IACE,GAAGqC,WAAA;IACJzE,KAAA,EAAM;IACN5B,GAAA;IACAoD,SAAA,MAAW6C,oBAAA,CAAAhC,EAAA,EAAG,2BAA2BxI,KAAA,CAAM2H,SAAS;IACxDc,KAAA,EAAOhB,MAAA,CAAOoD;EAAA,CAChB;AAEJ,CAAC;AAEDjN,SAAA,CAAU8K,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"script"}