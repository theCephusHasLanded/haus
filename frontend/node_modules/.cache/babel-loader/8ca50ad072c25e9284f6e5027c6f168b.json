{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Checkbox: () => Checkbox,\n  CheckboxGroup: () => CheckboxGroup,\n  CheckboxIcon: () => CheckboxIcon,\n  useCheckbox: () => useCheckbox,\n  useCheckboxGroup: () => useCheckboxGroup\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/checkbox.tsx\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_react3 = require(\"react\");\n\n// src/checkbox-context.ts\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = (0, import_react_context.createContext)({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/checkbox-icon.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nfunction CheckIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"polyline\", {\n      points: \"1.5 6 4.5 9 10.5 1\"\n    })\n  });\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.svg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    },\n    ...props,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"line\", {\n      x1: \"21\",\n      x2: \"3\",\n      y1: \"12\",\n      y2: \"12\"\n    })\n  });\n}\nfunction CheckboxIcon(props) {\n  const {\n    isIndeterminate,\n    isChecked,\n    ...rest\n  } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    },\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(BaseIcon, {\n      ...rest\n    })\n  }) : null;\n}\n\n// src/use-checkbox.ts\nvar import_form_control = require(\"@chakra-ui/form-control\");\nvar import_react_use_safe_layout_effect = require(\"@chakra-ui/react-use-safe-layout-effect\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_callback_ref = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nvar import_visually_hidden = require(\"@chakra-ui/visually-hidden\");\nvar import_focus_visible = require(\"@zag-js/focus-visible\");\nvar import_react = require(\"react\");\nfunction useCheckbox(props = {}) {\n  const formControlProps = (0, import_form_control.useFormControlProps)(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  const onChangeProp = (0, import_react_use_callback_ref.useCallbackRef)(onChange);\n  const onBlurProp = (0, import_react_use_callback_ref.useCallbackRef)(onBlur);\n  const onFocusProp = (0, import_react_use_callback_ref.useCallbackRef)(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = (0, import_react.useState)(false);\n  const [isFocused, setFocused] = (0, import_react.useState)(false);\n  const [isHovered, setHovered] = (0, import_react.useState)(false);\n  const [isActive, setActive] = (0, import_react.useState)(false);\n  (0, import_react.useEffect)(() => {\n    return (0, import_focus_visible.trackFocusVisible)(setIsFocusVisible);\n  }, []);\n  const inputRef = (0, import_react.useRef)(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = (0, import_react.useState)(true);\n  const [checkedState, setCheckedState] = (0, import_react.useState)(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = (0, import_react.useCallback)(event => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form)) return;\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked);\n    };\n    el.form.addEventListener(\"reset\", formResetListener);\n    return () => {\n      var _a;\n      return (_a = el.form) == null ? void 0 : _a.removeEventListener(\"reset\", formResetListener);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = (0, import_react.useCallback)(event => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = (0, import_react.useCallback)(event => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  (0, import_react_use_safe_layout_effect.useSafeLayoutEffect)(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = (0, import_react.useCallback)((props2 = {}, forwardedRef = null) => {\n    const onPressDown = event => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n      setActive(true);\n    };\n    return {\n      ...props2,\n      ref: forwardedRef,\n      \"data-active\": (0, import_shared_utils.dataAttr)(isActive),\n      \"data-hover\": (0, import_shared_utils.dataAttr)(isHovered),\n      \"data-checked\": (0, import_shared_utils.dataAttr)(isChecked),\n      \"data-focus\": (0, import_shared_utils.dataAttr)(isFocused),\n      \"data-focus-visible\": (0, import_shared_utils.dataAttr)(isFocused && isFocusVisible),\n      \"data-indeterminate\": (0, import_shared_utils.dataAttr)(isIndeterminate),\n      \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n      \"data-invalid\": (0, import_shared_utils.dataAttr)(isInvalid),\n      \"data-readonly\": (0, import_shared_utils.dataAttr)(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: (0, import_shared_utils.callAllHandlers)(props2.onMouseDown, onPressDown),\n      onMouseUp: (0, import_shared_utils.callAllHandlers)(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: (0, import_shared_utils.callAllHandlers)(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: (0, import_shared_utils.callAllHandlers)(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [isActive, isChecked, isDisabled, isFocused, isFocusVisible, isHovered, isIndeterminate, isInvalid, isReadOnly]);\n  const getIndicatorProps = (0, import_react.useCallback)((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    \"data-active\": (0, import_shared_utils.dataAttr)(isActive),\n    \"data-hover\": (0, import_shared_utils.dataAttr)(isHovered),\n    \"data-checked\": (0, import_shared_utils.dataAttr)(isChecked),\n    \"data-focus\": (0, import_shared_utils.dataAttr)(isFocused),\n    \"data-focus-visible\": (0, import_shared_utils.dataAttr)(isFocused && isFocusVisible),\n    \"data-indeterminate\": (0, import_shared_utils.dataAttr)(isIndeterminate),\n    \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n    \"data-invalid\": (0, import_shared_utils.dataAttr)(isInvalid),\n    \"data-readonly\": (0, import_shared_utils.dataAttr)(isReadOnly)\n  }), [isActive, isChecked, isDisabled, isFocused, isFocusVisible, isHovered, isIndeterminate, isInvalid, isReadOnly]);\n  const getRootProps = (0, import_react.useCallback)((props2 = {}, forwardedRef = null) => ({\n    ...htmlProps,\n    ...props2,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(forwardedRef, node => {\n      if (!node) return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: (0, import_shared_utils.callAllHandlers)(props2.onClick, () => {\n      var _a;\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus({\n            preventScroll: true\n          });\n        });\n      }\n    }),\n    \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n    \"data-checked\": (0, import_shared_utils.dataAttr)(isChecked),\n    \"data-invalid\": (0, import_shared_utils.dataAttr)(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = (0, import_react.useCallback)((props2 = {}, forwardedRef = null) => {\n    return {\n      ...props2,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: (0, import_shared_utils.callAllHandlers)(props2.onChange, handleChange),\n      onBlur: (0, import_shared_utils.callAllHandlers)(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: (0, import_shared_utils.callAllHandlers)(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: (0, import_shared_utils.callAllHandlers)(props2.onKeyDown, onKeyDown),\n      onKeyUp: (0, import_shared_utils.callAllHandlers)(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: import_visually_hidden.visuallyHiddenStyle\n    };\n  }, [name, value, id, handleChange, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  const getLabelProps = (0, import_react.useCallback)((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    onMouseDown: (0, import_shared_utils.callAllHandlers)(props2.onMouseDown, stopEvent),\n    \"data-disabled\": (0, import_shared_utils.dataAttr)(isDisabled),\n    \"data-checked\": (0, import_shared_utils.dataAttr)(isChecked),\n    \"data-invalid\": (0, import_shared_utils.dataAttr)(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/use-initial-animation-state.tsx\nvar import_react2 = require(\"react\");\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = (0, import_react2.useState)(isChecked);\n  const [shouldAnimate, setShouldAnimate] = (0, import_react2.useState)(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\n// src/checkbox.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nvar rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nvar checkAnim = (0, import_system2.keyframes)({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nvar indeterminateOpacityAnim = (0, import_system2.keyframes)({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar indeterminateScaleAnim = (0, import_system2.keyframes)({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nvar Checkbox = (0, import_system2.forwardRef)(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = {\n    ...group,\n    ...props\n  };\n  const styles = (0, import_system2.useMultiStyleConfig)(\"Checkbox\", mergedProps);\n  const ownProps = (0, import_system2.omitThemingProps)(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */(0, import_jsx_runtime2.jsx)(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = (0, import_shared_utils2.callAll)(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const shouldAnimate = useInitialAnimationState(state.isChecked);\n  const iconStyles = (0, import_react3.useMemo)(() => ({\n    animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]);\n  const clonedIcon = (0, import_react3.cloneElement)(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(import_system2.chakra.label, {\n    __css: {\n      ...rootStyles,\n      ...styles.container\n    },\n    className: (0, import_shared_utils2.cx)(\"chakra-checkbox\", className),\n    ...getRootProps(),\n    children: [/* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"input\", {\n      className: \"chakra-checkbox__input\",\n      ...getInputProps(inputProps, ref)\n    }), /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.span, {\n      __css: {\n        ...controlStyles,\n        ...styles.control\n      },\n      className: \"chakra-checkbox__control\",\n      ...getCheckboxProps(),\n      children: clonedIcon\n    }), children && /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.span, {\n      className: \"chakra-checkbox__label\",\n      ...getLabelProps(),\n      __css: {\n        marginStart: spacing,\n        ...styles.label\n      },\n      children\n    })]\n  });\n});\nCheckbox.displayName = \"Checkbox\";\n\n// src/checkbox-group.tsx\nvar import_react5 = require(\"react\");\n\n// src/use-checkbox-group.ts\nvar import_react_use_callback_ref2 = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_react4 = require(\"react\");\nfunction isInputEvent(value) {\n  return value && (0, import_shared_utils3.isObject)(value) && (0, import_shared_utils3.isObject)(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = (0, import_react_use_callback_ref2.useCallbackRef)(onChange);\n  const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = (0, import_react4.useCallback)(eventOrValue => {\n    if (!value) return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter(v => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = (0, import_react4.useCallback)((props2 = {}) => {\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return {\n      ...props2,\n      [checkedKey]: value.some(val => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nfunction CheckboxGroup(props) {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    isDisabled\n  } = props;\n  const {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  const group = (0, import_react5.useMemo)(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n});","map":{"version":3,"names":["src_exports","__export","Checkbox","CheckboxGroup","CheckboxIcon","useCheckbox","useCheckboxGroup","module","exports","__toCommonJS","import_shared_utils2","require","import_system2","import_react3","import_react_context","CheckboxGroupProvider","useCheckboxGroupContext","createContext","name","strict","import_system","import_jsx_runtime","CheckIcon","props","jsx","chakra","svg","width","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","children","points","IndeterminateIcon","x1","x2","y1","y2","isIndeterminate","isChecked","rest","BaseIcon","div","display","alignItems","justifyContent","height","import_form_control","import_react_use_safe_layout_effect","import_react_use_update_effect","import_react_use_callback_ref","import_react_use_merge_refs","import_shared_utils","omit","object","keysToOmit","clone","Object","assign","key","import_visually_hidden","import_focus_visible","import_react","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","onChange","value","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","isFocusVisible","setIsFocusVisible","useState","isFocused","setFocused","isHovered","setHovered","isActive","setActive","useEffect","trackFocusVisible","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","handleChange","useCallback","event","preventDefault","target","checked","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","el","form","formResetListener","addEventListener","_a","removeEventListener","trulyDisabled","onKeyDown","onKeyUp","notInSync","getCheckboxProps","props2","forwardedRef","onPressDown","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getIndicatorProps","getRootProps","mergeRefs","node","tagName","onClick","click","requestAnimationFrame","_a2","focus","preventScroll","getInputProps","type","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","state","stopPropagation","import_react2","useInitialAnimationState","previousIsChecked","setPreviousIsChecked","shouldAnimate","setShouldAnimate","import_jsx_runtime2","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","cursor","position","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","forwardRef","Checkbox2","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","iconColor","iconSize","icon","isCheckedProp","inputProps","includes","callAll","iconStyles","useMemo","animation","fontSize","color","clonedIcon","cloneElement","__css","jsxs","label","container","cx","span","control","marginStart","displayName","import_react5","import_react_use_callback_ref2","import_react_use_controllable_state","import_shared_utils3","import_react4","isInputEvent","isObject","defaultValue","valueProp","isNative","setValue","useControllableState","eventOrValue","selectedValue","nextValue","filter","v","String","checkedKey","some","val","import_jsx_runtime3","colorScheme","size","variant"],"sources":["../src/index.ts","../src/checkbox.tsx","../src/checkbox-context.ts","../src/checkbox-icon.tsx","../src/use-checkbox.ts","../../../utilities/object-utils/src/omit.ts","../src/use-initial-animation-state.tsx","../src/checkbox-group.tsx","../src/use-checkbox-group.ts"],"sourcesContent":["export { Checkbox } from \"./checkbox\"\nexport type { CheckboxProps } from \"./checkbox\"\nexport { CheckboxGroup } from \"./checkbox-group\"\nexport type { CheckboxGroupProps } from \"./checkbox-group\"\nexport { CheckboxIcon } from \"./checkbox-icon\"\nexport type { CheckboxIconProps } from \"./checkbox-icon\"\nexport type {\n  CheckboxGroupContext,\n  CheckboxState,\n  UseCheckboxGroupProps,\n  UseCheckboxProps,\n} from \"./checkbox-types\"\nexport { useCheckbox } from \"./use-checkbox\"\nexport type { UseCheckboxReturn } from \"./use-checkbox\"\nexport { useCheckboxGroup } from \"./use-checkbox-group\"\nexport type { UseCheckboxGroupReturn } from \"./use-checkbox-group\"\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  PropsOf,\n  SystemStyleObject,\n  ThemingProps,\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement, useMemo } from \"react\"\nimport { useCheckboxGroupContext } from \"./checkbox-context\"\nimport { CheckboxIcon } from \"./checkbox-icon\"\nimport { CheckboxOptions, UseCheckboxProps } from \"./checkbox-types\"\nimport { useCheckbox } from \"./use-checkbox\"\nimport { useInitialAnimationState } from \"./use-initial-animation-state\"\n\nconst controlStyles: SystemStyleObject = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0,\n}\n\nconst rootStyles: SystemStyleObject = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\",\n}\n\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\",\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\",\n  },\n})\n\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0,\n  },\n  to: {\n    opacity: 1,\n  },\n})\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\",\n  },\n  to: {\n    transform: \"scaleX(1)\",\n  },\n})\n\ntype CheckboxControlProps = Omit<HTMLChakraProps<\"div\">, keyof UseCheckboxProps>\n\ntype BaseInputProps = Pick<\n  PropsOf<\"input\">,\n  \"onBlur\" | \"checked\" | \"defaultChecked\"\n>\n\nexport interface CheckboxProps\n  extends CheckboxControlProps,\n    BaseInputProps,\n    ThemingProps<\"Checkbox\">,\n    UseCheckboxProps,\n    CheckboxOptions {}\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport const Checkbox = forwardRef<CheckboxProps, \"input\">(function Checkbox(\n  props,\n  ref,\n) {\n  const group = useCheckboxGroupContext()\n\n  const mergedProps = { ...group, ...props } as CheckboxProps\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps)\n\n  const ownProps = omitThemingProps(props)\n\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = <CheckboxIcon />,\n    isChecked: isCheckedProp,\n    isDisabled = group?.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps\n\n  let isChecked = isCheckedProp\n  if (group?.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value)\n  }\n\n  let onChange = onChangeProp\n  if (group?.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp)\n  }\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps,\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange,\n  })\n\n  const shouldAnimate = useInitialAnimationState(state.isChecked)\n\n  const iconStyles: SystemStyleObject = useMemo(\n    () => ({\n      animation: !shouldAnimate\n        ? undefined\n        : state.isIndeterminate\n        ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear`\n        : `${checkAnim} 200ms linear`,\n      fontSize: iconSize,\n      color: iconColor,\n      ...styles.icon,\n    }),\n    [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon],\n  )\n\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked,\n  })\n\n  return (\n    <chakra.label\n      __css={{ ...rootStyles, ...styles.container }}\n      className={cx(\"chakra-checkbox\", className)}\n      {...getRootProps()}\n    >\n      <input\n        className=\"chakra-checkbox__input\"\n        {...getInputProps(inputProps, ref)}\n      />\n      <chakra.span\n        __css={{ ...controlStyles, ...styles.control }}\n        className=\"chakra-checkbox__control\"\n        {...getCheckboxProps()}\n      >\n        {clonedIcon}\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-checkbox__label\"\n          {...getLabelProps()}\n          __css={{\n            marginStart: spacing,\n            ...styles.label,\n          }}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nCheckbox.displayName = \"Checkbox\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { CheckboxGroupContext } from \"./checkbox-types\"\n\nexport const [CheckboxGroupProvider, useCheckboxGroupContext] =\n  createContext<CheckboxGroupContext>({\n    name: \"CheckboxGroupContext\",\n    strict: false,\n  })\n","import { chakra, HTMLChakraProps, PropsOf } from \"@chakra-ui/system\"\n\nfunction CheckIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 12 10\"\n      style={{\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16,\n      }}\n      {...props}\n    >\n      <polyline points=\"1.5 6 4.5 9 10.5 1\" />\n    </chakra.svg>\n  )\n}\n\nfunction IndeterminateIcon(props: PropsOf<typeof chakra.svg>) {\n  return (\n    <chakra.svg\n      width=\"1.2em\"\n      viewBox=\"0 0 24 24\"\n      style={{ stroke: \"currentColor\", strokeWidth: 4 }}\n      {...props}\n    >\n      <line x1=\"21\" x2=\"3\" y1=\"12\" y2=\"12\" />\n    </chakra.svg>\n  )\n}\n\nexport interface CheckboxIconProps extends HTMLChakraProps<\"svg\"> {\n  /**\n   * @default false\n   */\n  isIndeterminate?: boolean\n  /**\n   * @default false\n   */\n  isChecked?: boolean\n}\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nexport function CheckboxIcon(props: CheckboxIconProps) {\n  const { isIndeterminate, isChecked, ...rest } = props\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon\n\n  return isChecked || isIndeterminate ? (\n    <chakra.div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n      }}\n    >\n      <BaseIcon {...rest} />\n    </chakra.div>\n  ) : null\n}\n","import { useFormControlProps } from \"@chakra-ui/form-control\"\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport type { PropGetter } from \"@chakra-ui/react-types\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { callAllHandlers, dataAttr } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport { trackFocusVisible } from \"@zag-js/focus-visible\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { CheckboxState, UseCheckboxProps } from \"./checkbox-types\"\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const formControlProps = useFormControlProps(props)\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy,\n  } = formControlProps\n\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props\n\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\",\n  ])\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocusVisible, setIsFocusVisible] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [isHovered, setHovered] = useState(false)\n  const [isActive, setActive] = useState(false)\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const isControlled = checkedProp !== undefined\n  const isChecked = isControlled ? checkedProp : checkedState\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false)\n    }\n  }, [isDisabled, setFocused])\n\n  /**\n   * HTMLFormElement.reset() should reset the checkbox state\n   */\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current\n    if (!el?.form) return\n    const formResetListener = () => {\n      setCheckedState(!!defaultChecked)\n    }\n    el.form.addEventListener(\"reset\", formResetListener)\n    return () => el.form?.removeEventListener(\"reset\", formResetListener)\n  }, [])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(true)\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive(false)\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        if (isFocused) {\n          event.preventDefault()\n        }\n        setActive(true)\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, () => setActive(false)),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, () =>\n          setHovered(true),\n        ),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, () =>\n          setHovered(false),\n        ),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getIndicatorProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n    }),\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isFocusVisible,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          requestAnimationFrame(() => {\n            inputRef.current?.focus({ preventScroll: true })\n          })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        tabIndex,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, () =>\n          setFocused(false),\n        ),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, () =>\n          setFocused(true),\n        ),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n      tabIndex,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  const state: CheckboxState = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n  }\n\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getIndicatorProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import { useState } from \"react\"\n\nexport function useInitialAnimationState(isChecked: boolean) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true)\n    setPreviousIsChecked(isChecked)\n  }\n\n  return shouldAnimate\n}\n","import { ThemingProps } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { CheckboxGroupProvider } from \"./checkbox-context\"\nimport { UseCheckboxGroupProps } from \"./checkbox-types\"\nimport { useCheckboxGroup } from \"./use-checkbox-group\"\n\nexport interface CheckboxGroupProps\n  extends UseCheckboxGroupProps,\n    Omit<ThemingProps<\"Checkbox\">, \"orientation\"> {\n  children?: React.ReactNode\n}\n\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nexport function CheckboxGroup(props: CheckboxGroupProps) {\n  const { colorScheme, size, variant, children, isDisabled } = props\n  const { value, onChange } = useCheckboxGroup(props)\n\n  const group = useMemo(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled,\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled],\n  )\n\n  return <CheckboxGroupProvider value={group} children={children} />\n}\n\nCheckboxGroup.displayName = \"CheckboxGroup\"\n","import { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { isObject } from \"@chakra-ui/shared-utils\"\nimport { useCallback } from \"react\"\nimport { EventOrValue, UseCheckboxGroupProps } from \"./checkbox-types\"\n\nfunction isInputEvent(value: any): value is { target: HTMLInputElement } {\n  return value && isObject(value) && isObject(value.target)\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-checkbox-group\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/\n */\nexport function useCheckboxGroup(props: UseCheckboxGroupProps = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative,\n  } = props\n\n  const onChangeProp = useCallbackRef(onChange)\n\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp,\n  })\n\n  const handleChange = useCallback(\n    (eventOrValue: EventOrValue) => {\n      if (!value) return\n\n      const isChecked = isInputEvent(eventOrValue)\n        ? eventOrValue.target.checked\n        : !value.includes(eventOrValue)\n\n      const selectedValue = isInputEvent(eventOrValue)\n        ? eventOrValue.target.value\n        : eventOrValue\n\n      const nextValue = isChecked\n        ? [...value, selectedValue]\n        : value.filter((v) => String(v) !== String(selectedValue))\n\n      setValue(nextValue)\n    },\n    [setValue, value],\n  )\n\n  const getCheckboxProps = useCallback(\n    (props: Record<string, any> = {}) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\"\n      return {\n        ...props,\n        [checkedKey]: value.some((val) => String(props.value) === String(val)),\n        onChange: handleChange,\n      }\n    },\n    [handleChange, isNative, value],\n  )\n\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps,\n  }\n}\n\nexport type UseCheckboxGroupReturn = ReturnType<typeof useCheckboxGroup>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}