{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  assignRef: () => assignRef,\n  useAnimationState: () => useAnimationState,\n  useBoolean: () => useBoolean,\n  useCallbackRef: () => useCallbackRef,\n  useClipboard: () => useClipboard,\n  useConst: () => useConst,\n  useControllableProp: () => useControllableProp,\n  useControllableState: () => useControllableState,\n  useDimensions: () => useDimensions,\n  useDisclosure: () => useDisclosure,\n  useEventListener: () => useEventListener,\n  useEventListenerMap: () => useEventListenerMap,\n  useFocusEffect: () => useFocusEffect,\n  useFocusOnHide: () => useFocusOnHide,\n  useFocusOnPointerDown: () => useFocusOnPointerDown,\n  useFocusOnShow: () => useFocusOnShow,\n  useForceUpdate: () => useForceUpdate,\n  useId: () => useId,\n  useIds: () => useIds,\n  useInterval: () => useInterval,\n  useLatestRef: () => useLatestRef,\n  useMergeRefs: () => useMergeRefs,\n  useMouseDownRef: () => useMouseDownRef,\n  useOptionalPart: () => useOptionalPart,\n  useOutsideClick: () => useOutsideClick,\n  usePanGesture: () => usePanGesture,\n  usePointerEvent: () => usePointerEvent,\n  usePrevious: () => usePrevious,\n  useSafeLayoutEffect: () => useSafeLayoutEffect,\n  useShortcut: () => useShortcut,\n  useTimeout: () => useTimeout,\n  useUnmountEffect: () => useUnmountEffect,\n  useUpdateEffect: () => useUpdateEffect,\n  useWhyDidYouUpdate: () => useWhyDidYouUpdate\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/use-animation-state.ts\nvar import_utils3 = require(\"@chakra-ui/utils\");\nvar import_react4 = require(\"react\");\n\n// src/use-event-listener.ts\nvar import_utils2 = require(\"@chakra-ui/utils\");\nvar import_react3 = require(\"react\");\n\n// src/use-callback-ref.ts\nvar import_react2 = require(\"react\");\n\n// src/use-safe-layout-effect.ts\nvar import_utils = require(\"@chakra-ui/utils\");\nvar import_react = require(\"react\");\nvar useSafeLayoutEffect = import_utils.isBrowser ? import_react.useLayoutEffect : import_react.useEffect;\n\n// src/use-callback-ref.ts\nfunction useCallbackRef(fn, deps = []) {\n  const ref = (0, import_react2.useRef)(fn);\n  useSafeLayoutEffect(() => {\n    ref.current = fn;\n  });\n  return (0, import_react2.useCallback)((...args) => {\n    var _a;\n    return (_a = ref.current) == null ? void 0 : _a.call(ref, ...args);\n  }, deps);\n}\n\n// src/use-event-listener.ts\nfunction useEventListener(event, handler, env, options) {\n  const listener = useCallbackRef(handler);\n  (0, import_react3.useEffect)(() => {\n    var _a;\n    const node = (_a = (0, import_utils2.runIfFn)(env)) != null ? _a : document;\n    if (!handler) {\n      return;\n    }\n    node.addEventListener(event, listener, options);\n    return () => {\n      node.removeEventListener(event, listener, options);\n    };\n  }, [event, env, options, listener, handler]);\n  return () => {\n    var _a;\n    const node = (_a = (0, import_utils2.runIfFn)(env)) != null ? _a : document;\n    node.removeEventListener(event, listener, options);\n  };\n}\n\n// src/use-animation-state.ts\nfunction useAnimationState(props) {\n  const {\n    isOpen,\n    ref\n  } = props;\n  const [mounted, setMounted] = (0, import_react4.useState)(isOpen);\n  const [once, setOnce] = (0, import_react4.useState)(false);\n  (0, import_react4.useEffect)(() => {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  useEventListener(\"animationend\", () => {\n    setMounted(isOpen);\n  }, () => ref.current);\n  const hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete() {\n      var _a;\n      const win = (0, import_utils3.getOwnerWindow)(ref.current);\n      const evt = new win.CustomEvent(\"animationend\", {\n        bubbles: true\n      });\n      (_a = ref.current) == null ? void 0 : _a.dispatchEvent(evt);\n    }\n  };\n}\n\n// src/use-boolean.ts\nvar import_react5 = require(\"react\");\nfunction useBoolean(initialState = false) {\n  const [value, setValue] = (0, import_react5.useState)(initialState);\n  const callbacks = (0, import_react5.useMemo)(() => ({\n    on: () => setValue(true),\n    off: () => setValue(false),\n    toggle: () => setValue(prev => !prev)\n  }), []);\n  return [value, callbacks];\n}\n\n// src/use-clipboard.ts\nvar import_react6 = require(\"react\");\nvar import_copy_to_clipboard = __toESM(require(\"copy-to-clipboard\"));\nfunction useClipboard(value, optionsOrTimeout = {}) {\n  const [hasCopied, setHasCopied] = (0, import_react6.useState)(false);\n  const [valueState, setValueState] = (0, import_react6.useState)(value);\n  (0, import_react6.useEffect)(() => setValueState(value), [value]);\n  const {\n    timeout = 1500,\n    ...copyOptions\n  } = typeof optionsOrTimeout === \"number\" ? {\n    timeout: optionsOrTimeout\n  } : optionsOrTimeout;\n  const onCopy = (0, import_react6.useCallback)(() => {\n    const didCopy = (0, import_copy_to_clipboard.default)(valueState, copyOptions);\n    setHasCopied(didCopy);\n  }, [valueState, copyOptions]);\n  (0, import_react6.useEffect)(() => {\n    let timeoutId = null;\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false);\n      }, timeout);\n    }\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied\n  };\n}\n\n// src/use-const.ts\nvar import_react7 = require(\"react\");\nfunction useConst(init) {\n  const ref = (0, import_react7.useRef)(null);\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? init() : init;\n  }\n  return ref.current;\n}\n\n// src/use-controllable.ts\nvar import_utils4 = require(\"@chakra-ui/utils\");\nvar import_react8 = require(\"react\");\nfunction useControllableProp(prop, state) {\n  const isControlled = prop !== void 0;\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\nfunction useControllableState(props) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const shouldUpdateProp = useCallbackRef(shouldUpdate);\n  const [valueState, setValue] = (0, import_react8.useState)(defaultValue);\n  const isControlled = valueProp !== void 0;\n  const value = isControlled ? valueProp : valueState;\n  const updateValue = (0, import_react8.useCallback)(next => {\n    const nextValue = (0, import_utils4.runIfFn)(next, value);\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n    onChangeProp(nextValue);\n  }, [isControlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, updateValue];\n}\n\n// src/use-dimensions.ts\nvar import_utils5 = require(\"@chakra-ui/utils\");\nvar import_react9 = require(\"react\");\nfunction useDimensions(ref, observe) {\n  const [dimensions, setDimensions] = (0, import_react9.useState)(null);\n  const rafId = (0, import_react9.useRef)();\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current;\n      if (!node) return;\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = (0, import_utils5.getBox)(node);\n        setDimensions(boxModel);\n      });\n    }\n    measure();\n    if (observe) {\n      window.addEventListener(\"resize\", measure);\n      window.addEventListener(\"scroll\", measure);\n    }\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure);\n        window.removeEventListener(\"scroll\", measure);\n      }\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [observe]);\n  return dimensions;\n}\n\n// src/use-disclosure.ts\nvar import_utils6 = require(\"@chakra-ui/utils\");\n\n// src/use-id.ts\nvar import_react10 = require(\"react\");\nfunction useId(idProp, prefix) {\n  const id = (0, import_react10.useId)();\n  return (0, import_react10.useMemo)(() => idProp || [prefix, id].filter(Boolean).join(\"-\"), [idProp, prefix, id]);\n}\nfunction useIds(idProp, ...prefixes) {\n  const id = useId(idProp);\n  return (0, import_react10.useMemo)(() => {\n    return prefixes.map(prefix => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction useOptionalPart(partId) {\n  const [id, setId] = (0, import_react10.useState)(null);\n  const ref = (0, import_react10.useCallback)(node => {\n    setId(node ? partId : null);\n  }, [partId]);\n  return {\n    ref,\n    id,\n    isRendered: Boolean(id)\n  };\n}\n\n// src/use-disclosure.ts\nvar import_react11 = require(\"react\");\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = (0, import_react11.useState)(props.defaultIsOpen || false);\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState);\n  const id = useId(idProp, \"disclosure\");\n  const onClose = (0, import_react11.useCallback)(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  const onOpen = (0, import_react11.useCallback)(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  const onToggle = (0, import_react11.useCallback)(() => {\n    const action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props2 = {}) => ({\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: (0, import_utils6.callAllHandlers)(props2.onClick, onToggle)\n    }),\n    getDisclosureProps: (props2 = {}) => ({\n      ...props2,\n      hidden: !isOpen,\n      id\n    })\n  };\n}\n\n// src/use-event-listener-map.ts\nvar import_utils7 = require(\"@chakra-ui/utils\");\nvar import_react12 = require(\"react\");\nfunction useEventListenerMap() {\n  const listeners = (0, import_react12.useRef)( /* @__PURE__ */new Map());\n  const currentListeners = listeners.current;\n  const add = (0, import_react12.useCallback)((el, type, listener, options) => {\n    const pointerEventListener = (0, import_utils7.wrapPointerEventHandler)(listener, type === \"pointerdown\");\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: (0, import_utils7.getPointerEventName)(type),\n      el,\n      options\n    });\n    el.addEventListener(type, pointerEventListener, options);\n  }, []);\n  const remove = (0, import_react12.useCallback)((el, type, listener, options) => {\n    const {\n      __listener: pointerEventListener\n    } = listeners.current.get(listener);\n    el.removeEventListener(type, pointerEventListener, options);\n    listeners.current.delete(pointerEventListener);\n  }, []);\n  (0, import_react12.useEffect)(() => () => {\n    currentListeners.forEach((value, key) => {\n      remove(value.el, value.type, key, value.options);\n    });\n  }, [remove, currentListeners]);\n  return {\n    add,\n    remove\n  };\n}\n\n// src/use-focus-effect.ts\nvar import_utils8 = require(\"@chakra-ui/utils\");\n\n// src/use-update-effect.ts\nvar import_react13 = require(\"react\");\nvar useUpdateEffect = (effect, deps) => {\n  const renderCycleRef = (0, import_react13.useRef)(false);\n  const effectCycleRef = (0, import_react13.useRef)(false);\n  (0, import_react13.useEffect)(() => {\n    const isMounted = renderCycleRef.current;\n    const shouldRun = isMounted && effectCycleRef.current;\n    if (shouldRun) {\n      return effect();\n    }\n    effectCycleRef.current = true;\n  }, deps);\n  (0, import_react13.useEffect)(() => {\n    renderCycleRef.current = true;\n    return () => {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\n\n// src/use-focus-effect.ts\nfunction useFocusEffect(ref, options) {\n  const {\n    shouldFocus,\n    preventScroll\n  } = options;\n  useUpdateEffect(() => {\n    const node = ref.current;\n    if (!node || !shouldFocus) return;\n    if (!(0, import_utils8.hasFocusWithin)(node)) {\n      (0, import_utils8.focus)(node, {\n        preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\n\n// src/use-focus-on-hide.ts\nvar import_utils9 = require(\"@chakra-ui/utils\");\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el) return false;\n  const activeElement = (0, import_utils9.getActiveElement)(el);\n  if (!activeElement) return false;\n  if ((0, import_utils9.contains)(el, activeElement)) return false;\n  if ((0, import_utils9.isTabbable)(activeElement)) return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const {\n    shouldFocus: shouldFocusProp,\n    visible,\n    focusRef\n  } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus) return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    if (el) {\n      (0, import_utils9.focus)(el, {\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n\n// src/use-focus-on-pointerdown.ts\nvar import_utils11 = require(\"@chakra-ui/utils\");\n\n// src/use-pointer-event.ts\nvar import_utils10 = require(\"@chakra-ui/utils\");\nfunction usePointerEvent(env, eventName, handler, options) {\n  return useEventListener((0, import_utils10.getPointerEventName)(eventName), (0, import_utils10.wrapPointerEventHandler)(handler, eventName === \"pointerdown\"), env, options);\n}\n\n// src/use-focus-on-pointerdown.ts\nfunction useFocusOnPointerDown(props) {\n  const {\n    ref,\n    elements,\n    enabled\n  } = props;\n  const isSafari = (0, import_utils11.detectBrowser)(\"Safari\");\n  const doc = () => (0, import_utils11.getOwnerDocument)(ref.current);\n  usePointerEvent(doc, \"pointerdown\", event => {\n    if (!isSafari || !enabled) return;\n    const target = event.target;\n    const els = elements != null ? elements : [ref];\n    const isValidTarget = els.some(elementOrRef => {\n      const el = (0, import_utils11.isRefObject)(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return (0, import_utils11.contains)(el, target);\n    });\n    if (!(0, import_utils11.isActiveElement)(target) && isValidTarget) {\n      event.preventDefault();\n      (0, import_utils11.focus)(target);\n    }\n  });\n}\n\n// src/use-focus-on-show.ts\nvar import_utils12 = require(\"@chakra-ui/utils\");\nvar import_react14 = require(\"react\");\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const {\n    focusRef,\n    preventScroll,\n    shouldFocus,\n    visible\n  } = options;\n  const element = (0, import_utils12.isRefObject)(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = (0, import_react14.useRef)(autoFocusValue);\n  const lastVisibleRef = (0, import_react14.useRef)(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = (0, import_react14.useCallback)(() => {\n    if (!visible || !element || !autoFocusRef.current) return;\n    autoFocusRef.current = false;\n    if ((0, import_utils12.contains)(element, document.activeElement)) return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      (0, import_utils12.focus)(focusRef.current, {\n        preventScroll,\n        nextTick: true\n      });\n    } else {\n      const tabbableEls = (0, import_utils12.getAllFocusable)(element);\n      if (tabbableEls.length > 0) {\n        (0, import_utils12.focus)(tabbableEls[0], {\n          preventScroll,\n          nextTick: true\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(\"transitionend\", onFocus, element);\n}\n\n// src/use-force-update.ts\nvar import_react16 = require(\"react\");\n\n// src/use-unmount-effect.ts\nvar import_react15 = require(\"react\");\nfunction useUnmountEffect(fn, deps = []) {\n  return (0, import_react15.useEffect)(() => () => fn(),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n}\n\n// src/use-force-update.ts\nfunction useForceUpdate() {\n  const unloadingRef = (0, import_react16.useRef)(false);\n  const [count, setCount] = (0, import_react16.useState)(0);\n  useUnmountEffect(() => {\n    unloadingRef.current = true;\n  });\n  return (0, import_react16.useCallback)(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1);\n    }\n  }, [count]);\n}\n\n// src/use-interval.ts\nvar import_react17 = require(\"react\");\nfunction useInterval(callback, delay) {\n  const fn = useCallbackRef(callback);\n  (0, import_react17.useEffect)(() => {\n    let intervalId = null;\n    const tick = () => fn();\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\n\n// src/use-latest-ref.ts\nvar import_react18 = require(\"react\");\nfunction useLatestRef(value) {\n  const ref = (0, import_react18.useRef)(null);\n  ref.current = value;\n  return ref;\n}\n\n// src/use-merge-refs.ts\nvar import_react19 = require(\"react\");\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction useMergeRefs(...refs) {\n  return (0, import_react19.useMemo)(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return node => {\n      refs.forEach(ref => {\n        if (ref) assignRef(ref, node);\n      });\n    };\n  }, refs);\n}\n\n// src/use-mouse-down-ref.ts\nvar import_react20 = require(\"react\");\nfunction useMouseDownRef(shouldListen = true) {\n  const mouseDownRef = (0, import_react20.useRef)();\n  useEventListener(\"mousedown\", event => {\n    if (shouldListen) {\n      mouseDownRef.current = event.target;\n    }\n  });\n  return mouseDownRef;\n}\n\n// src/use-outside-click.ts\nvar import_utils13 = require(\"@chakra-ui/utils\");\nvar import_react21 = require(\"react\");\nfunction useOutsideClick(props) {\n  const {\n    ref,\n    handler,\n    enabled = true\n  } = props;\n  const savedHandler = useCallbackRef(handler);\n  const stateRef = (0, import_react21.useRef)({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  const state = stateRef.current;\n  (0, import_react21.useEffect)(() => {\n    if (!enabled) return;\n    const onPointerDown = e => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n    const onMouseUp = event => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    const onTouchEnd = event => {\n      state.ignoreEmulatedMouseEvents = true;\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n    const doc = (0, import_utils13.getOwnerDocument)(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\nfunction isValidEvent(event, ref) {\n  var _a;\n  const target = event.target;\n  if (target) {\n    const doc = (0, import_utils13.getOwnerDocument)(target);\n    if (!doc.contains(target)) return false;\n  }\n  return !((_a = ref.current) == null ? void 0 : _a.contains(target));\n}\n\n// src/use-pan-gesture.ts\nvar import_utils14 = require(\"@chakra-ui/utils\");\nvar import_react22 = require(\"react\");\nfunction usePanGesture(ref, props) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = props;\n  const hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  const panSession = (0, import_react22.useRef)(null);\n  const handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  (0, import_react22.useEffect)(() => {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlers);\n  });\n  function onPointerDown(event) {\n    panSession.current = new import_utils14.PanSession(event, handlers, threshold);\n  }\n  usePointerEvent(() => ref.current, \"pointerdown\", hasPanEvents ? onPointerDown : import_utils14.noop);\n  useUnmountEffect(() => {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.end();\n    panSession.current = null;\n  });\n}\n\n// src/use-previous.ts\nvar import_react23 = require(\"react\");\nfunction usePrevious(value) {\n  const ref = (0, import_react23.useRef)();\n  (0, import_react23.useEffect)(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// src/use-shortcut.ts\nvar import_react24 = require(\"react\");\nfunction isPrintableCharacter(event) {\n  const {\n    key\n  } = event;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\nfunction useShortcut(props = {}) {\n  const {\n    timeout = 300,\n    preventDefault = () => true\n  } = props;\n  const [keys, setKeys] = (0, import_react24.useState)([]);\n  const timeoutRef = (0, import_react24.useRef)();\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  const clearKeysAfterDelay = () => {\n    flush();\n    timeoutRef.current = setTimeout(() => {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n  (0, import_react24.useEffect)(() => flush, []);\n  function onKeyDown(fn) {\n    return event => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys];\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key);\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        setKeys(keysCopy);\n        fn(keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n  return onKeyDown;\n}\n\n// src/use-timeout.ts\nvar import_react25 = require(\"react\");\nfunction useTimeout(callback, delay) {\n  const fn = useCallbackRef(callback);\n  (0, import_react25.useEffect)(() => {\n    if (delay == null) return void 0;\n    let timeoutId = null;\n    timeoutId = window.setTimeout(() => {\n      fn();\n    }, delay);\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [delay, fn]);\n}\n\n// src/use-why-update.ts\nvar import_react26 = require(\"react\");\nfunction useWhyDidYouUpdate(name, props) {\n  const previousProps = (0, import_react26.useRef)();\n  (0, import_react26.useEffect)(() => {\n    if (previousProps.current) {\n      const allKeys = Object.keys({\n        ...previousProps.current,\n        ...props\n      });\n      const changesObj = {};\n      allKeys.forEach(key => {\n        if (previousProps.current[key] !== props[key]) {\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key]\n          };\n        }\n      });\n      if (Object.keys(changesObj).length) {\n        console.log(\"[why-did-you-update]\", name, changesObj);\n      }\n    }\n    previousProps.current = props;\n  });\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  assignRef,\n  useAnimationState,\n  useBoolean,\n  useCallbackRef,\n  useClipboard,\n  useConst,\n  useControllableProp,\n  useControllableState,\n  useDimensions,\n  useDisclosure,\n  useEventListener,\n  useEventListenerMap,\n  useFocusEffect,\n  useFocusOnHide,\n  useFocusOnPointerDown,\n  useFocusOnShow,\n  useForceUpdate,\n  useId,\n  useIds,\n  useInterval,\n  useLatestRef,\n  useMergeRefs,\n  useMouseDownRef,\n  useOptionalPart,\n  useOutsideClick,\n  usePanGesture,\n  usePointerEvent,\n  usePrevious,\n  useSafeLayoutEffect,\n  useShortcut,\n  useTimeout,\n  useUnmountEffect,\n  useUpdateEffect,\n  useWhyDidYouUpdate\n});","map":{"version":3,"names":["src_exports","__export","assignRef","useAnimationState","useBoolean","useCallbackRef","useClipboard","useConst","useControllableProp","useControllableState","useDimensions","useDisclosure","useEventListener","useEventListenerMap","useFocusEffect","useFocusOnHide","useFocusOnPointerDown","useFocusOnShow","useForceUpdate","useId","useIds","useInterval","useLatestRef","useMergeRefs","useMouseDownRef","useOptionalPart","useOutsideClick","usePanGesture","usePointerEvent","usePrevious","useSafeLayoutEffect","useShortcut","useTimeout","useUnmountEffect","useUpdateEffect","useWhyDidYouUpdate","module","exports","__toCommonJS","import_utils3","require","import_react4","import_utils2","import_react3","import_react2","import_utils","import_react","isBrowser","useLayoutEffect","useEffect","fn","deps","ref","useRef","current","useCallback","args","_a","call","event","handler","env","options","listener","node","runIfFn","document","addEventListener","removeEventListener","props","isOpen","mounted","setMounted","useState","once","setOnce","hidden","present","onComplete","win","getOwnerWindow","evt","CustomEvent","bubbles","dispatchEvent","import_react5","initialState","value","setValue","callbacks","useMemo","on","off","toggle","prev","import_react6","import_copy_to_clipboard","__toESM","optionsOrTimeout","hasCopied","setHasCopied","valueState","setValueState","timeout","copyOptions","onCopy","didCopy","default","timeoutId","window","setTimeout","clearTimeout","import_react7","init","import_utils4","import_react8","prop","state","isControlled","valueProp","defaultValue","onChange","shouldUpdate","next","onChangeProp","shouldUpdateProp","updateValue","nextValue","import_utils5","import_react9","observe","dimensions","setDimensions","rafId","measure","requestAnimationFrame","boxModel","getBox","cancelAnimationFrame","import_utils6","import_react10","idProp","prefix","id","filter","Boolean","join","prefixes","map","partId","setId","isRendered","import_react11","onClose","onCloseProp","onOpen","onOpenProp","isOpenProp","onOpenPropCallbackRef","onClosePropCallbackRef","isOpenState","setIsOpen","defaultIsOpen","onToggle","action","getButtonProps","props2","onClick","callAllHandlers","getDisclosureProps","import_utils7","import_react12","listeners","Map","currentListeners","add","el","type","pointerEventListener","wrapPointerEventHandler","set","__listener","getPointerEventName","remove","get","delete","forEach","key","import_utils8","import_react13","effect","renderCycleRef","effectCycleRef","isMounted","shouldRun","shouldFocus","preventScroll","hasFocusWithin","focus","nextTick","import_utils9","preventReturnFocus","containerRef","activeElement","getActiveElement","contains","isTabbable","shouldFocusProp","visible","focusRef","import_utils11","import_utils10","eventName","elements","enabled","isSafari","detectBrowser","doc","getOwnerDocument","target","els","isValidTarget","some","elementOrRef","isRefObject","isActiveElement","preventDefault","import_utils12","import_react14","defaultOptions","element","autoFocusValue","autoFocusRef","lastVisibleRef","onFocus","tabbableEls","getAllFocusable","length","import_react16","import_react15","unloadingRef","count","setCount","import_react17","callback","delay","intervalId","tick","setInterval","clearInterval","import_react18","import_react19","error","Error","refs","every","import_react20","shouldListen","mouseDownRef","import_utils13","import_react21","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","onPointerDown","e","isValidEvent","onMouseUp","onTouchEnd","import_utils14","import_react22","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","threshold","hasPanEvents","panSession","handlers","onSessionStart","onSessionEnd","onStart","onMove","onEnd","info","updateHandlers","PanSession","noop","end","import_react23","import_react24","isPrintableCharacter","test","keys","setKeys","timeoutRef","flush","clearKeysAfterDelay","onKeyDown","keysCopy","pop","concat","stopPropagation","import_react25","import_react26","name","previousProps","allKeys","Object","changesObj","from","to","console","log"],"sources":["../src/index.ts","../src/use-animation-state.ts","../src/use-event-listener.ts","../src/use-callback-ref.ts","../src/use-safe-layout-effect.ts","../src/use-boolean.ts","../src/use-clipboard.ts","../src/use-const.ts","../src/use-controllable.ts","../src/use-dimensions.ts","../src/use-disclosure.ts","../src/use-id.ts","../src/use-event-listener-map.ts","../src/use-focus-effect.ts","../src/use-update-effect.ts","../src/use-focus-on-hide.ts","../src/use-focus-on-pointerdown.ts","../src/use-pointer-event.ts","../src/use-focus-on-show.ts","../src/use-force-update.ts","../src/use-unmount-effect.ts","../src/use-interval.ts","../src/use-latest-ref.ts","../src/use-merge-refs.ts","../src/use-mouse-down-ref.ts","../src/use-outside-click.ts","../src/use-pan-gesture.ts","../src/use-previous.ts","../src/use-shortcut.ts","../src/use-timeout.ts","../src/use-why-update.ts"],"sourcesContent":["export * from \"./use-animation-state\"\nexport * from \"./use-boolean\"\nexport * from \"./use-callback-ref\"\nexport * from \"./use-clipboard\"\nexport * from \"./use-const\"\nexport * from \"./use-controllable\"\nexport * from \"./use-dimensions\"\nexport * from \"./use-disclosure\"\nexport * from \"./use-event-listener\"\nexport * from \"./use-event-listener-map\"\nexport * from \"./use-focus-effect\"\nexport * from \"./use-focus-on-hide\"\nexport * from \"./use-focus-on-pointerdown\"\nexport * from \"./use-focus-on-show\"\nexport * from \"./use-force-update\"\nexport * from \"./use-id\"\nexport * from \"./use-interval\"\nexport * from \"./use-latest-ref\"\nexport * from \"./use-merge-refs\"\nexport * from \"./use-mouse-down-ref\"\nexport * from \"./use-outside-click\"\nexport * from \"./use-pan-gesture\"\nexport * from \"./use-pointer-event\"\nexport * from \"./use-previous\"\nexport * from \"./use-safe-layout-effect\"\nexport * from \"./use-shortcut\"\nexport * from \"./use-timeout\"\nexport * from \"./use-unmount-effect\"\nexport * from \"./use-update-effect\"\nexport * from \"./use-why-update\"\n","import { getOwnerWindow } from \"@chakra-ui/utils\"\nimport { useEffect, useState } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\n\nexport type UseAnimationStateProps = {\n  isOpen: boolean\n  ref: React.RefObject<HTMLElement>\n}\n\nexport function useAnimationState(props: UseAnimationStateProps) {\n  const { isOpen, ref } = props\n\n  const [mounted, setMounted] = useState(isOpen)\n  const [once, setOnce] = useState(false)\n\n  useEffect(() => {\n    if (!once) {\n      setMounted(isOpen)\n      setOnce(true)\n    }\n  }, [isOpen, once, mounted])\n\n  useEventListener(\n    \"animationend\",\n    () => {\n      setMounted(isOpen)\n    },\n    () => ref.current,\n  )\n\n  const hidden = isOpen ? false : !mounted\n\n  return {\n    present: !hidden,\n    onComplete() {\n      const win = getOwnerWindow(ref.current)\n      const evt = new win.CustomEvent(\"animationend\", { bubbles: true })\n      ref.current?.dispatchEvent(evt)\n    },\n  }\n}\n","import { runIfFn } from \"@chakra-ui/utils\"\nimport { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\ntype DocumentOrElement = Document | HTMLElement | null\n\nexport type EventListenerEnv = (() => DocumentOrElement) | DocumentOrElement\n\n/**\n * React hook to manage browser event listeners\n *\n * @param event the event name\n * @param handler the event handler function to execute\n * @param env the dom environment to execute against (defaults to `document`)\n * @param options the event listener options\n *\n * @internal\n */\nexport function useEventListener<K extends keyof DocumentEventMap>(\n  event: K | (string & {}),\n  handler?: (event: DocumentEventMap[K]) => void,\n  env?: EventListenerEnv,\n  options?: boolean | AddEventListenerOptions,\n) {\n  const listener = useCallbackRef(handler) as EventListener\n\n  useEffect(() => {\n    const node = runIfFn(env) ?? document\n\n    if (!handler) {\n      return\n    }\n\n    node.addEventListener(event, listener, options)\n    return () => {\n      node.removeEventListener(event, listener, options)\n    }\n  }, [event, env, options, listener, handler])\n\n  return () => {\n    const node = runIfFn(env) ?? document\n    node.removeEventListener(event, listener, options)\n  }\n}\n","import { useCallback, useRef } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param fn the function to persist\n * @param deps the function dependency list\n */\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  fn: T | undefined,\n  deps: React.DependencyList = [],\n): T {\n  const ref = useRef(fn)\n\n  useSafeLayoutEffect(() => {\n    ref.current = fn\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args) => ref.current?.(...args)) as T, deps)\n}\n","import { isBrowser } from \"@chakra-ui/utils\"\nimport { useEffect, useLayoutEffect } from \"react\"\n\nexport const useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect\n","import { useMemo, useState } from \"react\"\n\ntype InitialState = boolean | (() => boolean)\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-boolean\n */\nexport function useBoolean(initialState: InitialState = false) {\n  const [value, setValue] = useState(initialState)\n  const callbacks = useMemo(\n    () => ({\n      on: () => setValue(true),\n      off: () => setValue(false),\n      toggle: () => setValue((prev) => !prev),\n    }),\n    [],\n  )\n  return [value, callbacks] as const\n}\n","import { useState, useCallback, useEffect } from \"react\"\nimport copy from \"copy-to-clipboard\"\n\nexport interface UseClipboardOptions {\n  /**\n   * timeout delay (in ms) to switch back to initial state once copied.\n   */\n  timeout?: number\n  /**\n   * Set the desired MIME type\n   */\n  format?: string\n}\n\n/**\n * React hook to copy content to clipboard\n *\n * @param value the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-clipboard\n */\nexport function useClipboard(\n  value: string,\n  optionsOrTimeout: number | UseClipboardOptions = {},\n) {\n  const [hasCopied, setHasCopied] = useState(false)\n\n  const [valueState, setValueState] = useState(value)\n  useEffect(() => setValueState(value), [value])\n\n  const { timeout = 1500, ...copyOptions } =\n    typeof optionsOrTimeout === \"number\"\n      ? { timeout: optionsOrTimeout }\n      : optionsOrTimeout\n\n  const onCopy = useCallback(() => {\n    const didCopy = copy(valueState, copyOptions)\n    setHasCopied(didCopy)\n  }, [valueState, copyOptions])\n\n  useEffect(() => {\n    let timeoutId: number | null = null\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(() => {\n        setHasCopied(false)\n      }, timeout)\n    }\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [timeout, hasCopied])\n\n  return {\n    value: valueState,\n    setValue: setValueState,\n    onCopy,\n    hasCopied,\n  }\n}\n","import { useRef } from \"react\"\n\ntype InitFn<T> = () => T\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConst`\n * you can ensure that initializers don't execute twice or more.\n */\nexport function useConst<T extends any>(init: T | InitFn<T>): T {\n  // Use useRef to store the value because it's the least expensive built-in\n  // hook that works here. We could also use `useState` but that's more\n  // expensive internally due to reducer handling which we don't need.\n  const ref = useRef<T | null>(null)\n\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? (init as InitFn<T>)() : init\n  }\n\n  return ref.current as T\n}\n","import { runIfFn } from \"@chakra-ui/utils\"\nimport { useCallback, useState } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport function useControllableProp<T>(prop: T | undefined, state: T) {\n  const isControlled = prop !== undefined\n  const value = isControlled && typeof prop !== \"undefined\" ? prop : state\n  return [isControlled, value] as const\n}\n\nexport interface UseControllableStateProps<T> {\n  /**\n   * The value to used in controlled mode\n   */\n  value?: T\n  /**\n   * The initial value to be used, in uncontrolled mode\n   */\n  defaultValue?: T | (() => T)\n  /**\n   * The callback fired when the value changes\n   */\n  onChange?: (value: T) => void\n  /**\n   * The function that determines if the state should be updated\n   */\n  shouldUpdate?: (prev: T, next: T) => boolean\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nexport function useControllableState<T>(props: UseControllableStateProps<T>) {\n  const {\n    value: valueProp,\n    defaultValue,\n    onChange,\n    shouldUpdate = (prev, next) => prev !== next,\n  } = props\n  const onChangeProp = useCallbackRef(onChange)\n  const shouldUpdateProp = useCallbackRef(shouldUpdate)\n\n  const [valueState, setValue] = useState(defaultValue as T)\n\n  const isControlled = valueProp !== undefined\n  const value = isControlled ? (valueProp as T) : valueState\n\n  const updateValue = useCallback(\n    (next: React.SetStateAction<T>) => {\n      const nextValue = runIfFn(next, value)\n\n      if (!shouldUpdateProp(value, nextValue)) {\n        return\n      }\n\n      if (!isControlled) {\n        setValue(nextValue)\n      }\n\n      onChangeProp(nextValue)\n    },\n    [isControlled, onChangeProp, value, shouldUpdateProp],\n  )\n\n  return [value, updateValue] as [T, React.Dispatch<React.SetStateAction<T>>]\n}\n","import { getBox, BoxModel } from \"@chakra-ui/utils\"\nimport { useRef, useState } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n *\n * @deprecated use the `useSize` hook instead\n *\n * ```jsx\n * import { useSize } from \"@chakra-ui/react-use-size\"\n * ```\n */\nexport function useDimensions(\n  ref: React.RefObject<HTMLElement>,\n  observe?: boolean,\n) {\n  const [dimensions, setDimensions] = useState<BoxModel | null>(null)\n  const rafId = useRef<number>()\n\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current\n      if (!node) return\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node)\n        setDimensions(boxModel)\n      })\n    }\n\n    measure()\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure)\n      window.addEventListener(\"scroll\", measure)\n    }\n\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure)\n        window.removeEventListener(\"scroll\", measure)\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [observe])\n\n  return dimensions\n}\n","import { callAllHandlers } from \"@chakra-ui/utils\"\nimport { useControllableProp } from \"./use-controllable\"\nimport { useId } from \"./use-id\"\nimport { useCallbackRef } from \"./use-callback-ref\"\nimport { useCallback, useState } from \"react\"\n\nexport interface UseDisclosureProps {\n  isOpen?: boolean\n  defaultIsOpen?: boolean\n  onClose?(): void\n  onOpen?(): void\n  id?: string\n}\n\nexport function useDisclosure(props: UseDisclosureProps = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp,\n  } = props\n\n  const onOpenPropCallbackRef = useCallbackRef(onOpenProp)\n  const onClosePropCallbackRef = useCallbackRef(onCloseProp)\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false)\n  const [isControlled, isOpen] = useControllableProp(isOpenProp, isOpenState)\n\n  const id = useId(idProp, \"disclosure\")\n\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false)\n    }\n    onClosePropCallbackRef?.()\n  }, [isControlled, onClosePropCallbackRef])\n\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true)\n    }\n    onOpenPropCallbackRef?.()\n  }, [isControlled, onOpenPropCallbackRef])\n\n  const onToggle = useCallback(() => {\n    const action = isOpen ? onClose : onOpen\n    action()\n  }, [isOpen, onOpen, onClose])\n\n  return {\n    isOpen: !!isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps: (props: any = {}) => ({\n      ...props,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick: callAllHandlers(props.onClick, onToggle),\n    }),\n    getDisclosureProps: (props: any = {}) => ({\n      ...props,\n      hidden: !isOpen,\n      id,\n    }),\n  }\n}\n\nexport type UseDisclosureReturn = ReturnType<typeof useDisclosure>\n","import { useCallback, useId as useReactId, useMemo, useState } from \"react\"\n\nexport function useId(idProp?: string, prefix?: string): string {\n  const id = useReactId()\n\n  return useMemo(\n    () => idProp || [prefix, id].filter(Boolean).join(\"-\"),\n    [idProp, prefix, id],\n  )\n}\n\n/**\n * React hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\nexport function useIds(idProp?: string, ...prefixes: string[]) {\n  const id = useId(idProp)\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`)\n  }, [id, prefixes])\n}\n\n/**\n * Used to generate an id, and after render, check if that id is rendered, so we know\n * if we can use it in places such as `aria-labelledby`.\n *\n * @param partId - The unique id for the component part\n *\n * @example\n * const { ref, id } = useOptionalPart<HTMLInputElement>(`${id}-label`)\n */\nexport function useOptionalPart<T = any>(partId: string) {\n  const [id, setId] = useState<string | null>(null)\n  const ref = useCallback(\n    (node: T) => {\n      setId(node ? partId : null)\n    },\n    [partId],\n  )\n  return { ref, id, isRendered: Boolean(id) }\n}\n","import {\n  PointerEventInfo,\n  getPointerEventName,\n  wrapPointerEventHandler,\n  EventListenerWithPointInfo,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\ninterface EventListeners {\n  add<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (ev: DocumentEventMap[K], info: PointerEventInfo) => any,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  add(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerWithPointInfo,\n    options?: boolean | AddEventListenerOptions,\n  ): void\n  remove<K extends keyof DocumentEventMap>(\n    el: EventTarget,\n    type: K,\n    listener: (ev: DocumentEventMap[K], info: PointerEventInfo) => any,\n    options?: boolean | EventListenerOptions,\n  ): void\n  remove(\n    el: EventTarget,\n    type: string,\n    listener: EventListenerWithPointInfo,\n    options?: boolean | EventListenerOptions,\n  ): void\n}\n\nexport function useEventListenerMap(): EventListeners {\n  const listeners = useRef(new Map())\n  const currentListeners = listeners.current\n\n  const add = useCallback((el: any, type: any, listener: any, options: any) => {\n    const pointerEventListener = wrapPointerEventHandler(\n      listener,\n      type === \"pointerdown\",\n    )\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: getPointerEventName(type),\n      el,\n      options,\n    })\n    el.addEventListener(type, pointerEventListener, options)\n  }, [])\n\n  const remove = useCallback(\n    (el: any, type: any, listener: any, options: any) => {\n      const { __listener: pointerEventListener } =\n        listeners.current.get(listener)\n      el.removeEventListener(type, pointerEventListener, options)\n      listeners.current.delete(pointerEventListener)\n    },\n    [],\n  )\n\n  useEffect(\n    () => () => {\n      currentListeners.forEach((value, key) => {\n        remove(value.el, value.type, key, value.options)\n      })\n    },\n    [remove, currentListeners],\n  )\n\n  return { add, remove }\n}\n","import { hasFocusWithin, focus } from \"@chakra-ui/utils\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport type UseFocusEffectOptions = {\n  shouldFocus: boolean\n  preventScroll?: boolean\n}\n/**\n * React hook to focus an element conditionally\n *\n * @param ref the ref of the element to focus\n * @param options focus management options\n */\nexport function useFocusEffect<T extends HTMLElement>(\n  ref: React.RefObject<T>,\n  options: UseFocusEffectOptions,\n) {\n  const { shouldFocus, preventScroll } = options\n\n  useUpdateEffect(() => {\n    const node = ref.current\n\n    if (!node || !shouldFocus) return\n\n    if (!hasFocusWithin(node)) {\n      focus(node, { preventScroll, nextTick: true })\n    }\n  }, [shouldFocus, ref, preventScroll])\n}\n","import { useEffect, useRef } from \"react\"\n\n/**\n * React effect hook that invokes only on update.\n * It doesn't invoke on mount\n */\nexport const useUpdateEffect: typeof useEffect = (effect, deps) => {\n  const renderCycleRef = useRef(false)\n  const effectCycleRef = useRef(false)\n\n  useEffect(() => {\n    const isMounted = renderCycleRef.current\n    const shouldRun = isMounted && effectCycleRef.current\n    if (shouldRun) {\n      return effect()\n    }\n    effectCycleRef.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps)\n\n  useEffect(() => {\n    renderCycleRef.current = true\n    return () => {\n      renderCycleRef.current = false\n    }\n  }, [])\n}\n","import {\n  contains,\n  focus,\n  FocusableElement,\n  getActiveElement,\n  isTabbable,\n} from \"@chakra-ui/utils\"\nimport { RefObject } from \"react\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport interface UseFocusOnHideOptions {\n  focusRef: RefObject<FocusableElement>\n  shouldFocus?: boolean\n  visible?: boolean\n}\n\nfunction preventReturnFocus(containerRef: React.RefObject<HTMLElement>) {\n  const el = containerRef.current\n  if (!el) return false\n\n  const activeElement = getActiveElement(el)\n\n  if (!activeElement) return false\n  if (contains(el, activeElement)) return false\n  if (isTabbable(activeElement)) return true\n\n  return false\n}\n\n/**\n * Popover hook to manage the focus when the popover closes or hides.\n *\n * We either want to return focus back to the popover trigger or\n * let focus proceed normally if user moved to another interactive\n * element in the viewport.\n */\nexport function useFocusOnHide(\n  containerRef: RefObject<HTMLElement>,\n  options: UseFocusOnHideOptions,\n) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options\n\n  const shouldFocus = shouldFocusProp && !visible\n\n  useUpdateEffect(() => {\n    if (!shouldFocus) return\n\n    if (preventReturnFocus(containerRef)) {\n      return\n    }\n\n    const el = focusRef?.current || containerRef.current\n\n    if (el) {\n      focus(el, { nextTick: true })\n    }\n  }, [shouldFocus, containerRef, focusRef])\n}\n","import {\n  contains,\n  detectBrowser,\n  focus,\n  getOwnerDocument,\n  isActiveElement,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { usePointerEvent } from \"./use-pointer-event\"\n\nexport interface UseFocusOnMouseDownProps {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  elements?: Array<React.RefObject<HTMLElement> | HTMLElement | null>\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nexport function useFocusOnPointerDown(props: UseFocusOnMouseDownProps) {\n  const { ref, elements, enabled } = props\n\n  const isSafari = detectBrowser(\"Safari\")\n  const doc = () => getOwnerDocument(ref.current)\n\n  usePointerEvent(doc, \"pointerdown\", (event) => {\n    if (!isSafari || !enabled) return\n    const target = event.target as HTMLElement\n\n    const els = elements ?? [ref]\n    const isValidTarget = els.some((elementOrRef) => {\n      const el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef\n      return contains(el, target)\n    })\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault()\n      focus(target)\n    }\n  })\n}\n","/**\n * Credit goes to `framer-motion` of this useful utilities.\n * License can be found here: https://github.com/framer/motion\n */\n\nimport {\n  EventListenerWithPointInfo,\n  getPointerEventName,\n  wrapPointerEventHandler,\n} from \"@chakra-ui/utils\"\nimport { EventListenerEnv, useEventListener } from \"./use-event-listener\"\n\n/**\n * @internal\n */\nexport function usePointerEvent(\n  env: EventListenerEnv,\n  eventName: string,\n  handler: EventListenerWithPointInfo,\n  options?: AddEventListenerOptions,\n) {\n  return useEventListener(\n    getPointerEventName(eventName),\n    wrapPointerEventHandler(handler, eventName === \"pointerdown\"),\n    env,\n    options,\n  )\n}\n","import {\n  contains,\n  focus,\n  FocusableElement,\n  getAllFocusable,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useRef } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport interface UseFocusOnShowOptions {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nconst defaultOptions: UseFocusOnShowOptions = {\n  preventScroll: true,\n  shouldFocus: false,\n}\n\nexport function useFocusOnShow<T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  options = defaultOptions,\n) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options\n  const element = isRefObject(target) ? target.current : target\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue\n    }\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n    autoFocusRef.current = false\n\n    if (contains(element, document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      focus(focusRef.current, { preventScroll, nextTick: true })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], { preventScroll, nextTick: true })\n      }\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(\"transitionend\", onFocus, element)\n}\n","import { useCallback, useRef, useState } from \"react\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport function useForceUpdate() {\n  const unloadingRef = useRef(false)\n  const [count, setCount] = useState(0)\n\n  useUnmountEffect(() => {\n    unloadingRef.current = true\n  })\n\n  return useCallback(() => {\n    if (!unloadingRef.current) {\n      setCount(count + 1)\n    }\n  }, [count])\n}\n","import { useEffect } from \"react\"\n\nexport function useUnmountEffect(fn: () => void, deps: any[] = []) {\n  return useEffect(\n    () => () => fn(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n}\n","import { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\n/**\n * React Hook that provides a declarative `setInterval`\n *\n * @param callback the callback to execute at interval\n * @param delay the `setInterval` delay (in ms)\n */\nexport function useInterval(callback: () => void, delay: number | null) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    let intervalId: number | null = null\n    const tick = () => fn()\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay)\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId)\n      }\n    }\n  }, [delay, fn])\n}\n","import { useRef } from \"react\"\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\nexport function useLatestRef<T>(value: T) {\n  const ref = useRef<T | null>(null)\n  ref.current = value\n  return ref as React.MutableRefObject<T>\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { useMemo } from \"react\"\n\ntype ReactRef<T> = React.Ref<T> | React.MutableRefObject<T>\n\nexport function assignRef<T = any>(ref: ReactRef<T> | undefined, value: T) {\n  if (ref == null) return\n\n  if (typeof ref === \"function\") {\n    ref(value)\n    return\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`)\n  }\n}\n\n/**\n * React hook that merges react refs into a single memoized function\n *\n * @example\n * import React from \"react\";\n * import { useMergeRefs } from `@chakra-ui/hooks`;\n *\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   return <div {...props} ref={useMergeRefs(internalRef, ref)} />;\n * });\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-merge-refs\n */\nexport function useMergeRefs<T>(...refs: (ReactRef<T> | undefined)[]) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null\n    }\n    return (node: T) => {\n      refs.forEach((ref) => {\n        if (ref) assignRef(ref, node)\n      })\n    }\n  }, refs)\n}\n","import { useRef } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\n\nexport function useMouseDownRef(shouldListen = true) {\n  const mouseDownRef = useRef<EventTarget | null>()\n\n  useEventListener(\"mousedown\", (event) => {\n    if (shouldListen) {\n      mouseDownRef.current = event.target\n    }\n  })\n\n  return mouseDownRef as React.RefObject<HTMLElement>\n}\n","import { getOwnerDocument } from \"@chakra-ui/utils\"\nimport { useEffect, useRef } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\nexport interface UseOutsideClickProps {\n  /**\n   * Whether the hook is enabled\n   */\n  enabled?: boolean\n  /**\n   * The reference to a DOM element.\n   */\n  ref: React.RefObject<HTMLElement>\n  /**\n   * Function invoked when a click is triggered outside the referenced element.\n   */\n  handler?: (e: Event) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-outside-click\n */\nexport function useOutsideClick(props: UseOutsideClickProps) {\n  const { ref, handler, enabled = true } = props\n  const savedHandler = useCallbackRef(handler)\n\n  const stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  const state = stateRef.current\n\n  useEffect(() => {\n    if (!enabled) return\n    const onPointerDown: any = (e: PointerEvent) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true\n      }\n    }\n\n    const onMouseUp: any = (event: MouseEvent) => {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false\n        return\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const onTouchEnd = (event: TouchEvent) => {\n      state.ignoreEmulatedMouseEvents = true\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false\n        savedHandler(event)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n    doc.addEventListener(\"mousedown\", onPointerDown, true)\n    doc.addEventListener(\"mouseup\", onMouseUp, true)\n    doc.addEventListener(\"touchstart\", onPointerDown, true)\n    doc.addEventListener(\"touchend\", onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true)\n      doc.removeEventListener(\"mouseup\", onMouseUp, true)\n      doc.removeEventListener(\"touchstart\", onPointerDown, true)\n      doc.removeEventListener(\"touchend\", onTouchEnd, true)\n    }\n  }, [handler, ref, savedHandler, state, enabled])\n}\n\nfunction isValidEvent(event: Event, ref: React.RefObject<HTMLElement>) {\n  const target = event.target as HTMLElement\n\n  if (target) {\n    const doc = getOwnerDocument(target)\n    if (!doc.contains(target)) return false\n  }\n\n  return !ref.current?.contains(target)\n}\n","import {\n  AnyPointerEvent,\n  noop,\n  PanEventHandler,\n  PanSession,\n  PanSessionHandlers,\n} from \"@chakra-ui/utils\"\nimport { useEffect, useRef } from \"react\"\nimport { usePointerEvent } from \"./use-pointer-event\"\nimport { useUnmountEffect } from \"./use-unmount-effect\"\n\nexport interface UsePanGestureProps {\n  onPan?: PanEventHandler\n  onPanStart?: PanEventHandler\n  onPanEnd?: PanEventHandler\n  onPanSessionStart?: PanEventHandler\n  onPanSessionEnd?: PanEventHandler\n  threshold?: number\n}\n\nexport function usePanGesture(\n  ref: React.RefObject<HTMLElement>,\n  props: UsePanGestureProps,\n) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold,\n  } = props\n\n  const hasPanEvents = Boolean(\n    onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd,\n  )\n\n  const panSession = useRef<PanSession | null>(null)\n\n  const handlers: Partial<PanSessionHandlers> = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null\n      onPanEnd?.(event, info)\n    },\n  }\n\n  useEffect(() => {\n    panSession.current?.updateHandlers(handlers)\n  })\n\n  function onPointerDown(event: AnyPointerEvent) {\n    panSession.current = new PanSession(event, handlers, threshold)\n  }\n\n  usePointerEvent(\n    () => ref.current,\n    \"pointerdown\",\n    hasPanEvents ? onPointerDown : noop,\n  )\n\n  useUnmountEffect(() => {\n    panSession.current?.end()\n    panSession.current = null\n  })\n}\n","import { useRef, useEffect } from \"react\"\n\nexport function usePrevious<T>(value: T) {\n  const ref = useRef<T | undefined>()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current as T\n}\n","import { useEffect, useRef, useState } from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = useState<string[]>([])\n  const timeoutRef = useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n","import { useEffect } from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(\n  callback: (...args: any[]) => void,\n  delay: number | null,\n) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(() => {\n      fn()\n    }, delay)\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [delay, fn])\n}\n","import { useEffect, useRef } from \"react\"\n\nexport function useWhyDidYouUpdate(name: string, props: any) {\n  const previousProps = useRef<any>()\n\n  useEffect(() => {\n    if (previousProps.current) {\n      const allKeys = Object.keys({ ...previousProps.current, ...props })\n      const changesObj: Record<string, any> = {}\n      allKeys.forEach((key) => {\n        if (previousProps.current[key] !== props[key]) {\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key],\n          }\n        }\n      })\n\n      if (Object.keys(changesObj).length) {\n        console.log(\"[why-did-you-update]\", name, changesObj)\n      }\n    }\n\n    previousProps.current = props\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}