{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Spinner: () => Spinner\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/spinner.tsx\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar spin = (0, import_system.keyframes)({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\nvar Spinner = (0, import_system.forwardRef)((props, ref) => {\n  const styles = (0, import_system.useStyleConfig)(\"Spinner\", props);\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = (0, import_system.omitThemingProps)(props);\n  const _className = (0, import_shared_utils.cx)(\"chakra-spinner\", className);\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles\n  };\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    ref,\n    __css: spinnerStyles,\n    className: _className,\n    ...rest,\n    children: label && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n      srOnly: true,\n      children: label\n    })\n  });\n});\nSpinner.displayName = \"Spinner\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Spinner\n});","map":{"version":3,"names":["src_exports","__export","Spinner","module","exports","__toCommonJS","import_system","require","import_shared_utils","import_jsx_runtime","spin","keyframes","transform","forwardRef","props","ref","styles","useStyleConfig","label","thickness","speed","emptyColor","className","rest","omitThemingProps","_className","cx","spinnerStyles","display","borderColor","borderStyle","borderRadius","borderWidth","borderBottomColor","borderLeftColor","animation","jsx","chakra","div","__css","children","span","srOnly","displayName"],"sources":["../src/index.ts","../src/spinner.tsx"],"sourcesContent":["export { Spinner } from \"./spinner\"\nexport type { SpinnerProps } from \"./spinner\"\n","import {\n  chakra,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst spin = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\",\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\",\n  },\n})\n\ninterface SpinnerOptions {\n  /**\n   * The color of the empty area in the spinner\n   * @default \"transparent\"\n   */\n  emptyColor?: string\n  /**\n   * The color of the spinner\n   */\n  color?: string\n  /**\n   * The thickness of the spinner\n   * @default \"2px\"\n   * @example\n   * ```jsx\n   * <Spinner thickness=\"4px\"/>\n   * ```\n   */\n  thickness?: string\n  /**\n   * The speed of the spinner.\n   * @default \"0.45s\"\n   * @example\n   * ```jsx\n   * <Spinner speed=\"0.2s\"/>\n   * ```\n   */\n  speed?: string\n  /**\n   * For accessibility, it is important to add a fallback loading text.\n   * This text will be visible to screen readers.\n   * @default \"Loading...\"\n   */\n  label?: string\n}\n\nexport interface SpinnerProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof SpinnerOptions>,\n    SpinnerOptions,\n    ThemingProps<\"Spinner\"> {}\n\n/**\n * Spinner is used to indicate the loading state of a page or a component,\n * It renders a `div` by default.\n *\n * @see Docs https://chakra-ui.com/spinner\n */\nexport const Spinner = forwardRef<SpinnerProps, \"div\">((props, ref) => {\n  const styles = useStyleConfig(\"Spinner\", props)\n\n  const {\n    label = \"Loading...\",\n    thickness = \"2px\",\n    speed = \"0.45s\",\n    emptyColor = \"transparent\",\n    className,\n    ...rest\n  } = omitThemingProps(props)\n\n  const _className = cx(\"chakra-spinner\", className)\n\n  const spinnerStyles = {\n    display: \"inline-block\",\n    borderColor: \"currentColor\",\n    borderStyle: \"solid\",\n    borderRadius: \"99999px\",\n    borderWidth: thickness,\n    borderBottomColor: emptyColor,\n    borderLeftColor: emptyColor,\n    animation: `${spin} ${speed} linear infinite`,\n    ...styles,\n  }\n\n  return (\n    <chakra.div\n      ref={ref}\n      __css={spinnerStyles}\n      className={_className}\n      {...rest}\n    >\n      {label && <chakra.span srOnly>{label}</chakra.span>}\n    </chakra.div>\n  )\n})\n\nSpinner.displayName = \"Spinner\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,OAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,WAAA;;;ACAA,IAAAM,aAAA,GAQOC,OAAA;AACP,IAAAC,mBAAA,GAAmBD,OAAA;AA2FH,IAAAE,kBAAA,GAAAF,OAAA;AAzFhB,IAAMG,IAAA,OAAOJ,aAAA,CAAAK,SAAA,EAAU;EACrB,MAAM;IACJC,SAAA,EAAW;EACb;EACA,QAAQ;IACNA,SAAA,EAAW;EACb;AACF,CAAC;AAiDM,IAAMV,OAAA,OAAUI,aAAA,CAAAO,UAAA,EAAgC,CAACC,KAAA,EAAOC,GAAA,KAAQ;EACrE,MAAMC,MAAA,OAASV,aAAA,CAAAW,cAAA,EAAe,WAAWH,KAAK;EAE9C,MAAM;IACJI,KAAA,GAAQ;IACRC,SAAA,GAAY;IACZC,KAAA,GAAQ;IACRC,UAAA,GAAa;IACbC,SAAA;IACA,GAAGC;EACL,QAAIjB,aAAA,CAAAkB,gBAAA,EAAiBV,KAAK;EAE1B,MAAMW,UAAA,OAAajB,mBAAA,CAAAkB,EAAA,EAAG,kBAAkBJ,SAAS;EAEjD,MAAMK,aAAA,GAAgB;IACpBC,OAAA,EAAS;IACTC,WAAA,EAAa;IACbC,WAAA,EAAa;IACbC,YAAA,EAAc;IACdC,WAAA,EAAab,SAAA;IACbc,iBAAA,EAAmBZ,UAAA;IACnBa,eAAA,EAAiBb,UAAA;IACjBc,SAAA,EAAW,GAAGzB,IAAA,IAAQU,KAAA;IACtB,GAAGJ;EACL;EAEA,OACE,mBAAAP,kBAAA,CAAA2B,GAAA,EAAC9B,aAAA,CAAA+B,MAAA,CAAOC,GAAA,EAAP;IACCvB,GAAA;IACAwB,KAAA,EAAOZ,aAAA;IACPL,SAAA,EAAWG,UAAA;IACV,GAAGF,IAAA;IAEHiB,QAAA,EAAAtB,KAAA,IAAS,mBAAAT,kBAAA,CAAA2B,GAAA,EAAC9B,aAAA,CAAA+B,MAAA,CAAOI,IAAA,EAAP;MAAYC,MAAA,EAAM;MAAEF,QAAA,EAAAtB;IAAA,CAAM;EAAA,CACvC;AAEJ,CAAC;AAEDhB,OAAA,CAAQyC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"script"}