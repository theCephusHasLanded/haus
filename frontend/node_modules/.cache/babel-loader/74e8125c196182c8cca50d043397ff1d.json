{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Switch: () => Switch\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/switch.tsx\nvar import_checkbox = require(\"@chakra-ui/checkbox\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_system = require(\"@chakra-ui/system\");\nvar import_react = require(\"react\");\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar Switch = (0, import_system.forwardRef)(function Switch2(props, ref) {\n  const styles = (0, import_system.useMultiStyleConfig)(\"Switch\", props);\n  const {\n    spacing = \"0.5rem\",\n    children,\n    ...ownProps\n  } = (0, import_system.omitThemingProps)(props);\n  const {\n    getIndicatorProps,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps\n  } = (0, import_checkbox.useCheckbox)(ownProps);\n  const containerStyles = (0, import_react.useMemo)(() => ({\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    lineHeight: 0,\n    ...styles.container\n  }), [styles.container]);\n  const trackStyles = (0, import_react.useMemo)(() => ({\n    display: \"inline-flex\",\n    flexShrink: 0,\n    justifyContent: \"flex-start\",\n    boxSizing: \"content-box\",\n    cursor: \"pointer\",\n    ...styles.track\n  }), [styles.track]);\n  const labelStyles = (0, import_react.useMemo)(() => ({\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label\n  }), [spacing, styles.label]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_system.chakra.label, {\n    ...getRootProps(),\n    className: (0, import_shared_utils.cx)(\"chakra-switch\", props.className),\n    __css: containerStyles,\n    children: [/* @__PURE__ */(0, import_jsx_runtime.jsx)(\"input\", {\n      className: \"chakra-switch__input\",\n      ...getInputProps({}, ref)\n    }), /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n      ...getCheckboxProps(),\n      className: \"chakra-switch__track\",\n      __css: trackStyles,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n        __css: styles.thumb,\n        className: \"chakra-switch__thumb\",\n        ...getIndicatorProps()\n      })\n    }), children && /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.span, {\n      className: \"chakra-switch__label\",\n      ...getLabelProps(),\n      __css: labelStyles,\n      children\n    })]\n  });\n});\nSwitch.displayName = \"Switch\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Switch\n});","map":{"version":3,"names":["src_exports","__export","Switch","module","exports","__toCommonJS","import_checkbox","require","import_shared_utils","import_system","import_react","import_jsx_runtime","forwardRef","Switch2","props","ref","styles","useMultiStyleConfig","spacing","children","ownProps","omitThemingProps","getIndicatorProps","getInputProps","getCheckboxProps","getRootProps","getLabelProps","useCheckbox","containerStyles","useMemo","display","position","verticalAlign","lineHeight","container","trackStyles","flexShrink","justifyContent","boxSizing","cursor","track","labelStyles","userSelect","marginStart","label","jsxs","chakra","className","cx","__css","jsx","span","thumb","displayName"],"sources":["../src/index.ts","../src/switch.tsx"],"sourcesContent":["export { Switch } from \"./switch\"\nexport type { SwitchProps } from \"./switch\"\n","import { useCheckbox, UseCheckboxProps } from \"@chakra-ui/checkbox\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\n\nexport interface SwitchProps\n  extends Omit<UseCheckboxProps, \"isIndeterminate\">,\n    Omit<HTMLChakraProps<\"label\">, keyof UseCheckboxProps>,\n    ThemingProps<\"Switch\"> {\n  /**\n   * The spacing between the switch and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n}\n\n/**\n * The `Switch` component is used as an alternative for the checkbox component for switching between \"enabled\" and \"disabled\" states.\n *\n * @see Docs https://chakra-ui.com/docs/components/switch\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/switch/\n */\nexport const Switch = forwardRef<SwitchProps, \"input\">(function Switch(\n  props,\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Switch\", props)\n\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props)\n\n  const {\n    getIndicatorProps,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps,\n  } = useCheckbox(ownProps)\n\n  const containerStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: 0,\n      ...styles.container,\n    }),\n    [styles.container],\n  )\n\n  const trackStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\",\n      ...styles.track,\n    }),\n    [styles.track],\n  )\n\n  const labelStyles: SystemStyleObject = useMemo(\n    () => ({\n      userSelect: \"none\",\n      marginStart: spacing,\n      ...styles.label,\n    }),\n    [spacing, styles.label],\n  )\n\n  return (\n    <chakra.label\n      {...getRootProps()}\n      className={cx(\"chakra-switch\", props.className)}\n      __css={containerStyles}\n    >\n      <input className=\"chakra-switch__input\" {...getInputProps({}, ref)} />\n      <chakra.span\n        {...getCheckboxProps()}\n        className=\"chakra-switch__track\"\n        __css={trackStyles}\n      >\n        <chakra.span\n          __css={styles.thumb}\n          className=\"chakra-switch__thumb\"\n          {...getIndicatorProps()}\n        />\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-switch__label\"\n          {...getLabelProps()}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nSwitch.displayName = \"Switch\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,MAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,WAAA;;;ACAA,IAAAM,eAAA,GAA8CC,OAAA;AAC9C,IAAAC,mBAAA,GAAmBD,OAAA;AACnB,IAAAE,aAAA,GASOF,OAAA;AACP,IAAAG,YAAA,GAAwBH,OAAA;AAqEpB,IAAAI,kBAAA,GAAAJ,OAAA;AAjDG,IAAML,MAAA,OAASO,aAAA,CAAAG,UAAA,EAAiC,SAASC,QAC9DC,KAAA,EACAC,GAAA,EACA;EACA,MAAMC,MAAA,OAASP,aAAA,CAAAQ,mBAAA,EAAoB,UAAUH,KAAK;EAElD,MAAM;IAAEI,OAAA,GAAU;IAAUC,QAAA;IAAU,GAAGC;EAAS,QAAIX,aAAA,CAAAY,gBAAA,EAAiBP,KAAK;EAE5E,MAAM;IACJQ,iBAAA;IACAC,aAAA;IACAC,gBAAA;IACAC,YAAA;IACAC;EACF,QAAIpB,eAAA,CAAAqB,WAAA,EAAYP,QAAQ;EAExB,MAAMQ,eAAA,OAAqClB,YAAA,CAAAmB,OAAA,EACzC,OAAO;IACLC,OAAA,EAAS;IACTC,QAAA,EAAU;IACVC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZ,GAAGjB,MAAA,CAAOkB;EACZ,IACA,CAAClB,MAAA,CAAOkB,SAAS,CACnB;EAEA,MAAMC,WAAA,OAAiCzB,YAAA,CAAAmB,OAAA,EACrC,OAAO;IACLC,OAAA,EAAS;IACTM,UAAA,EAAY;IACZC,cAAA,EAAgB;IAChBC,SAAA,EAAW;IACXC,MAAA,EAAQ;IACR,GAAGvB,MAAA,CAAOwB;EACZ,IACA,CAACxB,MAAA,CAAOwB,KAAK,CACf;EAEA,MAAMC,WAAA,OAAiC/B,YAAA,CAAAmB,OAAA,EACrC,OAAO;IACLa,UAAA,EAAY;IACZC,WAAA,EAAazB,OAAA;IACb,GAAGF,MAAA,CAAO4B;EACZ,IACA,CAAC1B,OAAA,EAASF,MAAA,CAAO4B,KAAK,CACxB;EAEA,OACE,mBAAAjC,kBAAA,CAAAkC,IAAA,EAACpC,aAAA,CAAAqC,MAAA,CAAOF,KAAA,EAAP;IACE,GAAGnB,YAAA,CAAa;IACjBsB,SAAA,MAAWvC,mBAAA,CAAAwC,EAAA,EAAG,iBAAiBlC,KAAA,CAAMiC,SAAS;IAC9CE,KAAA,EAAOrB,eAAA;IAEPT,QAAA,sBAAAR,kBAAA,CAAAuC,GAAA,EAAC;MAAMH,SAAA,EAAU;MAAwB,GAAGxB,aAAA,CAAc,CAAC,GAAGR,GAAG;IAAA,CAAG,GACpE,mBAAAJ,kBAAA,CAAAuC,GAAA,EAACzC,aAAA,CAAAqC,MAAA,CAAOK,IAAA,EAAP;MACE,GAAG3B,gBAAA,CAAiB;MACrBuB,SAAA,EAAU;MACVE,KAAA,EAAOd,WAAA;MAEPhB,QAAA,qBAAAR,kBAAA,CAAAuC,GAAA,EAACzC,aAAA,CAAAqC,MAAA,CAAOK,IAAA,EAAP;QACCF,KAAA,EAAOjC,MAAA,CAAOoC,KAAA;QACdL,SAAA,EAAU;QACT,GAAGzB,iBAAA,CAAkB;MAAA,CACxB;IAAA,CACF,GACCH,QAAA,IACC,mBAAAR,kBAAA,CAAAuC,GAAA,EAACzC,aAAA,CAAAqC,MAAA,CAAOK,IAAA,EAAP;MACCJ,SAAA,EAAU;MACT,GAAGrB,aAAA,CAAc;MAClBuB,KAAA,EAAOR,WAAA;MAENtB;IAAA,CACH;EAAA,CAEJ;AAEJ,CAAC;AAEDjB,MAAA,CAAOmD,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"script"}