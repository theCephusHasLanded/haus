{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  useCallbackRef: () => useCallbackRef\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_react = require(\"react\");\nfunction useCallbackRef(callback, deps = []) {\n  const callbackRef = (0, import_react.useRef)(callback);\n  (0, import_react.useEffect)(() => {\n    callbackRef.current = callback;\n  });\n  return (0, import_react.useCallback)((...args) => {\n    var _a;\n    return (_a = callbackRef.current) == null ? void 0 : _a.call(callbackRef, ...args);\n  }, deps);\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  useCallbackRef\n});","map":{"version":3,"names":["src_exports","__export","useCallbackRef","module","exports","__toCommonJS","import_react","require","callback","deps","callbackRef","useRef","useEffect","current","useCallback","args","_a","call"],"sources":["../src/index.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from \"react\"\n\nexport function useCallbackRef<T extends (...args: any[]) => any>(\n  callback: T | undefined,\n  deps: React.DependencyList = [],\n) {\n  const callbackRef = useRef(callback)\n\n  useEffect(() => {\n    callbackRef.current = callback\n  })\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return useCallback(((...args) => callbackRef.current?.(...args)) as T, deps)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,WAAA;AAAAC,QAAA,CAAAD,WAAA;EAAAE,cAAA,EAAAA,CAAA,KAAAA;AAAA;AAAAC,MAAA,CAAAC,OAAA,GAAAC,YAAA,CAAAL,WAAA;AAAA,IAAAM,YAAA,GAA+CC,OAAA;AAExC,SAASL,eACdM,QAAA,EACAC,IAAA,GAA6B,EAAC,EAC9B;EACA,MAAMC,WAAA,OAAcJ,YAAA,CAAAK,MAAA,EAAOH,QAAQ;EAEnC,IAAAF,YAAA,CAAAM,SAAA,EAAU,MAAM;IACdF,WAAA,CAAYG,OAAA,GAAUL,QAAA;EACxB,CAAC;EAGD,WAAOF,YAAA,CAAAQ,WAAA,EAAa,IAAIC,IAAA,KAAM;IAbhC,IAAAC,EAAA;IAamC,QAAAA,EAAA,GAAAN,WAAA,CAAYG,OAAA,KAAZ,gBAAAG,EAAA,CAAAC,IAAA,CAAAP,WAAA,EAAsB,GAAGK,IAAA;EAAA,GAAaN,IAAI;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"script"}