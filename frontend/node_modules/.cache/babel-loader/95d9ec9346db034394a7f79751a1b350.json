{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RangeSlider: () => RangeSlider,\n  RangeSliderFilledTrack: () => RangeSliderFilledTrack,\n  RangeSliderMark: () => RangeSliderMark,\n  RangeSliderProvider: () => RangeSliderProvider,\n  RangeSliderThumb: () => RangeSliderThumb,\n  RangeSliderTrack: () => RangeSliderTrack,\n  Slider: () => Slider,\n  SliderFilledTrack: () => SliderFilledTrack,\n  SliderMark: () => SliderMark,\n  SliderProvider: () => SliderProvider,\n  SliderThumb: () => SliderThumb,\n  SliderTrack: () => SliderTrack,\n  useRangeSlider: () => useRangeSlider,\n  useRangeSliderContext: () => useRangeSliderContext,\n  useRangeSliderStyles: () => useRangeSliderStyles,\n  useSlider: () => useSlider,\n  useSliderContext: () => useSliderContext,\n  useSliderStyles: () => useSliderStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/range-slider.tsx\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\n\n// ../../legacy/utils/src/dom.ts\nvar dataAttr = condition => condition ? \"\" : void 0;\nvar ariaAttr = condition => condition ? true : void 0;\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\n\n// ../../legacy/utils/src/function.ts\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some(fn => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/range-slider.tsx\nvar import_react2 = require(\"react\");\n\n// src/use-range-slider.ts\nvar import_react_use_pan_event = require(\"@chakra-ui/react-use-pan-event\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_use_callback_ref = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_number_utils = require(\"@chakra-ui/number-utils\");\nvar import_react = require(\"react\");\n\n// src/slider-utils.ts\nfunction getIds(id) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: i => `slider-thumb-${id}-${i}`,\n    getInput: i => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: i => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`\n  };\n}\nfunction orient(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nvar zeroSize = {\n  width: 0,\n  height: 0\n};\nvar normalize = a => a || zeroSize;\nfunction getStyles(options) {\n  const {\n    orientation,\n    thumbPercents,\n    thumbRects,\n    isReversed\n  } = options;\n  const getThumbStyle = i => {\n    var _a;\n    const rect = (_a = thumbRects[i]) != null ? _a : zeroSize;\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`\n        }\n      })\n    };\n  };\n  const size = orientation === \"vertical\" ? thumbRects.reduce((a, b) => normalize(a).height > normalize(b).height ? a : b, zeroSize) : thumbRects.reduce((a, b) => normalize(a).width > normalize(b).width ? a : b, zeroSize);\n  const rootStyle = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size ? {\n        paddingLeft: size.width / 2,\n        paddingRight: size.width / 2\n      } : {},\n      horizontal: size ? {\n        paddingTop: size.height / 2,\n        paddingBottom: size.height / 2\n      } : {}\n    })\n  };\n  const trackStyle = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\"\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\"\n      }\n    })\n  };\n  const isSingleThumb = thumbPercents.length === 1;\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]];\n  const range = isSingleThumb ? fallback : thumbPercents;\n  let start = range[0];\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start;\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0]);\n  const innerTrackStyle = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed ? {\n        height: `${percent}%`,\n        top: `${start}%`\n      } : {\n        height: `${percent}%`,\n        bottom: `${start}%`\n      },\n      horizontal: isReversed ? {\n        width: `${percent}%`,\n        right: `${start}%`\n      } : {\n        width: `${percent}%`,\n        left: `${start}%`\n      }\n    })\n  };\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    getThumbStyle\n  };\n}\nfunction getIsReversed(options) {\n  const {\n    isReversed,\n    direction,\n    orientation\n  } = options;\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed;\n  }\n  return !isReversed;\n}\n\n// src/use-range-slider.ts\nvar import_react_use_size = require(\"@chakra-ui/react-use-size\");\nfunction useRangeSlider(props) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props;\n  const onChangeStart = (0, import_react_use_callback_ref.useCallbackRef)(onChangeStartProp);\n  const onChangeEnd = (0, import_react_use_callback_ref.useCallbackRef)(onChangeEndProp);\n  const getAriaValueText = (0, import_react_use_callback_ref.useCallbackRef)(getAriaValueTextProp);\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  const [valueState, setValue] = (0, import_react_use_controllable_state.useControllableState)({\n    value: valueProp,\n    defaultValue: defaultValue != null ? defaultValue : [25, 75],\n    onChange\n  });\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(`[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``);\n  }\n  const [isDragging, setDragging] = (0, import_react.useState)(false);\n  const [isFocused, setFocused] = (0, import_react.useState)(false);\n  const [activeIndex, setActiveIndex] = (0, import_react.useState)(-1);\n  const isInteractive = !(isDisabled || isReadOnly);\n  const initialValue = (0, import_react.useRef)(valueState);\n  const value = valueState.map(val => (0, import_number_utils.clampValue)(val, min, max));\n  const spacing = minStepsBetweenThumbs * step;\n  const valueBounds = getValueBounds(value, min, max, spacing);\n  const stateRef = (0, import_react.useRef)({\n    eventSource: null,\n    value: [],\n    valueBounds: []\n  });\n  stateRef.current.value = value;\n  stateRef.current.valueBounds = valueBounds;\n  const reversedValue = value.map(val => max - val + min);\n  const thumbValues = isReversed ? reversedValue : value;\n  const thumbPercents = thumbValues.map(val => (0, import_number_utils.valueToPercent)(val, min, max));\n  const isVertical = orientation === \"vertical\";\n  const trackRef = (0, import_react.useRef)(null);\n  const rootRef = (0, import_react.useRef)(null);\n  const thumbRects = (0, import_react_use_size.useSizes)({\n    getNodes() {\n      const rootNode = rootRef.current;\n      const thumbNodes = rootNode == null ? void 0 : rootNode.querySelectorAll(\"[role=slider]\");\n      return thumbNodes ? Array.from(thumbNodes) : [];\n    }\n  });\n  const reactId = (0, import_react.useId)();\n  const uuid = idProp != null ? idProp : reactId;\n  const ids = getIds(uuid);\n  const getValueFromPointer = (0, import_react.useCallback)(event => {\n    var _a, _b;\n    if (!trackRef.current) return;\n    stateRef.current.eventSource = \"pointer\";\n    const rect = trackRef.current.getBoundingClientRect();\n    const {\n      clientX,\n      clientY\n    } = (_b = (_a = event.touches) == null ? void 0 : _a[0]) != null ? _b : event;\n    const diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n    const length = isVertical ? rect.height : rect.width;\n    let percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    return (0, import_number_utils.percentToValue)(percent, min, max);\n  }, [isVertical, isReversed, max, min]);\n  const tenSteps = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const actions = (0, import_react.useMemo)(() => ({\n    setValueAtIndex(index, val) {\n      if (!isInteractive) return;\n      const bounds = stateRef.current.valueBounds[index];\n      val = parseFloat((0, import_number_utils.roundValueToStep)(val, bounds.min, oneStep));\n      val = (0, import_number_utils.clampValue)(val, bounds.min, bounds.max);\n      const next = [...stateRef.current.value];\n      next[index] = val;\n      setValue(next);\n    },\n    setActiveIndex,\n    stepUp(index, step2 = oneStep) {\n      const valueAtIndex = stateRef.current.value[index];\n      const next = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;\n      actions.setValueAtIndex(index, next);\n    },\n    stepDown(index, step2 = oneStep) {\n      const valueAtIndex = stateRef.current.value[index];\n      const next = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;\n      actions.setValueAtIndex(index, next);\n    },\n    reset() {\n      setValue(initialValue.current);\n    }\n  }), [oneStep, isReversed, setValue, isInteractive]);\n  const onKeyDown = (0, import_react.useCallback)(event => {\n    const eventKey = event.key;\n    const keyMap = {\n      ArrowRight: () => actions.stepUp(activeIndex),\n      ArrowUp: () => actions.stepUp(activeIndex),\n      ArrowLeft: () => actions.stepDown(activeIndex),\n      ArrowDown: () => actions.stepDown(activeIndex),\n      PageUp: () => actions.stepUp(activeIndex, tenSteps),\n      PageDown: () => actions.stepDown(activeIndex, tenSteps),\n      Home: () => {\n        const {\n          min: value2\n        } = valueBounds[activeIndex];\n        actions.setValueAtIndex(activeIndex, value2);\n      },\n      End: () => {\n        const {\n          max: value2\n        } = valueBounds[activeIndex];\n        actions.setValueAtIndex(activeIndex, value2);\n      }\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      stateRef.current.eventSource = \"keyboard\";\n    }\n  }, [actions, activeIndex, tenSteps, valueBounds]);\n  const {\n    getThumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = (0, import_react.useMemo)(() => getStyles({\n    isReversed,\n    orientation,\n    thumbRects,\n    thumbPercents\n  }), [isReversed, orientation, thumbPercents, thumbRects]);\n  const focusThumb = (0, import_react.useCallback)(index => {\n    var _a;\n    const idx = index != null ? index : activeIndex;\n    if (idx !== -1 && focusThumbOnChange) {\n      const id = ids.getThumb(idx);\n      const thumb = (_a = rootRef.current) == null ? void 0 : _a.ownerDocument.getElementById(id);\n      if (thumb) {\n        setTimeout(() => thumb.focus());\n      }\n    }\n  }, [focusThumbOnChange, activeIndex, ids]);\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    }\n  }, [value, onChangeEnd]);\n  const onPanSessionStart = event => {\n    const pointValue = getValueFromPointer(event) || 0;\n    const distances = stateRef.current.value.map(val => Math.abs(val - pointValue));\n    const closest = Math.min(...distances);\n    let index = distances.indexOf(closest);\n    const thumbsAtPosition = distances.filter(distance => distance === closest);\n    const isThumbStacked = thumbsAtPosition.length > 1;\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  const onPan = event => {\n    if (activeIndex == -1) return;\n    const pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  (0, import_react_use_pan_event.usePanEvent)(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setDragging(true);\n      onPanSessionStart(event);\n      onChangeStart == null ? void 0 : onChangeStart(stateRef.current.value);\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(stateRef.current.value);\n    },\n    onPan(event) {\n      if (!isInteractive) return;\n      onPan(event);\n    }\n  });\n  const getRootProps = (0, import_react.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ...htmlProps,\n      id: ids.root,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props2.style,\n        ...rootStyle\n      }\n    };\n  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);\n  const getTrackProps = (0, import_react.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref: (0, import_react_use_merge_refs.mergeRefs)(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props2.style,\n        ...trackStyle\n      }\n    };\n  }, [isDisabled, trackStyle, ids]);\n  const getInnerTrackProps = (0, import_react.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      id: ids.innerTrack,\n      style: {\n        ...props2.style,\n        ...innerTrackStyle\n      }\n    };\n  }, [innerTrackStyle, ids]);\n  const getThumbProps = (0, import_react.useCallback)((props2, ref = null) => {\n    var _a;\n    const {\n      index,\n      ...rest\n    } = props2;\n    const valueAtIndex = value[index];\n    if (valueAtIndex == null) {\n      throw new TypeError(`[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`);\n    }\n    const bounds = valueBounds[index];\n    return {\n      ...rest,\n      ref,\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: ids.getThumb(index),\n      \"data-active\": dataAttr(isDragging && activeIndex === index),\n      \"aria-valuetext\": (_a = getAriaValueText == null ? void 0 : getAriaValueText(valueAtIndex)) != null ? _a : ariaValueText == null ? void 0 : ariaValueText[index],\n      \"aria-valuemin\": bounds.min,\n      \"aria-valuemax\": bounds.max,\n      \"aria-valuenow\": valueAtIndex,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel == null ? void 0 : ariaLabel[index],\n      \"aria-labelledby\": (ariaLabel == null ? void 0 : ariaLabel[index]) ? void 0 : ariaLabelledBy == null ? void 0 : ariaLabelledBy[index],\n      style: {\n        ...props2.style,\n        ...getThumbStyle(index)\n      },\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, () => {\n        setFocused(true);\n        setActiveIndex(index);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, () => {\n        setFocused(false);\n        setActiveIndex(-1);\n      })\n    };\n  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);\n  const getOutputProps = (0, import_react.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      id: ids.output,\n      htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n      \"aria-live\": \"off\"\n    };\n  }, [ids, value]);\n  const getMarkerProps = (0, import_react.useCallback)((props2, ref = null) => {\n    const {\n      value: v,\n      ...rest\n    } = props2;\n    const isInRange = !(v < min || v > max);\n    const isHighlighted = v >= value[0] && v <= value[value.length - 1];\n    let percent = (0, import_number_utils.valueToPercent)(v, min, max);\n    percent = isReversed ? 100 - percent : percent;\n    const markerStyle = {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `${percent}%`\n        },\n        horizontal: {\n          left: `${percent}%`\n        }\n      })\n    };\n    return {\n      ...rest,\n      ref,\n      id: ids.getMarker(props2.value),\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: {\n        ...props2.style,\n        ...markerStyle\n      }\n    };\n  }, [isDisabled, isReversed, max, min, orientation, value, ids]);\n  const getInputProps = (0, import_react.useCallback)((props2, ref = null) => {\n    const {\n      index,\n      ...rest\n    } = props2;\n    return {\n      ...rest,\n      ref,\n      id: ids.getInput(index),\n      type: \"hidden\",\n      value: value[index],\n      name: Array.isArray(name) ? name[index] : `${name}-${index}`\n    };\n  }, [name, value, ids]);\n  const state = {\n    value,\n    isFocused,\n    isDragging,\n    getThumbPercent: index => thumbPercents[index],\n    getThumbMinValue: index => valueBounds[index].min,\n    getThumbMaxValue: index => valueBounds[index].max\n  };\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps\n  };\n}\nfunction getValueBounds(arr, min, max, spacing) {\n  return arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing;\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n    return {\n      min: _min,\n      max: _max\n    };\n  });\n}\n\n// src/range-slider.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar [RangeSliderProvider, useRangeSliderContext] = (0, import_react_context.createContext)({\n  name: \"SliderContext\",\n  errorMessage: \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\"\n});\nvar [RangeSliderStylesProvider, useRangeSliderStyles] = (0, import_react_context.createContext)({\n  name: `RangeSliderStylesContext`,\n  errorMessage: `useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `\n});\nvar RangeSlider = (0, import_system.forwardRef)(function RangeSlider2(props, ref) {\n  const sliderProps = {\n    orientation: \"horizontal\",\n    ...props\n  };\n  const styles = (0, import_system.useMultiStyleConfig)(\"Slider\", sliderProps);\n  const ownProps = (0, import_system.omitThemingProps)(sliderProps);\n  const {\n    direction\n  } = (0, import_system.useTheme)();\n  ownProps.direction = direction;\n  const {\n    getRootProps,\n    ...context\n  } = useRangeSlider(ownProps);\n  const ctx = (0, import_react2.useMemo)(() => ({\n    ...context,\n    name: sliderProps.name\n  }), [context, sliderProps.name]);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(RangeSliderProvider, {\n    value: ctx,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(RangeSliderStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n        ...getRootProps({}, ref),\n        className: \"chakra-slider\",\n        __css: styles.container,\n        children: sliderProps.children\n      })\n    })\n  });\n});\nRangeSlider.displayName = \"RangeSlider\";\nvar RangeSliderThumb = (0, import_system.forwardRef)(function RangeSliderThumb2(props, ref) {\n  const {\n    getThumbProps,\n    getInputProps,\n    name\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsxs)(import_system.chakra.div, {\n    ...thumbProps,\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb,\n    children: [thumbProps.children, name && /* @__PURE__ */(0, import_jsx_runtime.jsx)(\"input\", {\n      ...getInputProps({\n        index: props.index\n      })\n    })]\n  });\n});\nRangeSliderThumb.displayName = \"RangeSliderThumb\";\nvar RangeSliderTrack = (0, import_system.forwardRef)(function RangeSliderTrack2(props, ref) {\n  const {\n    getTrackProps\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    ...trackProps,\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track,\n    \"data-testid\": \"chakra-range-slider-track\"\n  });\n});\nRangeSliderTrack.displayName = \"RangeSliderTrack\";\nvar RangeSliderFilledTrack = (0, import_system.forwardRef)(function RangeSliderFilledTrack2(props, ref) {\n  const {\n    getInnerTrackProps\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    ...trackProps,\n    className: \"chakra-slider__filled-track\",\n    __css: styles.filledTrack\n  });\n});\nRangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\";\nvar RangeSliderMark = (0, import_system.forwardRef)(function RangeSliderMark2(props, ref) {\n  const {\n    getMarkerProps\n  } = useRangeSliderContext();\n  const styles = useRangeSliderStyles();\n  const markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(import_system.chakra.div, {\n    ...markProps,\n    className: cx(\"chakra-slider__marker\", props.className),\n    __css: styles.mark\n  });\n});\nRangeSliderMark.displayName = \"RangeSliderMark\";\n\n// src/slider.tsx\nvar import_react_context2 = require(\"@chakra-ui/react-context\");\nvar import_system2 = require(\"@chakra-ui/system\");\n\n// src/use-slider.ts\nvar import_react_use_pan_event2 = require(\"@chakra-ui/react-use-pan-event\");\nvar import_react_use_callback_ref2 = require(\"@chakra-ui/react-use-callback-ref\");\nvar import_react_use_update_effect2 = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_controllable_state2 = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_use_size2 = require(\"@chakra-ui/react-use-size\");\nvar import_react_use_merge_refs2 = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_react_use_latest_ref = require(\"@chakra-ui/react-use-latest-ref\");\nvar import_number_utils2 = require(\"@chakra-ui/number-utils\");\nvar import_react3 = require(\"react\");\nfunction useSlider(props) {\n  var _a;\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props;\n  const onChangeStart = (0, import_react_use_callback_ref2.useCallbackRef)(onChangeStartProp);\n  const onChangeEnd = (0, import_react_use_callback_ref2.useCallbackRef)(onChangeEndProp);\n  const getAriaValueText = (0, import_react_use_callback_ref2.useCallbackRef)(getAriaValueTextProp);\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  const [computedValue, setValue] = (0, import_react_use_controllable_state2.useControllableState)({\n    value: valueProp,\n    defaultValue: defaultValue != null ? defaultValue : getDefaultValue(min, max),\n    onChange\n  });\n  const [isDragging, setDragging] = (0, import_react3.useState)(false);\n  const [isFocused, setFocused] = (0, import_react3.useState)(false);\n  const isInteractive = !(isDisabled || isReadOnly);\n  const tenSteps = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const value = (0, import_number_utils2.clampValue)(computedValue, min, max);\n  const reversedValue = max - value + min;\n  const trackValue = isReversed ? reversedValue : value;\n  const thumbPercent = (0, import_number_utils2.valueToPercent)(trackValue, min, max);\n  const isVertical = orientation === \"vertical\";\n  const stateRef = (0, import_react_use_latest_ref.useLatestRef)({\n    min,\n    max,\n    step,\n    isDisabled,\n    value,\n    isInteractive,\n    isReversed,\n    isVertical,\n    eventSource: null,\n    focusThumbOnChange,\n    orientation\n  });\n  const trackRef = (0, import_react3.useRef)(null);\n  const thumbRef = (0, import_react3.useRef)(null);\n  const rootRef = (0, import_react3.useRef)(null);\n  const reactId = (0, import_react3.useId)();\n  const uuid = idProp != null ? idProp : reactId;\n  const [thumbId, trackId] = [`slider-thumb-${uuid}`, `slider-track-${uuid}`];\n  const getValueFromPointer = (0, import_react3.useCallback)(event => {\n    var _a2, _b;\n    if (!trackRef.current) return;\n    const state2 = stateRef.current;\n    state2.eventSource = \"pointer\";\n    const trackRect = trackRef.current.getBoundingClientRect();\n    const {\n      clientX,\n      clientY\n    } = (_b = (_a2 = event.touches) == null ? void 0 : _a2[0]) != null ? _b : event;\n    const diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    const length = isVertical ? trackRect.height : trackRect.width;\n    let percent = diff / length;\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n    let nextValue = (0, import_number_utils2.percentToValue)(percent, state2.min, state2.max);\n    if (state2.step) {\n      nextValue = parseFloat((0, import_number_utils2.roundValueToStep)(nextValue, state2.min, state2.step));\n    }\n    nextValue = (0, import_number_utils2.clampValue)(nextValue, state2.min, state2.max);\n    return nextValue;\n  }, [isVertical, isReversed, stateRef]);\n  const constrain = (0, import_react3.useCallback)(value2 => {\n    const state2 = stateRef.current;\n    if (!state2.isInteractive) return;\n    value2 = parseFloat((0, import_number_utils2.roundValueToStep)(value2, state2.min, oneStep));\n    value2 = (0, import_number_utils2.clampValue)(value2, state2.min, state2.max);\n    setValue(value2);\n  }, [oneStep, setValue, stateRef]);\n  const actions = (0, import_react3.useMemo)(() => ({\n    stepUp(step2 = oneStep) {\n      const next = isReversed ? value - step2 : value + step2;\n      constrain(next);\n    },\n    stepDown(step2 = oneStep) {\n      const next = isReversed ? value + step2 : value - step2;\n      constrain(next);\n    },\n    reset() {\n      constrain(defaultValue || 0);\n    },\n    stepTo(value2) {\n      constrain(value2);\n    }\n  }), [constrain, isReversed, value, oneStep, defaultValue]);\n  const onKeyDown = (0, import_react3.useCallback)(event => {\n    const state2 = stateRef.current;\n    const keyMap = {\n      ArrowRight: () => actions.stepUp(),\n      ArrowUp: () => actions.stepUp(),\n      ArrowLeft: () => actions.stepDown(),\n      ArrowDown: () => actions.stepDown(),\n      PageUp: () => actions.stepUp(tenSteps),\n      PageDown: () => actions.stepDown(tenSteps),\n      Home: () => constrain(state2.min),\n      End: () => constrain(state2.max)\n    };\n    const action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      state2.eventSource = \"keyboard\";\n    }\n  }, [actions, constrain, tenSteps, stateRef]);\n  const valueText = (_a = getAriaValueText == null ? void 0 : getAriaValueText(value)) != null ? _a : ariaValueText;\n  const thumbSize = (0, import_react_use_size2.useSize)(thumbRef);\n  const {\n    getThumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = (0, import_react3.useMemo)(() => {\n    const state2 = stateRef.current;\n    const thumbRect = thumbSize != null ? thumbSize : {\n      width: 0,\n      height: 0\n    };\n    return getStyles({\n      isReversed,\n      orientation: state2.orientation,\n      thumbRects: [thumbRect],\n      thumbPercents: [thumbPercent]\n    });\n  }, [isReversed, thumbSize, thumbPercent, stateRef]);\n  const focusThumb = (0, import_react3.useCallback)(() => {\n    const state2 = stateRef.current;\n    if (state2.focusThumbOnChange) {\n      setTimeout(() => {\n        var _a2;\n        return (_a2 = thumbRef.current) == null ? void 0 : _a2.focus();\n      });\n    }\n  }, [stateRef]);\n  (0, import_react_use_update_effect2.useUpdateEffect)(() => {\n    const state2 = stateRef.current;\n    focusThumb();\n    if (state2.eventSource === \"keyboard\") {\n      onChangeEnd == null ? void 0 : onChangeEnd(state2.value);\n    }\n  }, [value, onChangeEnd]);\n  function setValueFromPointer(event) {\n    const nextValue = getValueFromPointer(event);\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue);\n    }\n  }\n  (0, import_react_use_pan_event2.usePanEvent)(rootRef, {\n    onPanSessionStart(event) {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(true);\n      focusThumb();\n      setValueFromPointer(event);\n      onChangeStart == null ? void 0 : onChangeStart(state2.value);\n    },\n    onPanSessionEnd() {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(false);\n      onChangeEnd == null ? void 0 : onChangeEnd(state2.value);\n    },\n    onPan(event) {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setValueFromPointer(event);\n    }\n  });\n  const getRootProps = (0, import_react3.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ...htmlProps,\n      ref: (0, import_react_use_merge_refs2.mergeRefs)(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props2.style,\n        ...rootStyle\n      }\n    };\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  const getTrackProps = (0, import_react3.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref: (0, import_react_use_merge_refs2.mergeRefs)(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props2.style,\n        ...trackStyle\n      }\n    };\n  }, [isDisabled, trackId, trackStyle]);\n  const getInnerTrackProps = (0, import_react3.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      style: {\n        ...props2.style,\n        ...innerTrackStyle\n      }\n    };\n  }, [innerTrackStyle]);\n  const getThumbProps = (0, import_react3.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref: (0, import_react_use_merge_refs2.mergeRefs)(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? void 0 : ariaLabelledBy,\n      style: {\n        ...props2.style,\n        ...getThumbStyle(0)\n      },\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, () => setFocused(true)),\n      onBlur: callAllHandlers(props2.onBlur, () => setFocused(false))\n    };\n  }, [isInteractive, thumbId, isDragging, valueText, min, max, value, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown]);\n  const getMarkerProps = (0, import_react3.useCallback)((props2, ref = null) => {\n    const isInRange = !(props2.value < min || props2.value > max);\n    const isHighlighted = value >= props2.value;\n    const markerPercent = (0, import_number_utils2.valueToPercent)(props2.value, min, max);\n    const markerStyle = {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...orient2({\n        orientation,\n        vertical: {\n          bottom: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`\n        },\n        horizontal: {\n          left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`\n        }\n      })\n    };\n    return {\n      ...props2,\n      ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: {\n        ...props2.style,\n        ...markerStyle\n      }\n    };\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  const getInputProps = (0, import_react3.useCallback)((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      type: \"hidden\",\n      value,\n      name\n    };\n  }, [name, value]);\n  const state = {\n    value,\n    isFocused,\n    isDragging\n  };\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps\n  };\n}\nfunction orient2(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\n\n// src/slider.tsx\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar [SliderProvider, useSliderContext] = (0, import_react_context2.createContext)({\n  name: \"SliderContext\",\n  hookName: \"useSliderContext\",\n  providerName: \"<Slider />\"\n});\nvar [SliderStylesProvider, useSliderStyles] = (0, import_react_context2.createContext)({\n  name: `SliderStylesContext`,\n  hookName: `useSliderStyles`,\n  providerName: \"<Slider />\"\n});\nvar Slider = (0, import_system2.forwardRef)((props, ref) => {\n  var _a;\n  const sliderProps = {\n    ...props,\n    orientation: (_a = props == null ? void 0 : props.orientation) != null ? _a : \"horizontal\"\n  };\n  const styles = (0, import_system2.useMultiStyleConfig)(\"Slider\", sliderProps);\n  const ownProps = (0, import_system2.omitThemingProps)(sliderProps);\n  const {\n    direction\n  } = (0, import_system2.useTheme)();\n  ownProps.direction = direction;\n  const {\n    getInputProps,\n    getRootProps,\n    ...context\n  } = useSlider(ownProps);\n  const rootProps = getRootProps();\n  const inputProps = getInputProps({}, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(SliderProvider, {\n    value: context,\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(SliderStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */(0, import_jsx_runtime2.jsxs)(import_system2.chakra.div, {\n        ...rootProps,\n        className: cx(\"chakra-slider\", sliderProps.className),\n        __css: styles.container,\n        children: [sliderProps.children, /* @__PURE__ */(0, import_jsx_runtime2.jsx)(\"input\", {\n          ...inputProps\n        })]\n      })\n    })\n  });\n});\nSlider.displayName = \"Slider\";\nvar SliderThumb = (0, import_system2.forwardRef)((props, ref) => {\n  const {\n    getThumbProps\n  } = useSliderContext();\n  const styles = useSliderStyles();\n  const thumbProps = getThumbProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, {\n    ...thumbProps,\n    className: cx(\"chakra-slider__thumb\", props.className),\n    __css: styles.thumb\n  });\n});\nSliderThumb.displayName = \"SliderThumb\";\nvar SliderTrack = (0, import_system2.forwardRef)((props, ref) => {\n  const {\n    getTrackProps\n  } = useSliderContext();\n  const styles = useSliderStyles();\n  const trackProps = getTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, {\n    ...trackProps,\n    className: cx(\"chakra-slider__track\", props.className),\n    __css: styles.track\n  });\n});\nSliderTrack.displayName = \"SliderTrack\";\nvar SliderFilledTrack = (0, import_system2.forwardRef)((props, ref) => {\n  const {\n    getInnerTrackProps\n  } = useSliderContext();\n  const styles = useSliderStyles();\n  const trackProps = getInnerTrackProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, {\n    ...trackProps,\n    className: cx(\"chakra-slider__filled-track\", props.className),\n    __css: styles.filledTrack\n  });\n});\nSliderFilledTrack.displayName = \"SliderFilledTrack\";\nvar SliderMark = (0, import_system2.forwardRef)((props, ref) => {\n  const {\n    getMarkerProps\n  } = useSliderContext();\n  const styles = useSliderStyles();\n  const markProps = getMarkerProps(props, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.div, {\n    ...markProps,\n    className: cx(\"chakra-slider__marker\", props.className),\n    __css: styles.mark\n  });\n});\nSliderMark.displayName = \"SliderMark\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RangeSlider,\n  RangeSliderFilledTrack,\n  RangeSliderMark,\n  RangeSliderProvider,\n  RangeSliderThumb,\n  RangeSliderTrack,\n  Slider,\n  SliderFilledTrack,\n  SliderMark,\n  SliderProvider,\n  SliderThumb,\n  SliderTrack,\n  useRangeSlider,\n  useRangeSliderContext,\n  useRangeSliderStyles,\n  useSlider,\n  useSliderContext,\n  useSliderStyles\n});","map":{"version":3,"names":["src_exports","__export","RangeSlider","RangeSliderFilledTrack","RangeSliderMark","RangeSliderProvider","RangeSliderThumb","RangeSliderTrack","Slider","SliderFilledTrack","SliderMark","SliderProvider","SliderThumb","SliderTrack","useRangeSlider","useRangeSliderContext","useRangeSliderStyles","useSlider","useSliderContext","useSliderStyles","module","exports","__toCommonJS","import_react_context","require","import_system","dataAttr","condition","ariaAttr","cx","classNames","filter","Boolean","join","callAllHandlers","fns","func","event","some","fn","defaultPrevented","import_react2","import_react_use_pan_event","import_react_use_controllable_state","import_react_use_callback_ref","import_react_use_update_effect","import_react_use_merge_refs","import_number_utils","import_react","getIds","id","root","getThumb","i","getInput","track","innerTrack","getMarker","output","orient","options","orientation","vertical","horizontal","zeroSize","width","height","normalize","a","getStyles","thumbPercents","thumbRects","isReversed","getThumbStyle","_a","rect","position","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","touchAction","bottom","left","size","reduce","b","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","top","isSingleThumb","length","fallback","range","start","percent","Math","abs","innerTrackStyle","right","getIsReversed","direction","import_react_use_size","props","min","max","onChange","value","valueProp","defaultValue","isReversedProp","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","minStepsBetweenThumbs","htmlProps","useCallbackRef","valueState","setValue","useControllableState","Array","isArray","TypeError","isDragging","setDragging","useState","isFocused","setFocused","activeIndex","setActiveIndex","isInteractive","initialValue","useRef","map","val","clampValue","spacing","valueBounds","getValueBounds","stateRef","eventSource","current","reversedValue","thumbValues","valueToPercent","isVertical","trackRef","rootRef","useSizes","getNodes","rootNode","thumbNodes","querySelectorAll","from","reactId","useId","uuid","ids","getValueFromPointer","useCallback","_b","getBoundingClientRect","clientX","clientY","touches","diff","percentToValue","tenSteps","oneStep","actions","useMemo","setValueAtIndex","index","bounds","parseFloat","roundValueToStep","next","stepUp","step2","valueAtIndex","stepDown","reset","onKeyDown","eventKey","key","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","value2","End","action","preventDefault","stopPropagation","focusThumb","idx","thumb","ownerDocument","getElementById","setTimeout","focus","useUpdateEffect","onPanSessionStart","pointValue","distances","closest","indexOf","thumbsAtPosition","distance","isThumbStacked","onPan","usePanEvent","onPanSessionEnd","getRootProps","props2","ref","mergeRefs","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","rest","role","onFocus","onBlur","getOutputProps","htmlFor","v","getMarkerProps","isInRange","isHighlighted","markerStyle","pointerEvents","getInputProps","type","state","getThumbPercent","getThumbMinValue","getThumbMaxValue","arr","_min","_max","import_jsx_runtime","createContext","errorMessage","RangeSliderStylesProvider","forwardRef","RangeSlider2","sliderProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","useTheme","context","ctx","jsx","children","chakra","div","className","__css","container","displayName","RangeSliderThumb2","thumbProps","jsxs","RangeSliderTrack2","trackProps","RangeSliderFilledTrack2","filledTrack","RangeSliderMark2","markProps","mark","import_react_context2","import_system2","import_react_use_pan_event2","import_react_use_callback_ref2","import_react_use_update_effect2","import_react_use_controllable_state2","import_react_use_size2","import_react_use_merge_refs2","import_react_use_latest_ref","import_number_utils2","import_react3","computedValue","getDefaultValue","trackValue","thumbPercent","useLatestRef","thumbRef","thumbId","trackId","_a2","state2","trackRect","nextValue","constrain","stepTo","valueText","thumbSize","useSize","thumbRect","setValueFromPointer","markerPercent","orient2","import_jsx_runtime2","hookName","providerName","SliderStylesProvider","rootProps","inputProps"],"sources":["../src/index.ts","../src/range-slider.tsx","../../../legacy/utils/src/dom.ts","../../../legacy/utils/src/function.ts","../src/use-range-slider.ts","../src/slider-utils.ts","../src/slider.tsx","../src/use-slider.ts"],"sourcesContent":["export {\n  RangeSlider,\n  RangeSliderFilledTrack,\n  RangeSliderMark,\n  RangeSliderProvider,\n  RangeSliderThumb,\n  RangeSliderTrack,\n  useRangeSliderContext,\n  useRangeSliderStyles,\n} from \"./range-slider\"\nexport type {\n  RangeSliderInnerTrackProps,\n  RangeSliderMarkProps,\n  RangeSliderProps,\n  RangeSliderTrackProps,\n  RangeSliderThumbProps,\n} from \"./range-slider\"\nexport {\n  Slider,\n  SliderFilledTrack,\n  SliderMark,\n  SliderProvider,\n  SliderThumb,\n  SliderTrack,\n  useSliderContext,\n  useSliderStyles,\n} from \"./slider\"\nexport type {\n  SliderInnerTrackProps,\n  SliderMarkProps,\n  SliderProps,\n  SliderThumbProps,\n  SliderTrackProps,\n} from \"./slider\"\nexport { useRangeSlider } from \"./use-range-slider\"\nexport type {\n  UseRangeSliderProps,\n  UseRangeSliderReturn,\n} from \"./use-range-slider\"\nexport { useSlider } from \"./use-slider\"\nexport type { UseSliderProps, UseSliderReturn } from \"./use-slider\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport { useMemo } from \"react\"\nimport {\n  useRangeSlider,\n  UseRangeSliderProps,\n  UseRangeSliderReturn,\n} from \"./use-range-slider\"\n\ninterface RangeSliderContext\n  extends Omit<UseRangeSliderReturn, \"getRootProps\"> {\n  name?: string | string[]\n}\n\nconst [RangeSliderProvider, useRangeSliderContext] =\n  createContext<RangeSliderContext>({\n    name: \"SliderContext\",\n    errorMessage:\n      \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\",\n  })\n\nconst [RangeSliderStylesProvider, useRangeSliderStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `RangeSliderStylesContext`,\n  errorMessage: `useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `,\n})\n\nexport { useRangeSliderStyles }\n\nexport { RangeSliderProvider, useRangeSliderContext }\n\nexport interface RangeSliderProps\n  extends UseRangeSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, keyof UseRangeSliderProps> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slidertwothumb/\n */\nexport const RangeSlider = forwardRef<RangeSliderProps, \"div\">(\n  function RangeSlider(props, ref) {\n    const sliderProps: RangeSliderProps = {\n      orientation: \"horizontal\",\n      ...props,\n    }\n\n    const styles = useMultiStyleConfig(\"Slider\", sliderProps)\n    const ownProps = omitThemingProps(sliderProps)\n\n    const { direction } = useTheme()\n    ownProps.direction = direction\n\n    const { getRootProps, ...context } = useRangeSlider(ownProps)\n    const ctx = useMemo(\n      () => ({ ...context, name: sliderProps.name }),\n      [context, sliderProps.name],\n    )\n\n    return (\n      <RangeSliderProvider value={ctx}>\n        <RangeSliderStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className=\"chakra-slider\"\n            __css={styles.container}\n          >\n            {sliderProps.children}\n          </chakra.div>\n        </RangeSliderStylesProvider>\n      </RangeSliderProvider>\n    )\n  },\n)\n\nRangeSlider.displayName = \"RangeSlider\"\n\nexport interface RangeSliderThumbProps extends HTMLChakraProps<\"div\"> {\n  index: number\n}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const RangeSliderThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  function RangeSliderThumb(props, ref) {\n    const { getThumbProps, getInputProps, name } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const thumbProps = getThumbProps(props, ref)\n\n    return (\n      <chakra.div\n        {...thumbProps}\n        className={cx(\"chakra-slider__thumb\", props.className)}\n        __css={styles.thumb}\n      >\n        {thumbProps.children}\n        {name && <input {...getInputProps({ index: props.index })} />}\n      </chakra.div>\n    )\n  },\n)\n\nRangeSliderThumb.displayName = \"RangeSliderThumb\"\n\nexport interface RangeSliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const RangeSliderTrack = forwardRef<RangeSliderTrackProps, \"div\">(\n  function RangeSliderTrack(props, ref) {\n    const { getTrackProps } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const trackProps = getTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className={cx(\"chakra-slider__track\", props.className)}\n        __css={styles.track}\n        data-testid=\"chakra-range-slider-track\"\n      />\n    )\n  },\n)\n\nRangeSliderTrack.displayName = \"RangeSliderTrack\"\n\nexport interface RangeSliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const RangeSliderFilledTrack = forwardRef<\n  RangeSliderInnerTrackProps,\n  \"div\"\n>(function RangeSliderFilledTrack(props, ref) {\n  const { getInnerTrackProps } = useRangeSliderContext()\n  const styles = useRangeSliderStyles()\n  const trackProps = getInnerTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className=\"chakra-slider__filled-track\"\n      __css={styles.filledTrack}\n    />\n  )\n})\n\nRangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\"\n\nexport interface RangeSliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const RangeSliderMark = forwardRef<RangeSliderMarkProps, \"div\">(\n  function RangeSliderMark(props, ref) {\n    const { getMarkerProps } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const markProps = getMarkerProps(props, ref)\n    return (\n      <chakra.div\n        {...markProps}\n        className={cx(\"chakra-slider__marker\", props.className)}\n        __css={styles.mark}\n      />\n    )\n  },\n)\n\nRangeSliderMark.displayName = \"RangeSliderMark\"\n","import { Booleanish, EventKeys } from \"./types\"\n\nexport function isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n\nexport function isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) {\n    return false\n  }\n\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nexport function getOwnerWindow(node?: Element | null): typeof globalThis {\n  return isElement(node)\n    ? getOwnerDocument(node)?.defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: Element | null): Document {\n  return isElement(node) ? node.ownerDocument ?? document : document\n}\n\nexport function getEventWindow(event: Event): typeof globalThis {\n  return ((event as UIEvent).view ?? window) as unknown as typeof globalThis\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = /* @__PURE__ */ canUseDOM()\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\nexport function addDomEvent(\n  target: EventTarget,\n  eventName: string,\n  handler: EventListener,\n  options?: AddEventListenerOptions,\n) {\n  target.addEventListener(eventName, handler, options)\n  return () => {\n    target.removeEventListener(eventName, handler, options)\n  }\n}\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(\n  event: Pick<KeyboardEvent, \"key\" | \"keyCode\">,\n) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget(\n  event: Pick<FocusEvent, \"relatedTarget\" | \"target\" | \"currentTarget\">,\n) {\n  const target = (event.target ?? event.currentTarget) as HTMLElement\n  const activeElement = getActiveElement(target)\n  return (event.relatedTarget ?? activeElement) as HTMLElement\n}\n\nexport function isRightClick(event: Pick<MouseEvent, \"button\">): boolean {\n  return event.button !== 0\n}\n","/* eslint-disable no-nested-ternary */\nimport { isFunction, isNumber, __DEV__ } from \"./assertion\"\nimport { AnyFunction, FunctionArguments } from \"./types\"\n\nexport type MaybeFunction<T, Args extends unknown[] = []> =\n  | T\n  | ((...args: Args) => T)\n\nexport function runIfFn<T, U>(\n  valueOrFn: T | ((...fnArgs: U[]) => T),\n  ...args: U[]\n): T {\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn\n}\n\nexport function callAllHandlers<T extends (event: any) => void>(\n  ...fns: (T | undefined)[]\n) {\n  return function func(event: FunctionArguments<T>[0]) {\n    fns.some((fn) => {\n      fn?.(event)\n      return event?.defaultPrevented\n    })\n  }\n}\n\nexport function callAll<T extends AnyFunction>(...fns: (T | undefined)[]) {\n  return function mergedFn(arg: FunctionArguments<T>[0]) {\n    fns.forEach((fn) => {\n      fn?.(arg)\n    })\n  }\n}\n\nexport const compose = <T>(\n  fn1: (...args: T[]) => T,\n  ...fns: Array<(...args: T[]) => T>\n) =>\n  fns.reduce(\n    (f1, f2) =>\n      (...args) =>\n        f1(f2(...args)),\n    fn1,\n  )\n\nexport function once<T extends AnyFunction>(fn?: T | null) {\n  let result: any\n\n  return function func(this: any, ...args: Parameters<T>) {\n    if (fn) {\n      result = fn.apply(this, args)\n      fn = null\n    }\n\n    return result\n  }\n}\n\nexport const noop = () => {}\n\ntype MessageOptions = {\n  condition: boolean\n  message: string\n}\n\nexport const warn = /* @__PURE__ */ once((options: MessageOptions) => () => {\n  const { condition, message } = options\n  if (condition && __DEV__) {\n    console.warn(message)\n  }\n})\n\nexport const error = /* @__PURE__ */ once((options: MessageOptions) => () => {\n  const { condition, message } = options\n  if (condition && __DEV__) {\n    console.error(message)\n  }\n})\n\nexport const pipe =\n  <R>(...fns: Array<(a: R) => R>) =>\n  (v: R) =>\n    fns.reduce((a, b) => b(a), v)\n\nconst distance1D = (a: number, b: number) => Math.abs(a - b)\ntype Point = { x: number; y: number }\n\nconst isPoint = (point: any): point is { x: number; y: number } =>\n  \"x\" in point && \"y\" in point\n\nexport function distance<P extends Point | number>(a: P, b: P) {\n  if (isNumber(a) && isNumber(b)) {\n    return distance1D(a, b)\n  }\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x)\n    const yDelta = distance1D(a.y, b.y)\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2)\n  }\n  return 0\n}\n","import { usePanEvent } from \"@chakra-ui/react-use-pan-event\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport type { PropGetter, RequiredPropGetter } from \"@chakra-ui/react-types\"\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/utils\"\nimport {\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n  clampValue,\n} from \"@chakra-ui/number-utils\"\nimport { useCallback, useMemo, useRef, useState, useId } from \"react\"\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\"\nimport { useSizes } from \"@chakra-ui/react-use-size\"\n\nexport interface UseRangeSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number[]\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number[]\n  /**\n   * Orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   * @default false\n   */\n  isReversed?: boolean\n\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number[]): void\n\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number[]): void\n\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number[]): void\n\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string | string[]\n  /**\n   * If `true`, the slider will be disabled\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   * @default false\n   */\n  isReadOnly?: boolean\n\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string[]\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string[]\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string[]\n  /**\n   * The writing mode\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /**\n   * The minimum distance between slider thumbs. Useful for preventing\n   * the thumbs from being too close together.\n   * @default 0\n   */\n  minStepsBetweenThumbs?: number\n}\n\nexport interface RangeSliderState {\n  value: number[]\n  isFocused: boolean\n  isDragging: boolean\n  getThumbPercent: (index: number) => number\n  getThumbMinValue: (index: number) => number\n  getThumbMaxValue: (index: number) => number\n}\n\nexport interface RangeSliderActions {\n  setValueAtIndex(index: number, val: number): void\n  setActiveIndex: React.Dispatch<React.SetStateAction<number>>\n  stepUp(index: number, step?: number): void\n  stepDown(index: number, step?: number): void\n  reset(): void\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slidertwothumb/\n */\nexport function useRangeSlider(props: UseRangeSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange,\n  })\n\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``,\n    )\n  }\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [activeIndex, setActiveIndex] = useState(-1)\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const initialValue = useRef(valueState)\n  const value = valueState.map((val) => clampValue(val, min, max))\n\n  const spacing = minStepsBetweenThumbs * step\n  const valueBounds = getValueBounds(value, min, max, spacing)\n\n  const stateRef = useRef<{\n    eventSource: \"pointer\" | \"keyboard\" | null\n    value: number[]\n    valueBounds: Array<{ min: number; max: number }>\n  }>({\n    eventSource: null,\n    value: [],\n    valueBounds: [],\n  })\n\n  stateRef.current.value = value\n  stateRef.current.valueBounds = valueBounds\n\n  const reversedValue = value.map((val) => max - val + min)\n  const thumbValues = isReversed ? reversedValue : value\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max))\n\n  const isVertical = orientation === \"vertical\"\n\n  const trackRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  const thumbRects = useSizes({\n    getNodes() {\n      const rootNode = rootRef.current\n      const thumbNodes =\n        rootNode?.querySelectorAll<HTMLElement>(\"[role=slider]\")\n      return thumbNodes ? Array.from(thumbNodes) : []\n    },\n  })\n\n  const reactId = useId()\n  const uuid = idProp ?? reactId\n  const ids = getIds(uuid)\n\n  const getValueFromPointer = useCallback(\n    (event: any) => {\n      if (!trackRef.current) return\n      stateRef.current.eventSource = \"pointer\"\n      const rect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left\n      const length = isVertical ? rect.height : rect.width\n\n      let percent = diff / length\n      if (isReversed) percent = 1 - percent\n\n      return percentToValue(percent, min, max)\n    },\n    [isVertical, isReversed, max, min],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const actions: RangeSliderActions = useMemo(\n    () => ({\n      setValueAtIndex(index: number, val: number) {\n        if (!isInteractive) return\n        const bounds = stateRef.current.valueBounds[index]\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep))\n        val = clampValue(val, bounds.min, bounds.max)\n        const next = [...stateRef.current.value]\n        next[index] = val\n        setValue(next)\n      },\n      setActiveIndex,\n      stepUp(index: number, step = oneStep) {\n        const valueAtIndex = stateRef.current.value[index]\n        const next = isReversed ? valueAtIndex - step : valueAtIndex + step\n        actions.setValueAtIndex(index, next)\n      },\n      stepDown(index: number, step = oneStep) {\n        const valueAtIndex = stateRef.current.value[index]\n        const next = isReversed ? valueAtIndex + step : valueAtIndex - step\n        actions.setValueAtIndex(index, next)\n      },\n      reset() {\n        setValue(initialValue.current)\n      },\n    }),\n    [oneStep, isReversed, setValue, isInteractive],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n        End: () => {\n          const { max: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        stateRef.current.eventSource = \"keyboard\"\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds],\n  )\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () =>\n      getStyles({\n        isReversed,\n        orientation,\n        thumbRects,\n        thumbPercents,\n      }),\n    [isReversed, orientation, thumbPercents, thumbRects],\n  )\n\n  const focusThumb = useCallback(\n    (index?: number) => {\n      const idx = index ?? activeIndex\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx)\n        const thumb = rootRef.current?.ownerDocument.getElementById(id)\n        if (thumb) {\n          setTimeout(() => thumb.focus())\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids],\n  )\n\n  useUpdateEffect(() => {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd?.(stateRef.current.value)\n    }\n  }, [value, onChangeEnd])\n\n  const onPanSessionStart = (event: MouseEvent | TouchEvent | PointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    const distances = stateRef.current.value.map((val) =>\n      Math.abs(val - pointValue),\n    )\n    const closest = Math.min(...distances)\n    let index = distances.indexOf(closest)\n\n    // check if the clicked thumb is stacked by checking if there are multiple\n    // thumbs at the same distance\n    const thumbsAtPosition = distances.filter(\n      (distance) => distance === closest,\n    )\n    const isThumbStacked = thumbsAtPosition.length > 1\n\n    // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the last thumb with the greatest index\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1\n    }\n\n    setActiveIndex(index)\n    actions.setValueAtIndex(index, pointValue)\n    focusThumb(index)\n  }\n\n  const onPan = (event: MouseEvent | TouchEvent | PointerEvent) => {\n    if (activeIndex == -1) return\n    const pointValue = getValueFromPointer(event) || 0\n    setActiveIndex(activeIndex)\n    actions.setValueAtIndex(activeIndex, pointValue)\n    focusThumb(activeIndex)\n  }\n\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging(true)\n      onPanSessionStart(event)\n      onChangeStart?.(stateRef.current.value)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging(false)\n      onChangeEnd?.(stateRef.current.value)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      onPan(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ...htmlProps,\n        id: ids.root,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: { ...props.style, ...rootStyle },\n      }\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle, ids],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        id: ids.track,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: { ...props.style, ...trackStyle },\n      }\n    },\n    [isDisabled, trackStyle, ids],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        id: ids.innerTrack,\n        style: {\n          ...props.style,\n          ...innerTrackStyle,\n        },\n      }\n    },\n    [innerTrackStyle, ids],\n  )\n\n  const getThumbProps: RequiredPropGetter<{ index: number }> = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n\n      const valueAtIndex = value[index]\n      if (valueAtIndex == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`,\n        )\n      }\n\n      const bounds = valueBounds[index]\n\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\":\n          getAriaValueText?.(valueAtIndex) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": valueAtIndex,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index]\n          ? undefined\n          : ariaLabelledBy?.[index],\n        style: { ...props.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => {\n          setFocused(true)\n          setActiveIndex(index)\n        }),\n        onBlur: callAllHandlers(props.onBlur, () => {\n          setFocused(false)\n          setActiveIndex(-1)\n        }),\n      }\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused,\n    ],\n  )\n\n  const getOutputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        id: ids.output,\n        htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n        \"aria-live\": \"off\",\n      }\n    },\n    [ids, value],\n  )\n\n  const getMarkerProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props, ref = null) => {\n      const { value: v, ...rest } = props\n\n      const isInRange = !(v < min || v > max)\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1]\n\n      let percent = valueToPercent(v, min, max)\n      percent = isReversed ? 100 - percent : percent\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` },\n        }),\n      }\n\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids],\n  )\n\n  const getInputProps: RequiredPropGetter<{ index: number }> = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`,\n      }\n    },\n    [name, value, ids],\n  )\n\n  const state: RangeSliderState = {\n    value,\n    isFocused,\n    isDragging,\n    getThumbPercent: (index: number) => thumbPercents[index],\n    getThumbMinValue: (index: number) => valueBounds[index].min,\n    getThumbMaxValue: (index: number) => valueBounds[index].max,\n  }\n\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps,\n  }\n}\n\nexport type UseRangeSliderReturn = ReturnType<typeof useRangeSlider>\n\nfunction getValueBounds(\n  arr: number[],\n  min: number,\n  max: number,\n  spacing: number,\n) {\n  return arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing\n    return { min: _min, max: _max }\n  })\n}\n","export function getIds(id: string | number) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: (i: number) => `slider-thumb-${id}-${i}`,\n    getInput: (i: number) => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: (i: number) => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`,\n  }\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport function orient(options: {\n  orientation: Orientation\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\ntype Size = { height: number; width: number }\n\nconst zeroSize: Size = { width: 0, height: 0 }\n\nconst normalize = (a: Size | undefined) => a || zeroSize\n\nexport function getStyles(options: {\n  orientation: Orientation\n  thumbPercents: number[]\n  thumbRects: Array<Size | undefined>\n  isReversed?: boolean\n}) {\n  const { orientation, thumbPercents, thumbRects, isReversed } = options\n\n  const getThumbStyle = (i: number): React.CSSProperties => {\n    const rect = thumbRects[i] ?? zeroSize\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`,\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`,\n        },\n      }),\n    }\n  }\n\n  const size =\n    orientation === \"vertical\"\n      ? thumbRects.reduce(\n          (a, b) => (normalize(a).height > normalize(b).height ? a : b),\n          zeroSize,\n        )\n      : thumbRects.reduce(\n          (a, b) => (normalize(a).width > normalize(b).width ? a : b),\n          zeroSize,\n        )\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size\n        ? {\n            paddingLeft: size.width / 2,\n            paddingRight: size.width / 2,\n          }\n        : {},\n      horizontal: size\n        ? {\n            paddingTop: size.height / 2,\n            paddingBottom: size.height / 2,\n          }\n        : {},\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const isSingleThumb = thumbPercents.length === 1\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]]\n  const range = isSingleThumb ? fallback : thumbPercents\n\n  let start = range[0]\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0])\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${percent}%`, top: `${start}%` }\n        : { height: `${percent}%`, bottom: `${start}%` },\n      horizontal: isReversed\n        ? { width: `${percent}%`, right: `${start}%` }\n        : { width: `${percent}%`, left: `${start}%` },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, getThumbStyle }\n}\n\nexport function getIsReversed(options: {\n  isReversed?: boolean\n  direction: \"ltr\" | \"rtl\"\n  orientation?: \"horizontal\" | \"vertical\"\n}) {\n  const { isReversed, direction, orientation } = options\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed\n  }\n  // only flip for horizontal RTL\n  // if isReserved 🔜  otherwise  🔚\n  return !isReversed\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport { useSlider, UseSliderProps, UseSliderReturn } from \"./use-slider\"\n\ninterface SliderContext\n  extends Omit<UseSliderReturn, \"getInputProps\" | \"getRootProps\"> {}\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: \"SliderContext\",\n  hookName: \"useSliderContext\",\n  providerName: \"<Slider />\",\n})\n\nconst [SliderStylesProvider, useSliderStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `SliderStylesContext`,\n  hookName: `useSliderStyles`,\n  providerName: \"<Slider />\",\n})\n\nexport { useSliderStyles }\nexport { SliderProvider, useSliderContext }\n\nexport interface SliderProps\n  extends UseSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, keyof UseSliderProps> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slider/\n */\nexport const Slider = forwardRef<SliderProps, \"div\">((props, ref) => {\n  const sliderProps: SliderProps = {\n    ...props,\n    orientation: props?.orientation ?? \"horizontal\",\n  }\n\n  const styles = useMultiStyleConfig(\"Slider\", sliderProps)\n  const ownProps = omitThemingProps(sliderProps)\n\n  const { direction } = useTheme()\n  ownProps.direction = direction\n\n  const { getInputProps, getRootProps, ...context } = useSlider(ownProps)\n\n  const rootProps = getRootProps()\n  const inputProps = getInputProps({}, ref)\n\n  return (\n    <SliderProvider value={context}>\n      <SliderStylesProvider value={styles}>\n        <chakra.div\n          {...rootProps}\n          className={cx(\"chakra-slider\", sliderProps.className)}\n          __css={styles.container}\n        >\n          {sliderProps.children}\n          <input {...inputProps} />\n        </chakra.div>\n      </SliderStylesProvider>\n    </SliderProvider>\n  )\n})\n\nSlider.displayName = \"Slider\"\n\nexport interface SliderThumbProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const SliderThumb = forwardRef<SliderThumbProps, \"div\">((props, ref) => {\n  const { getThumbProps } = useSliderContext()\n  const styles = useSliderStyles()\n  const thumbProps = getThumbProps(props, ref)\n\n  return (\n    <chakra.div\n      {...thumbProps}\n      className={cx(\"chakra-slider__thumb\", props.className)}\n      __css={styles.thumb}\n    />\n  )\n})\n\nSliderThumb.displayName = \"SliderThumb\"\n\nexport interface SliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderTrack = forwardRef<SliderTrackProps, \"div\">((props, ref) => {\n  const { getTrackProps } = useSliderContext()\n  const styles = useSliderStyles()\n  const trackProps = getTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className={cx(\"chakra-slider__track\", props.className)}\n      __css={styles.track}\n    />\n  )\n})\n\nSliderTrack.displayName = \"SliderTrack\"\n\nexport interface SliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderFilledTrack = forwardRef<SliderInnerTrackProps, \"div\">(\n  (props, ref) => {\n    const { getInnerTrackProps } = useSliderContext()\n    const styles = useSliderStyles()\n    const trackProps = getInnerTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className={cx(\"chakra-slider__filled-track\", props.className)}\n        __css={styles.filledTrack}\n      />\n    )\n  },\n)\n\nSliderFilledTrack.displayName = \"SliderFilledTrack\"\n\nexport interface SliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const SliderMark = forwardRef<SliderMarkProps, \"div\">((props, ref) => {\n  const { getMarkerProps } = useSliderContext()\n  const styles = useSliderStyles()\n  const markProps = getMarkerProps(props, ref)\n  return (\n    <chakra.div\n      {...markProps}\n      className={cx(\"chakra-slider__marker\", props.className)}\n      __css={styles.mark}\n    />\n  )\n})\n\nSliderMark.displayName = \"SliderMark\"\n","import { usePanEvent } from \"@chakra-ui/react-use-pan-event\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useSize } from \"@chakra-ui/react-use-size\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\"\nimport type { PropGetter, RequiredPropGetter } from \"@chakra-ui/react-types\"\nimport {\n  clampValue,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/number-utils\"\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/utils\"\nimport { useCallback, useMemo, useRef, useId, useState } from \"react\"\nimport { getIsReversed, getStyles } from \"./slider-utils\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * Orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number): void\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   * @default false\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n  /**\n   * The writing mode\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport interface SliderState {\n  value: number\n  isFocused: boolean\n  isDragging: boolean\n}\n\nexport interface SliderActions {\n  stepUp(step?: number): void\n  stepDown(step?: number): void\n  reset(): void\n  stepTo(value: number): void\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slider/\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const thumbPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  const stateRef = useLatestRef({\n    min,\n    max,\n    step,\n    isDisabled,\n    value,\n    isInteractive,\n    isReversed,\n    isVertical,\n    eventSource: null as \"pointer\" | \"keyboard\" | null,\n    focusThumbOnChange,\n    orientation,\n  })\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<HTMLElement>(null)\n  const thumbRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const reactId = useId()\n  const uuid = idProp ?? reactId\n  const [thumbId, trackId] = [`slider-thumb-${uuid}`, `slider-track-${uuid}`]\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   *\n   * @todo - Refactor this later on to use info from pan session\n   */\n\n  const getValueFromPointer = useCallback(\n    (event: any) => {\n      if (!trackRef.current) return\n\n      const state = stateRef.current\n      state.eventSource = \"pointer\"\n\n      const trackRect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, state.min, state.max)\n\n      if (state.step) {\n        nextValue = parseFloat(\n          roundValueToStep(nextValue, state.min, state.step),\n        )\n      }\n\n      nextValue = clampValue(nextValue, state.min, state.max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, stateRef],\n  )\n\n  const constrain = useCallback(\n    (value: number) => {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      value = parseFloat(roundValueToStep(value, state.min, oneStep))\n      value = clampValue(value, state.min, state.max)\n      setValue(value)\n    },\n    [oneStep, setValue, stateRef],\n  )\n\n  const actions: SliderActions = useMemo(\n    () => ({\n      stepUp(step = oneStep) {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown(step = oneStep) {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset() {\n        constrain(defaultValue || 0)\n      },\n      stepTo(value: number) {\n        constrain(value)\n      },\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const state = stateRef.current\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(state.min),\n        End: () => constrain(state.max),\n      }\n\n      const action = keyMap[event.key]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        state.eventSource = \"keyboard\"\n      }\n    },\n    [actions, constrain, tenSteps, stateRef],\n  )\n\n  /**\n   * ARIA (Optional): To define a human-readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb, so\n   * we can center it within the track properly\n   */\n  const thumbSize = useSize(thumbRef)\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } =\n    useMemo(() => {\n      const state = stateRef.current\n\n      const thumbRect = thumbSize ?? { width: 0, height: 0 }\n      return getStyles({\n        isReversed,\n        orientation: state.orientation,\n        thumbRects: [thumbRect],\n        thumbPercents: [thumbPercent],\n      })\n    }, [isReversed, thumbSize, thumbPercent, stateRef])\n\n  const focusThumb = useCallback(() => {\n    const state = stateRef.current\n    if (state.focusThumbOnChange) {\n      setTimeout(() => thumbRef.current?.focus())\n    }\n  }, [stateRef])\n\n  useUpdateEffect(() => {\n    const state = stateRef.current\n    focusThumb()\n    if (state.eventSource === \"keyboard\") {\n      onChangeEnd?.(state.value)\n    }\n  }, [value, onChangeEnd])\n\n  function setValueFromPointer(event: MouseEvent | TouchEvent | PointerEvent) {\n    const nextValue = getValueFromPointer(event)\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue)\n    }\n  }\n\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setDragging(true)\n      focusThumb()\n      setValueFromPointer(event)\n      onChangeStart?.(state.value)\n    },\n    onPanSessionEnd() {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setDragging(false)\n      onChangeEnd?.(state.value)\n    },\n    onPan(event) {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setValueFromPointer(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ...htmlProps,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: {\n          ...props.style,\n          ...rootStyle,\n        },\n      }\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        id: trackId,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: {\n          ...props.style,\n          ...trackStyle,\n        },\n      }\n    },\n    [isDisabled, trackId, trackStyle],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        style: {\n          ...props.style,\n          ...innerTrackStyle,\n        },\n      }\n    },\n    [innerTrackStyle],\n  )\n\n  const getThumbProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, thumbRef),\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: thumbId,\n        \"data-active\": dataAttr(isDragging),\n        \"aria-valuetext\": valueText,\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n        style: {\n          ...props.style,\n          ...getThumbStyle(0),\n        },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => setFocused(true)),\n        onBlur: callAllHandlers(props.onBlur, () => setFocused(false)),\n      }\n    },\n    [\n      isInteractive,\n      thumbId,\n      isDragging,\n      valueText,\n      min,\n      max,\n      value,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n    ],\n  )\n\n  const getMarkerProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props, ref = null) => {\n      const isInRange = !(props.value < min || props.value > max)\n      const isHighlighted = value >= props.value\n      const markerPercent = valueToPercent(props.value, min, max)\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation: orientation,\n          vertical: {\n            bottom: isReversed\n              ? `${100 - markerPercent}%`\n              : `${markerPercent}%`,\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n          },\n        }),\n      }\n\n      return {\n        ...props,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        type: \"hidden\",\n        value,\n        name,\n      }\n    },\n    [name, value],\n  )\n\n  const state: SliderState = { value, isFocused, isDragging }\n\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}