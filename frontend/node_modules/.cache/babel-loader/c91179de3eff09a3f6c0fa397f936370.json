{"ast":null,"code":"'use client';\n\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  Menu: () => Menu,\n  MenuButton: () => MenuButton,\n  MenuCommand: () => MenuCommand,\n  MenuDescendantsProvider: () => MenuDescendantsProvider,\n  MenuDivider: () => MenuDivider,\n  MenuGroup: () => MenuGroup,\n  MenuIcon: () => MenuIcon,\n  MenuItem: () => MenuItem,\n  MenuItemOption: () => MenuItemOption,\n  MenuList: () => MenuList,\n  MenuOptionGroup: () => MenuOptionGroup,\n  MenuProvider: () => MenuProvider,\n  useMenu: () => useMenu,\n  useMenuButton: () => useMenuButton,\n  useMenuContext: () => useMenuContext,\n  useMenuDescendant: () => useMenuDescendant,\n  useMenuDescendants: () => useMenuDescendants,\n  useMenuDescendantsContext: () => useMenuDescendantsContext,\n  useMenuItem: () => useMenuItem,\n  useMenuList: () => useMenuList,\n  useMenuOption: () => useMenuOption,\n  useMenuOptionGroup: () => useMenuOptionGroup,\n  useMenuPositioner: () => useMenuPositioner,\n  useMenuState: () => useMenuState,\n  useMenuStyles: () => useMenuStyles\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/menu.tsx\nvar import_react_context2 = require(\"@chakra-ui/react-context\");\nvar import_system = require(\"@chakra-ui/system\");\nvar import_shared_utils2 = require(\"@chakra-ui/shared-utils\");\nvar import_react3 = require(\"react\");\n\n// src/use-menu.ts\nvar import_clickable = require(\"@chakra-ui/clickable\");\nvar import_descendant = require(\"@chakra-ui/descendant\");\nvar import_react_use_focus_effect = require(\"@chakra-ui/react-use-focus-effect\");\nvar import_popper = require(\"@chakra-ui/popper\");\nvar import_react_use_disclosure = require(\"@chakra-ui/react-use-disclosure\");\nvar import_react_use_outside_click = require(\"@chakra-ui/react-use-outside-click\");\nvar import_react_use_animation_state = require(\"@chakra-ui/react-use-animation-state\");\nvar import_react_context = require(\"@chakra-ui/react-context\");\nvar import_react_children_utils = require(\"@chakra-ui/react-children-utils\");\nvar import_react_use_controllable_state = require(\"@chakra-ui/react-use-controllable-state\");\nvar import_react_use_update_effect = require(\"@chakra-ui/react-use-update-effect\");\nvar import_react_use_merge_refs = require(\"@chakra-ui/react-use-merge-refs\");\nvar import_shared_utils = require(\"@chakra-ui/shared-utils\");\nvar import_lazy_utils = require(\"@chakra-ui/lazy-utils\");\nvar import_react2 = require(\"react\");\n\n// src/use-shortcut.ts\nvar import_react = require(\"react\");\nfunction isPrintableCharacter(event) {\n  const {\n    key\n  } = event;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\nfunction useShortcut(props = {}) {\n  const {\n    timeout = 300,\n    preventDefault = () => true\n  } = props;\n  const [keys, setKeys] = (0, import_react.useState)([]);\n  const timeoutRef = (0, import_react.useRef)();\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n  const clearKeysAfterDelay = () => {\n    flush();\n    timeoutRef.current = setTimeout(() => {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n  (0, import_react.useEffect)(() => flush, []);\n  function onKeyDown(fn) {\n    return event => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys];\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key);\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        setKeys(keysCopy);\n        fn(keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n  return onKeyDown;\n}\n\n// src/get-next-item-from-search.ts\nfunction getNextItemFromSearch(items, searchString, itemToString, currentItem) {\n  if (searchString == null) {\n    return currentItem;\n  }\n  if (!currentItem) {\n    const foundItem = items.find(item => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()));\n    return foundItem;\n  }\n  const matchingItems = items.filter(item => itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()));\n  if (matchingItems.length > 0) {\n    let nextIndex;\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem);\n      nextIndex = currentIndex + 1;\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0;\n      }\n      return matchingItems[nextIndex];\n    }\n    nextIndex = items.indexOf(matchingItems[0]);\n    return items[nextIndex];\n  }\n  return currentItem;\n}\n\n// src/use-menu.ts\nvar [MenuDescendantsProvider, useMenuDescendantsContext, useMenuDescendants, useMenuDescendant] = (0, import_descendant.createDescendantContext)();\nvar [MenuProvider, useMenuContext] = (0, import_react_context.createContext)({\n  strict: false,\n  name: \"MenuContext\"\n});\nfunction useIds(idProp, ...prefixes) {\n  const reactId = (0, import_react2.useId)();\n  const id = idProp || reactId;\n  return (0, import_react2.useMemo)(() => {\n    return prefixes.map(prefix => `${prefix}-${id}`);\n  }, [id, prefixes]);\n}\nfunction getOwnerDocument(node) {\n  var _a;\n  return (_a = node == null ? void 0 : node.ownerDocument) != null ? _a : document;\n}\nfunction isActiveElement(element) {\n  const doc = getOwnerDocument(element);\n  return doc.activeElement === element;\n}\nfunction useMenu(props = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    initialFocusRef,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props;\n  const menuRef = (0, import_react2.useRef)(null);\n  const buttonRef = (0, import_react2.useRef)(null);\n  const descendants = useMenuDescendants();\n  const focusMenu = (0, import_react2.useCallback)(() => {\n    requestAnimationFrame(() => {\n      var _a;\n      (_a = menuRef.current) == null ? void 0 : _a.focus({\n        preventScroll: false\n      });\n    });\n  }, []);\n  const focusFirstItem = (0, import_react2.useCallback)(() => {\n    const id2 = setTimeout(() => {\n      var _a;\n      if (initialFocusRef) {\n        (_a = initialFocusRef.current) == null ? void 0 : _a.focus();\n      } else {\n        const first = descendants.firstEnabled();\n        if (first) setFocusedIndex(first.index);\n      }\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants, initialFocusRef]);\n  const focusLastItem = (0, import_react2.useCallback)(() => {\n    const id2 = setTimeout(() => {\n      const last = descendants.lastEnabled();\n      if (last) setFocusedIndex(last.index);\n    });\n    timeoutIds.current.add(id2);\n  }, [descendants]);\n  const onOpenInternal = (0, import_react2.useCallback)(() => {\n    onOpenProp == null ? void 0 : onOpenProp();\n    if (autoSelect) {\n      focusFirstItem();\n    } else {\n      focusMenu();\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp]);\n  const {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle\n  } = (0, import_react_use_disclosure.useDisclosure)({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal\n  });\n  (0, import_react_use_outside_click.useOutsideClick)({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: event => {\n      var _a;\n      if (!((_a = buttonRef.current) == null ? void 0 : _a.contains(event.target))) {\n        onClose();\n      }\n    }\n  });\n  const popper = (0, import_popper.usePopper)({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction\n  });\n  const [focusedIndex, setFocusedIndex] = (0, import_react2.useState)(-1);\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1);\n    }\n  }, [isOpen]);\n  (0, import_react_use_focus_effect.useFocusOnHide)(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true\n  });\n  const animationState = (0, import_react_use_animation_state.useAnimationState)({\n    isOpen,\n    ref: menuRef\n  });\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`);\n  const openAndFocusMenu = (0, import_react2.useCallback)(() => {\n    onOpen();\n    focusMenu();\n  }, [onOpen, focusMenu]);\n  const timeoutIds = (0, import_react2.useRef)( /* @__PURE__ */new Set([]));\n  (0, import_react2.useEffect)(() => {\n    const ids = timeoutIds.current;\n    return () => {\n      ids.forEach(id2 => clearTimeout(id2));\n      ids.clear();\n    };\n  }, []);\n  const openAndFocusFirstItem = (0, import_react2.useCallback)(() => {\n    onOpen();\n    focusFirstItem();\n  }, [focusFirstItem, onOpen]);\n  const openAndFocusLastItem = (0, import_react2.useCallback)(() => {\n    onOpen();\n    focusLastItem();\n  }, [onOpen, focusLastItem]);\n  const refocus = (0, import_react2.useCallback)(() => {\n    var _a, _b;\n    const doc = getOwnerDocument(menuRef.current);\n    const hasFocusWithin = (_a = menuRef.current) == null ? void 0 : _a.contains(doc.activeElement);\n    const shouldRefocus = isOpen && !hasFocusWithin;\n    if (!shouldRefocus) return;\n    const node = (_b = descendants.item(focusedIndex)) == null ? void 0 : _b.node;\n    node == null ? void 0 : node.focus({\n      preventScroll: true\n    });\n  }, [isOpen, focusedIndex, descendants]);\n  const rafId = (0, import_react2.useRef)(null);\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n    initialFocusRef,\n    rafId\n  };\n}\nfunction useMenuButton(props = {}, externalRef = null) {\n  const menu = useMenuContext();\n  const {\n    onToggle,\n    popper,\n    openAndFocusFirstItem,\n    openAndFocusLastItem\n  } = menu;\n  const onKeyDown = (0, import_react2.useCallback)(event => {\n    const eventKey = event.key;\n    const keyMap = {\n      Enter: openAndFocusFirstItem,\n      ArrowDown: openAndFocusFirstItem,\n      ArrowUp: openAndFocusLastItem\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n    }\n  }, [openAndFocusFirstItem, openAndFocusLastItem]);\n  return {\n    ...props,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": (0, import_shared_utils.dataAttr)(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\",\n    \"aria-controls\": menu.menuId,\n    onClick: (0, import_shared_utils.callAllHandlers)(props.onClick, onToggle),\n    onKeyDown: (0, import_shared_utils.callAllHandlers)(props.onKeyDown, onKeyDown)\n  };\n}\nfunction isTargetMenuItem(target) {\n  var _a;\n  return isHTMLElement(target) && !!((_a = target == null ? void 0 : target.getAttribute(\"role\")) == null ? void 0 : _a.startsWith(\"menuitem\"));\n}\nfunction useMenuList(props = {}, ref = null) {\n  const menu = useMenuContext();\n  if (!menu) {\n    throw new Error(`useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`);\n  }\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n    unstable__animationState: animated\n  } = menu;\n  const descendants = useMenuDescendantsContext();\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: event => event.key !== \" \" && isTargetMenuItem(event.target)\n  });\n  const onKeyDown = (0, import_react2.useCallback)(event => {\n    if (!event.currentTarget.contains(event.target)) return;\n    const eventKey = event.key;\n    const keyMap = {\n      Tab: event2 => event2.preventDefault(),\n      Escape: onClose,\n      ArrowDown: () => {\n        const next = descendants.nextEnabled(focusedIndex);\n        if (next) setFocusedIndex(next.index);\n      },\n      ArrowUp: () => {\n        const prev = descendants.prevEnabled(focusedIndex);\n        if (prev) setFocusedIndex(prev.index);\n      }\n    };\n    const fn = keyMap[eventKey];\n    if (fn) {\n      event.preventDefault();\n      fn(event);\n      return;\n    }\n    const onTypeahead = createTypeaheadHandler(character => {\n      const nextItem = getNextItemFromSearch(descendants.values(), character, item => {\n        var _a, _b;\n        return (_b = (_a = item == null ? void 0 : item.node) == null ? void 0 : _a.textContent) != null ? _b : \"\";\n      }, descendants.item(focusedIndex));\n      if (nextItem) {\n        const index = descendants.indexOf(nextItem.node);\n        setFocusedIndex(index);\n      }\n    });\n    if (isTargetMenuItem(event.target)) {\n      onTypeahead(event);\n    }\n  }, [descendants, focusedIndex, createTypeaheadHandler, onClose, setFocusedIndex]);\n  const hasBeenOpened = (0, import_react2.useRef)(false);\n  if (isOpen) {\n    hasBeenOpened.current = true;\n  }\n  const shouldRenderChildren = (0, import_lazy_utils.lazyDisclosure)({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present\n  });\n  return {\n    ...props,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\"\n    },\n    \"aria-orientation\": \"vertical\",\n    onKeyDown: (0, import_shared_utils.callAllHandlers)(props.onKeyDown, onKeyDown)\n  };\n}\nfunction useMenuPositioner(props = {}) {\n  const {\n    popper,\n    isOpen\n  } = useMenuContext();\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style\n    }\n  });\n}\nfunction useMenuItem(props = {}, externalRef = null) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    onFocus: onFocusProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    type: typeProp,\n    ...htmlProps\n  } = props;\n  const menu = useMenuContext();\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n    rafId\n  } = menu;\n  const ref = (0, import_react2.useRef)(null);\n  const id = `${menuId}-menuitem-${(0, import_react2.useId)()}`;\n  const {\n    index,\n    register\n  } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const onMouseEnter = (0, import_react2.useCallback)(event => {\n    onMouseEnterProp == null ? void 0 : onMouseEnterProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index, isDisabled, onMouseEnterProp]);\n  const onMouseMove = (0, import_react2.useCallback)(event => {\n    onMouseMoveProp == null ? void 0 : onMouseMoveProp(event);\n    if (ref.current && !isActiveElement(ref.current)) {\n      onMouseEnter(event);\n    }\n  }, [onMouseEnter, onMouseMoveProp]);\n  const onMouseLeave = (0, import_react2.useCallback)(event => {\n    onMouseLeaveProp == null ? void 0 : onMouseLeaveProp(event);\n    if (isDisabled) return;\n    setFocusedIndex(-1);\n  }, [setFocusedIndex, isDisabled, onMouseLeaveProp]);\n  const onClick = (0, import_react2.useCallback)(event => {\n    onClickProp == null ? void 0 : onClickProp(event);\n    if (!isTargetMenuItem(event.currentTarget)) return;\n    if (closeOnSelect != null ? closeOnSelect : menuCloseOnSelect) {\n      onClose();\n    }\n  }, [onClose, onClickProp, menuCloseOnSelect, closeOnSelect]);\n  const onFocus = (0, import_react2.useCallback)(event => {\n    onFocusProp == null ? void 0 : onFocusProp(event);\n    setFocusedIndex(index);\n  }, [setFocusedIndex, onFocusProp, index]);\n  const isFocused = index === focusedIndex;\n  const trulyDisabled = isDisabled && !isFocusable;\n  (0, import_react_use_update_effect.useUpdateEffect)(() => {\n    if (!isOpen) return;\n    if (isFocused && !trulyDisabled && ref.current) {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n      rafId.current = requestAnimationFrame(() => {\n        var _a;\n        (_a = ref.current) == null ? void 0 : _a.focus({\n          preventScroll: true\n        });\n        rafId.current = null;\n      });\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({\n        preventScroll: true\n      });\n    }\n    return () => {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [isFocused, trulyDisabled, menuRef, isOpen]);\n  const clickableProps = (0, import_clickable.useClickable)({\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: (0, import_react_use_merge_refs.mergeRefs)(register, ref, externalRef),\n    isDisabled,\n    isFocusable\n  });\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    type: typeProp != null ? typeProp : clickableProps.type,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1\n  };\n}\nfunction useMenuOption(props = {}, ref = null) {\n  const {\n    type = \"radio\",\n    isChecked,\n    ...rest\n  } = props;\n  const ownProps = useMenuItem(rest, ref);\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked\n  };\n}\nfunction useMenuOptionGroup(props = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props;\n  const isRadio = type === \"radio\";\n  const fallback = isRadio ? \"\" : [];\n  const [value, setValue] = (0, import_react_use_controllable_state.useControllableState)({\n    defaultValue: defaultValue != null ? defaultValue : fallback,\n    value: valueProp,\n    onChange: onChangeProp\n  });\n  const onChange = (0, import_react2.useCallback)(selectedValue => {\n    if (type === \"radio\" && typeof value === \"string\") {\n      setValue(selectedValue);\n    }\n    if (type === \"checkbox\" && Array.isArray(value)) {\n      const nextValue = value.includes(selectedValue) ? value.filter(item => item !== selectedValue) : value.concat(selectedValue);\n      setValue(nextValue);\n    }\n  }, [value, setValue, type]);\n  const validChildren = (0, import_react_children_utils.getValidChildren)(children);\n  const clones = validChildren.map(child => {\n    if (child.type.id !== \"MenuItemOption\") return child;\n    const onClick = event => {\n      var _a, _b;\n      onChange(child.props.value);\n      (_b = (_a = child.props).onClick) == null ? void 0 : _b.call(_a, event);\n    };\n    const isChecked = type === \"radio\" ? child.props.value === value : value.includes(child.props.value);\n    return (0, import_react2.cloneElement)(child, {\n      type,\n      onClick,\n      isChecked\n    });\n  });\n  return {\n    ...htmlProps,\n    children: clones\n  };\n}\nfunction useMenuState() {\n  const {\n    isOpen,\n    onClose\n  } = useMenuContext();\n  return {\n    isOpen,\n    onClose\n  };\n}\nfunction isHTMLElement(el) {\n  var _a;\n  if (!isElement(el)) return false;\n  const win = (_a = el.ownerDocument.defaultView) != null ? _a : window;\n  return el instanceof win.HTMLElement;\n}\nfunction isElement(el) {\n  return el != null && typeof el == \"object\" && \"nodeType\" in el && el.nodeType === Node.ELEMENT_NODE;\n}\n\n// src/menu.tsx\nvar import_jsx_runtime = require(\"react/jsx-runtime\");\nvar [MenuStylesProvider, useMenuStyles] = (0, import_react_context2.createContext)({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `\n});\nvar Menu = props => {\n  const {\n    children\n  } = props;\n  const styles = (0, import_system.useMultiStyleConfig)(\"Menu\", props);\n  const ownProps = (0, import_system.omitThemingProps)(props);\n  const {\n    direction\n  } = (0, import_system.useTheme)();\n  const {\n    descendants,\n    ...ctx\n  } = useMenu({\n    ...ownProps,\n    direction\n  });\n  const context = (0, import_react3.useMemo)(() => ctx, [ctx]);\n  const {\n    isOpen,\n    onClose,\n    forceUpdate\n  } = context;\n  return /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuDescendantsProvider, {\n    value: descendants,\n    children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuProvider, {\n      value: context,\n      children: /* @__PURE__ */(0, import_jsx_runtime.jsx)(MenuStylesProvider, {\n        value: styles,\n        children: (0, import_shared_utils2.runIfFn)(children, {\n          isOpen,\n          onClose,\n          forceUpdate\n        })\n      })\n    })\n  });\n};\nMenu.displayName = \"Menu\";\n\n// src/menu-button.tsx\nvar import_system2 = require(\"@chakra-ui/system\");\nvar import_shared_utils3 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime2 = require(\"react/jsx-runtime\");\nvar StyledMenuButton = (0, import_system2.forwardRef)((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.button, {\n    ref,\n    ...props,\n    __css: {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      outline: 0,\n      ...styles.button\n    }\n  });\n});\nvar MenuButton = (0, import_system2.forwardRef)((props, ref) => {\n  const {\n    children,\n    as: As,\n    ...rest\n  } = props;\n  const buttonProps = useMenuButton(rest, ref);\n  const Element = As || StyledMenuButton;\n  return /* @__PURE__ */(0, import_jsx_runtime2.jsx)(Element, {\n    ...buttonProps,\n    className: (0, import_shared_utils3.cx)(\"chakra-menu__menu-button\", props.className),\n    children: /* @__PURE__ */(0, import_jsx_runtime2.jsx)(import_system2.chakra.span, {\n      __css: {\n        pointerEvents: \"none\",\n        flex: \"1 1 auto\",\n        minW: 0\n      },\n      children: props.children\n    })\n  });\n});\nMenuButton.displayName = \"MenuButton\";\n\n// src/menu-command.tsx\nvar import_system3 = require(\"@chakra-ui/system\");\nvar import_jsx_runtime3 = require(\"react/jsx-runtime\");\nvar MenuCommand = (0, import_system3.forwardRef)((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime3.jsx)(import_system3.chakra.span, {\n    ref,\n    ...props,\n    __css: styles.command,\n    className: \"chakra-menu__command\"\n  });\n});\nMenuCommand.displayName = \"MenuCommand\";\n\n// src/menu-divider.tsx\nvar import_system4 = require(\"@chakra-ui/system\");\nvar import_shared_utils4 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime4 = require(\"react/jsx-runtime\");\nvar MenuDivider = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const styles = useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime4.jsx)(import_system4.chakra.hr, {\n    \"aria-orientation\": \"horizontal\",\n    className: (0, import_shared_utils4.cx)(\"chakra-menu__divider\", className),\n    ...rest,\n    __css: styles.divider\n  });\n};\nMenuDivider.displayName = \"MenuDivider\";\n\n// src/menu-group.tsx\nvar import_system5 = require(\"@chakra-ui/system\");\nvar import_shared_utils5 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime5 = require(\"react/jsx-runtime\");\nvar MenuGroup = (0, import_system5.forwardRef)((props, ref) => {\n  const {\n    title,\n    children,\n    className,\n    ...rest\n  } = props;\n  const _className = (0, import_shared_utils5.cx)(\"chakra-menu__group__title\", className);\n  const styles = useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime5.jsxs)(\"div\", {\n    ref,\n    className: \"chakra-menu__group\",\n    role: \"group\",\n    children: [title && /* @__PURE__ */(0, import_jsx_runtime5.jsx)(import_system5.chakra.p, {\n      className: _className,\n      ...rest,\n      __css: styles.groupTitle,\n      children: title\n    }), children]\n  });\n});\nMenuGroup.displayName = \"MenuGroup\";\n\n// src/menu-icon.tsx\nvar import_system6 = require(\"@chakra-ui/system\");\nvar import_shared_utils6 = require(\"@chakra-ui/shared-utils\");\nvar import_react4 = require(\"react\");\nvar import_jsx_runtime6 = require(\"react/jsx-runtime\");\nvar MenuIcon = props => {\n  const {\n    className,\n    children,\n    ...rest\n  } = props;\n  const styles = useMenuStyles();\n  const child = import_react4.Children.only(children);\n  const clone = (0, import_react4.isValidElement)(child) ? (0, import_react4.cloneElement)(child, {\n    focusable: \"false\",\n    \"aria-hidden\": true,\n    className: (0, import_shared_utils6.cx)(\"chakra-menu__icon\", child.props.className)\n  }) : null;\n  const _className = (0, import_shared_utils6.cx)(\"chakra-menu__icon-wrapper\", className);\n  return /* @__PURE__ */(0, import_jsx_runtime6.jsx)(import_system6.chakra.span, {\n    className: _className,\n    ...rest,\n    __css: styles.icon,\n    children: clone\n  });\n};\nMenuIcon.displayName = \"MenuIcon\";\n\n// src/menu-item.tsx\nvar import_system8 = require(\"@chakra-ui/system\");\nvar import_shared_utils7 = require(\"@chakra-ui/shared-utils\");\n\n// src/styled-menu-item.tsx\nvar import_system7 = require(\"@chakra-ui/system\");\nvar import_react5 = require(\"react\");\nvar import_jsx_runtime7 = require(\"react/jsx-runtime\");\nvar StyledMenuItem = (0, import_system7.forwardRef)((props, ref) => {\n  const {\n    type,\n    ...rest\n  } = props;\n  const styles = useMenuStyles();\n  const btnType = rest.as || type ? type != null ? type : void 0 : \"button\";\n  const buttonStyles = (0, import_react5.useMemo)(() => ({\n    textDecoration: \"none\",\n    color: \"inherit\",\n    userSelect: \"none\",\n    display: \"flex\",\n    width: \"100%\",\n    alignItems: \"center\",\n    textAlign: \"start\",\n    flex: \"0 0 auto\",\n    outline: 0,\n    ...styles.item\n  }), [styles.item]);\n  return /* @__PURE__ */(0, import_jsx_runtime7.jsx)(import_system7.chakra.button, {\n    ref,\n    type: btnType,\n    ...rest,\n    __css: buttonStyles\n  });\n});\n\n// src/menu-item.tsx\nvar import_jsx_runtime8 = require(\"react/jsx-runtime\");\nvar MenuItem = (0, import_system8.forwardRef)((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props;\n  const menuitemProps = useMenuItem(rest, ref);\n  const shouldWrap = icon || command;\n  const _children = shouldWrap ? /* @__PURE__ */(0, import_jsx_runtime8.jsx)(\"span\", {\n    style: {\n      pointerEvents: \"none\",\n      flex: 1\n    },\n    children\n  }) : children;\n  return /* @__PURE__ */(0, import_jsx_runtime8.jsxs)(StyledMenuItem, {\n    ...menuitemProps,\n    className: (0, import_shared_utils7.cx)(\"chakra-menu__menuitem\", menuitemProps.className),\n    children: [icon && /* @__PURE__ */(0, import_jsx_runtime8.jsx)(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      children: icon\n    }), _children, command && /* @__PURE__ */(0, import_jsx_runtime8.jsx)(MenuCommand, {\n      marginStart: commandSpacing,\n      children: command\n    })]\n  });\n});\nMenuItem.displayName = \"MenuItem\";\n\n// src/menu-item-option.tsx\nvar import_system9 = require(\"@chakra-ui/system\");\nvar import_shared_utils8 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime9 = require(\"react/jsx-runtime\");\nvar CheckIcon = props => /* @__PURE__ */(0, import_jsx_runtime9.jsx)(\"svg\", {\n  viewBox: \"0 0 14 14\",\n  width: \"1em\",\n  height: \"1em\",\n  ...props,\n  children: /* @__PURE__ */(0, import_jsx_runtime9.jsx)(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n  })\n});\nvar MenuItemOption = (0, import_system9.forwardRef)((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    ...rest\n  } = props;\n  const optionProps = useMenuOption(rest, ref);\n  return /* @__PURE__ */(0, import_jsx_runtime9.jsxs)(StyledMenuItem, {\n    ...optionProps,\n    className: (0, import_shared_utils8.cx)(\"chakra-menu__menuitem-option\", rest.className),\n    children: [icon !== null && /* @__PURE__ */(0, import_jsx_runtime9.jsx)(MenuIcon, {\n      fontSize: \"0.8em\",\n      marginEnd: iconSpacing,\n      opacity: props.isChecked ? 1 : 0,\n      children: icon || /* @__PURE__ */(0, import_jsx_runtime9.jsx)(CheckIcon, {})\n    }), /* @__PURE__ */(0, import_jsx_runtime9.jsx)(\"span\", {\n      style: {\n        flex: 1\n      },\n      children: optionProps.children\n    })]\n  });\n});\nMenuItemOption.id = \"MenuItemOption\";\nMenuItemOption.displayName = \"MenuItemOption\";\n\n// src/menu-list.tsx\nvar import_shared_utils9 = require(\"@chakra-ui/shared-utils\");\nvar import_system10 = require(\"@chakra-ui/system\");\nvar import_framer_motion = require(\"framer-motion\");\nvar import_jsx_runtime10 = require(\"react/jsx-runtime\");\nvar motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n};\nvar MenuTransition = (0, import_system10.chakra)(import_framer_motion.motion.div);\nvar MenuList = (0, import_system10.forwardRef)(function MenuList2(props, ref) {\n  var _a, _b;\n  const {\n    rootProps,\n    motionProps,\n    ...rest\n  } = props;\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated\n  } = useMenuContext();\n  const listProps = useMenuList(rest, ref);\n  const positionerProps = useMenuPositioner(rootProps);\n  const styles = useMenuStyles();\n  return /* @__PURE__ */(0, import_jsx_runtime10.jsx)(import_system10.chakra.div, {\n    ...positionerProps,\n    __css: {\n      zIndex: (_b = props.zIndex) != null ? _b : (_a = styles.list) == null ? void 0 : _a.zIndex\n    },\n    children: /* @__PURE__ */(0, import_jsx_runtime10.jsx)(MenuTransition, {\n      variants: motionVariants,\n      initial: false,\n      animate: isOpen ? \"enter\" : \"exit\",\n      __css: {\n        outline: 0,\n        ...styles.list\n      },\n      ...motionProps,\n      className: (0, import_shared_utils9.cx)(\"chakra-menu__menu-list\", listProps.className),\n      ...listProps,\n      onUpdate: onTransitionEnd,\n      onAnimationComplete: (0, import_shared_utils9.callAll)(animated.onComplete, listProps.onAnimationComplete)\n    })\n  });\n});\nMenuList.displayName = \"MenuList\";\n\n// src/menu-option-group.tsx\nvar import_shared_utils10 = require(\"@chakra-ui/shared-utils\");\nvar import_jsx_runtime11 = require(\"react/jsx-runtime\");\nvar MenuOptionGroup = props => {\n  const {\n    className,\n    title,\n    ...rest\n  } = props;\n  const ownProps = useMenuOptionGroup(rest);\n  return /* @__PURE__ */(0, import_jsx_runtime11.jsx)(MenuGroup, {\n    title,\n    className: (0, import_shared_utils10.cx)(\"chakra-menu__option-group\", className),\n    ...ownProps\n  });\n};\nMenuOptionGroup.displayName = \"MenuOptionGroup\";\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Menu,\n  MenuButton,\n  MenuCommand,\n  MenuDescendantsProvider,\n  MenuDivider,\n  MenuGroup,\n  MenuIcon,\n  MenuItem,\n  MenuItemOption,\n  MenuList,\n  MenuOptionGroup,\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuDescendant,\n  useMenuDescendants,\n  useMenuDescendantsContext,\n  useMenuItem,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  useMenuPositioner,\n  useMenuState,\n  useMenuStyles\n});","map":{"version":3,"names":["src_exports","__export","Menu","MenuButton","MenuCommand","MenuDescendantsProvider","MenuDivider","MenuGroup","MenuIcon","MenuItem","MenuItemOption","MenuList","MenuOptionGroup","MenuProvider","useMenu","useMenuButton","useMenuContext","useMenuDescendant","useMenuDescendants","useMenuDescendantsContext","useMenuItem","useMenuList","useMenuOption","useMenuOptionGroup","useMenuPositioner","useMenuState","useMenuStyles","module","exports","__toCommonJS","import_react_context2","require","import_system","import_shared_utils2","import_react3","import_clickable","import_descendant","import_react_use_focus_effect","import_popper","import_react_use_disclosure","import_react_use_outside_click","import_react_use_animation_state","import_react_context","import_react_children_utils","import_react_use_controllable_state","import_react_use_update_effect","import_react_use_merge_refs","import_shared_utils","import_lazy_utils","import_react2","import_react","isPrintableCharacter","event","key","length","test","useShortcut","props","timeout","preventDefault","keys","setKeys","useState","timeoutRef","useRef","flush","current","clearTimeout","clearKeysAfterDelay","setTimeout","useEffect","onKeyDown","fn","keysCopy","pop","concat","stopPropagation","join","getNextItemFromSearch","items","searchString","itemToString","currentItem","foundItem","find","item","toLowerCase","startsWith","matchingItems","filter","nextIndex","includes","currentIndex","indexOf","createDescendantContext","createContext","strict","name","useIds","idProp","prefixes","reactId","useId","id","useMemo","map","prefix","getOwnerDocument","node","_a","ownerDocument","document","isActiveElement","element","doc","activeElement","closeOnSelect","closeOnBlur","initialFocusRef","autoSelect","isLazy","isOpen","isOpenProp","defaultIsOpen","onClose","onCloseProp","onOpen","onOpenProp","placement","lazyBehavior","direction","computePositionOnMount","popperProps","menuRef","buttonRef","descendants","focusMenu","useCallback","requestAnimationFrame","focus","preventScroll","focusFirstItem","id2","first","firstEnabled","setFocusedIndex","index","timeoutIds","add","focusLastItem","last","lastEnabled","onOpenInternal","onToggle","useDisclosure","useOutsideClick","enabled","ref","handler","contains","target","popper","usePopper","focusedIndex","useUpdateEffect","useFocusOnHide","focusRef","visible","shouldFocus","animationState","useAnimationState","buttonId","menuId","openAndFocusMenu","Set","ids","forEach","clear","openAndFocusFirstItem","openAndFocusLastItem","refocus","_b","hasFocusWithin","shouldRefocus","rafId","onTransitionEnd","unstable__animationState","forceUpdate","orientation","externalRef","menu","eventKey","keyMap","Enter","ArrowDown","ArrowUp","action","mergeRefs","referenceRef","dataAttr","onClick","callAllHandlers","isTargetMenuItem","isHTMLElement","getAttribute","Error","animated","createTypeaheadHandler","currentTarget","Tab","event2","Escape","next","nextEnabled","prev","prevEnabled","onTypeahead","character","nextItem","values","textContent","hasBeenOpened","shouldRenderChildren","lazyDisclosure","wasSelected","mode","isSelected","present","children","tabIndex","role","style","transformOrigin","getPopperProps","visibility","onMouseEnter","onMouseEnterProp","onMouseMove","onMouseMoveProp","onMouseLeave","onMouseLeaveProp","onClickProp","onFocus","onFocusProp","isDisabled","isFocusable","type","typeProp","htmlProps","menuCloseOnSelect","register","disabled","isFocused","trulyDisabled","cancelAnimationFrame","clickableProps","useClickable","isChecked","rest","ownProps","value","valueProp","defaultValue","onChange","onChangeProp","isRadio","fallback","setValue","useControllableState","selectedValue","Array","isArray","nextValue","validChildren","getValidChildren","clones","child","call","cloneElement","el","isElement","win","defaultView","window","HTMLElement","nodeType","Node","ELEMENT_NODE","import_jsx_runtime","MenuStylesProvider","errorMessage","styles","useMultiStyleConfig","omitThemingProps","useTheme","ctx","context","jsx","runIfFn","displayName","import_system2","import_shared_utils3","import_jsx_runtime2","StyledMenuButton","forwardRef","chakra","button","__css","display","appearance","alignItems","outline","as","As","buttonProps","Element","className","cx","span","pointerEvents","flex","minW","import_system3","import_jsx_runtime3","command","import_system4","import_shared_utils4","import_jsx_runtime4","hr","divider","import_system5","import_shared_utils5","import_jsx_runtime5","title","_className","jsxs","p","groupTitle","import_system6","import_shared_utils6","import_react4","import_jsx_runtime6","Children","only","clone","isValidElement","focusable","icon","import_system8","import_shared_utils7","import_system7","import_react5","import_jsx_runtime7","StyledMenuItem","btnType","buttonStyles","textDecoration","color","userSelect","width","textAlign","import_jsx_runtime8","iconSpacing","commandSpacing","menuitemProps","shouldWrap","_children","fontSize","marginEnd","marginStart","import_system9","import_shared_utils8","import_jsx_runtime9","CheckIcon","viewBox","height","fill","points","optionProps","opacity","import_shared_utils9","import_system10","import_framer_motion","import_jsx_runtime10","motionVariants","enter","scale","transition","duration","ease","exit","transitionEnd","easings","MenuTransition","motion","div","MenuList2","rootProps","motionProps","listProps","positionerProps","zIndex","list","variants","initial","animate","onUpdate","onAnimationComplete","callAll","onComplete","import_shared_utils10","import_jsx_runtime11"],"sources":["../src/index.ts","../src/menu.tsx","../src/use-menu.ts","../src/use-shortcut.ts","../src/get-next-item-from-search.ts","../src/menu-button.tsx","../src/menu-command.tsx","../src/menu-divider.tsx","../src/menu-group.tsx","../src/menu-icon.tsx","../src/menu-item.tsx","../src/styled-menu-item.tsx","../src/menu-item-option.tsx","../src/menu-list.tsx","../src/menu-option-group.tsx"],"sourcesContent":["export { Menu, useMenuStyles } from \"./menu\"\nexport type { MenuProps } from \"./menu\"\nexport { MenuButton } from \"./menu-button\"\nexport type { MenuButtonProps } from \"./menu-button\"\nexport { MenuCommand } from \"./menu-command\"\nexport type { MenuCommandProps } from \"./menu-command\"\nexport { MenuDivider } from \"./menu-divider\"\nexport type { MenuDividerProps } from \"./menu-divider\"\nexport { MenuGroup } from \"./menu-group\"\nexport type { MenuGroupProps } from \"./menu-group\"\nexport { MenuIcon } from \"./menu-icon\"\nexport { MenuItem } from \"./menu-item\"\nexport type { MenuItemProps } from \"./menu-item\"\nexport { MenuItemOption } from \"./menu-item-option\"\nexport type { MenuItemOptionProps } from \"./menu-item-option\"\nexport { MenuList } from \"./menu-list\"\nexport type { MenuListProps } from \"./menu-list\"\nexport { MenuOptionGroup } from \"./menu-option-group\"\nexport type { MenuOptionGroupProps } from \"./menu-option-group\"\nexport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuDescendant,\n  useMenuDescendants,\n  useMenuDescendantsContext,\n  useMenuItem,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  useMenuPositioner,\n  useMenuState,\n} from \"./use-menu\"\nexport type {\n  UseMenuButtonProps,\n  UseMenuItemProps,\n  UseMenuListProps,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  UseMenuOptionProps,\n  UseMenuProps,\n  UseMenuReturn,\n} from \"./use-menu\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport {\n  MenuDescendantsProvider,\n  MenuProvider,\n  useMenu,\n  UseMenuProps,\n} from \"./use-menu\"\n\nconst [MenuStylesProvider, useMenuStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `MenuStylesContext`,\n  errorMessage: `useMenuStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\" `,\n})\n\nexport { useMenuStyles }\n\ntype MaybeRenderProp<P> = React.ReactNode | ((props: P) => React.ReactNode)\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | undefined\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n *\n * @see Docs https://chakra-ui.com/docs/components/menu\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n  const { direction } = useTheme()\n  const { descendants, ...ctx } = useMenu({ ...ownProps, direction })\n  const context = useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuDescendantsProvider value={descendants}>\n      <MenuProvider value={context}>\n        <MenuStylesProvider value={styles}>\n          {runIfFn(children, { isOpen, onClose, forceUpdate })}\n        </MenuStylesProvider>\n      </MenuProvider>\n    </MenuDescendantsProvider>\n  )\n}\n\nMenu.displayName = \"Menu\"\n","import { useClickable } from \"@chakra-ui/clickable\"\nimport { createDescendantContext } from \"@chakra-ui/descendant\"\nimport { useFocusOnHide } from \"@chakra-ui/react-use-focus-effect\"\nimport { usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  useDisclosure,\n  UseDisclosureProps,\n} from \"@chakra-ui/react-use-disclosure\"\nimport { useOutsideClick } from \"@chakra-ui/react-use-outside-click\"\nimport { useAnimationState } from \"@chakra-ui/react-use-animation-state\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { dataAttr, callAllHandlers } from \"@chakra-ui/shared-utils\"\nimport { lazyDisclosure, LazyMode } from \"@chakra-ui/lazy-utils\"\n\nimport React, {\n  cloneElement,\n  useCallback,\n  useRef,\n  useState,\n  useId,\n  useMemo,\n  useEffect,\n} from \"react\"\nimport { useShortcut } from \"./use-shortcut\"\nimport { getNextItemFromSearch } from \"./get-next-item-from-search\"\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track descendants and their indices\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [\n  MenuDescendantsProvider,\n  useMenuDescendantsContext,\n  useMenuDescendants,\n  useMenuDescendant,\n] = createDescendantContext<HTMLElement>()\n\n/* -------------------------------------------------------------------------------------------------\n * Create context to track menu state and logic\n * -----------------------------------------------------------------------------------------------*/\n\nexport const [MenuProvider, useMenuContext] = createContext<\n  Omit<UseMenuReturn, \"descendants\">\n>({\n  strict: false,\n  name: \"MenuContext\",\n})\n\n/* -------------------------------------------------------------------------------------------------\n * useMenu hook\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuProps\n  extends Omit<UsePopperProps, \"enabled\">,\n    UseDisclosureProps {\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: React.RefObject<{ focus(): void }>\n  /**\n   * If `true`, the menu will close when a menu item is\n   * clicked\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n  /**\n   * If `true`, the menu will close when you click outside\n   * the menu list\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the first enabled menu item will receive focus and be selected\n   * when the menu opens.\n   *\n   * @default true\n   */\n  autoSelect?: boolean\n  /**\n   * Performance 🚀:\n   * If `true`, the MenuItem rendering will be deferred\n   * until the menu is open.\n   *\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of menu's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The menu's content is always unmounted when not open.\n   * - \"keepMounted\": The menu's content initially unmounted,\n   * but stays mounted when menu is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * If `rtl`, proper placement positions will be flipped i.e. 'top-right' will\n   * become 'top-left' and vice-verse\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /*\n   * If `true`, the menu will be positioned when it mounts\n   * (even if it's not open).\n   *\n   * Note 🚨: We don't recommend using this in a menu/popover intensive UI or page\n   * as it might affect scrolling performance.\n   *\n   * @default false\n   */\n  computePositionOnMount?: boolean\n}\n\nfunction useIds(idProp?: string, ...prefixes: string[]) {\n  const reactId = useId()\n  const id = idProp || reactId\n  return useMemo(() => {\n    return prefixes.map((prefix) => `${prefix}-${id}`)\n  }, [id, prefixes])\n}\n\nfunction getOwnerDocument(node?: Element | null): Document {\n  return node?.ownerDocument ?? document\n}\n\nfunction isActiveElement(element: HTMLElement) {\n  const doc = getOwnerDocument(element)\n  return doc.activeElement === (element as HTMLElement)\n}\n\n/**\n * React Hook to manage a menu\n *\n * It provides the logic and will be used with react context\n * to propagate its return value to all children\n */\nexport function useMenu(props: UseMenuProps = {}) {\n  const {\n    id,\n    closeOnSelect = true,\n    closeOnBlur = true,\n    initialFocusRef,\n    autoSelect = true,\n    isLazy,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    placement = \"bottom-start\",\n    lazyBehavior = \"unmount\",\n    direction,\n    computePositionOnMount = false,\n    ...popperProps\n  } = props\n  /**\n   * Prepare the reference to the menu and disclosure\n   */\n  const menuRef = useRef<HTMLDivElement>(null)\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  /**\n   * Context to register all menu item nodes\n   */\n  const descendants = useMenuDescendants()\n\n  const focusMenu = useCallback(() => {\n    requestAnimationFrame(() => {\n      menuRef.current?.focus({ preventScroll: false })\n    })\n  }, [])\n\n  const focusFirstItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) {\n        initialFocusRef.current?.focus()\n      } else {\n        const first = descendants.firstEnabled()\n        if (first) setFocusedIndex(first.index)\n      }\n    })\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const focusLastItem = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.lastEnabled()\n      if (last) setFocusedIndex(last.index)\n    })\n    timeoutIds.current.add(id)\n  }, [descendants])\n\n  const onOpenInternal = useCallback(() => {\n    onOpenProp?.()\n    if (autoSelect) {\n      focusFirstItem()\n    } else {\n      focusMenu()\n    }\n  }, [autoSelect, focusFirstItem, focusMenu, onOpenProp])\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onClose: onCloseProp,\n    onOpen: onOpenInternal,\n  })\n\n  useOutsideClick({\n    enabled: isOpen && closeOnBlur,\n    ref: menuRef,\n    handler: (event) => {\n      if (!buttonRef.current?.contains(event.target as HTMLElement)) {\n        onClose()\n      }\n    },\n  })\n\n  /**\n   * Add some popper.js for dynamic positioning\n   */\n  const popper: any = usePopper({\n    ...popperProps,\n    enabled: isOpen || computePositionOnMount,\n    placement,\n    direction,\n  })\n\n  const [focusedIndex, setFocusedIndex] = useState(-1)\n\n  /**\n   * Focus the button when we close the menu\n   */\n  useUpdateEffect(() => {\n    if (!isOpen) {\n      setFocusedIndex(-1)\n    }\n  }, [isOpen])\n\n  useFocusOnHide(menuRef, {\n    focusRef: buttonRef,\n    visible: isOpen,\n    shouldFocus: true,\n  })\n\n  const animationState = useAnimationState({ isOpen, ref: menuRef })\n\n  /**\n   * Generate unique ids for menu's list and button\n   */\n  const [buttonId, menuId] = useIds(id, `menu-button`, `menu-list`)\n\n  const openAndFocusMenu = useCallback(() => {\n    onOpen()\n    focusMenu()\n  }, [onOpen, focusMenu])\n\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  // clean up timeouts\n  useEffect(() => {\n    const ids = timeoutIds.current\n    return () => {\n      ids.forEach((id) => clearTimeout(id))\n      ids.clear()\n    }\n  }, [])\n\n  const openAndFocusFirstItem = useCallback(() => {\n    onOpen()\n    focusFirstItem()\n  }, [focusFirstItem, onOpen])\n\n  const openAndFocusLastItem = useCallback(() => {\n    onOpen()\n    focusLastItem()\n  }, [onOpen, focusLastItem])\n\n  const refocus = useCallback(() => {\n    const doc = getOwnerDocument(menuRef.current)\n    const hasFocusWithin = menuRef.current?.contains(doc.activeElement)\n    const shouldRefocus = isOpen && !hasFocusWithin\n\n    if (!shouldRefocus) return\n\n    const node = descendants.item(focusedIndex)?.node\n    node?.focus({ preventScroll: true })\n  }, [isOpen, focusedIndex, descendants])\n\n  /**\n   * Track the animation frame which is scheduled to focus\n   * a menu item, so it can be cancelled if another item\n   * is focused before the animation executes. This prevents\n   * infinite rerenders.\n   */\n  const rafId = useRef<number | null>(null)\n\n  return {\n    openAndFocusMenu,\n    openAndFocusFirstItem,\n    openAndFocusLastItem,\n    onTransitionEnd: refocus,\n    unstable__animationState: animationState,\n    descendants,\n    popper,\n    buttonId,\n    menuId,\n    forceUpdate: popper.forceUpdate,\n    orientation: \"vertical\",\n    isOpen,\n    onToggle,\n    onOpen,\n    onClose,\n    menuRef,\n    buttonRef,\n    focusedIndex,\n    closeOnSelect,\n    closeOnBlur,\n    autoSelect,\n    setFocusedIndex,\n    isLazy,\n    lazyBehavior,\n    initialFocusRef,\n    rafId,\n  }\n}\n\nexport interface UseMenuReturn extends ReturnType<typeof useMenu> {}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuButton hook\n * -----------------------------------------------------------------------------------------------*/\nexport interface UseMenuButtonProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu button.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuButton(\n  props: UseMenuButtonProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const menu = useMenuContext()\n\n  const { onToggle, popper, openAndFocusFirstItem, openAndFocusLastItem } = menu\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Enter: openAndFocusFirstItem,\n        ArrowDown: openAndFocusFirstItem,\n        ArrowUp: openAndFocusLastItem,\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n      }\n    },\n    [openAndFocusFirstItem, openAndFocusLastItem],\n  )\n\n  return {\n    ...props,\n    ref: mergeRefs(menu.buttonRef, externalRef, popper.referenceRef),\n    id: menu.buttonId,\n    \"data-active\": dataAttr(menu.isOpen),\n    \"aria-expanded\": menu.isOpen,\n    \"aria-haspopup\": \"menu\" as React.AriaAttributes[\"aria-haspopup\"],\n    \"aria-controls\": menu.menuId,\n    onClick: callAllHandlers(props.onClick, onToggle),\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\nfunction isTargetMenuItem(target: EventTarget | null) {\n  // this will catch `menuitem`, `menuitemradio`, `menuitemcheckbox`\n  return (\n    isHTMLElement(target) &&\n    !!target?.getAttribute(\"role\")?.startsWith(\"menuitem\")\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuList\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuListProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\"> {}\n\n/**\n * React Hook to manage a menu list.\n *\n * The assumption here is that the `useMenu` hook is used\n * in a component higher up the tree, and its return value\n * is passed as `context` to this hook.\n */\nexport function useMenuList(\n  props: UseMenuListProps = {},\n  ref: React.Ref<any> = null,\n): React.HTMLAttributes<HTMLElement> & React.RefAttributes<HTMLElement> {\n  const menu = useMenuContext()\n\n  if (!menu) {\n    throw new Error(\n      `useMenuContext: context is undefined. Seems you forgot to wrap component within <Menu>`,\n    )\n  }\n\n  const {\n    focusedIndex,\n    setFocusedIndex,\n    menuRef,\n    isOpen,\n    onClose,\n    menuId,\n    isLazy,\n    lazyBehavior,\n    unstable__animationState: animated,\n  } = menu\n\n  const descendants = useMenuDescendantsContext()\n\n  /**\n   * Hook that creates a keydown event handler that listens\n   * to printable keyboard character press\n   */\n  const createTypeaheadHandler = useShortcut({\n    preventDefault: (event) =>\n      event.key !== \" \" && isTargetMenuItem(event.target),\n  })\n\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      // ignore events bubbles from portal children\n      if (!event.currentTarget.contains(event.target as Element)) return\n\n      const eventKey = event.key\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        Tab: (event) => event.preventDefault(),\n        Escape: onClose,\n        ArrowDown: () => {\n          const next = descendants.nextEnabled(focusedIndex)\n          if (next) setFocusedIndex(next.index)\n        },\n        ArrowUp: () => {\n          const prev = descendants.prevEnabled(focusedIndex)\n          if (prev) setFocusedIndex(prev.index)\n        },\n      }\n\n      const fn = keyMap[eventKey]\n\n      if (fn) {\n        event.preventDefault()\n        fn(event)\n        return\n      }\n\n      /**\n       * Typeahead: Based on current character pressed,\n       * find the next item to be selected\n       */\n      const onTypeahead = createTypeaheadHandler((character) => {\n        const nextItem = getNextItemFromSearch(\n          descendants.values(),\n          character,\n          (item) => item?.node?.textContent ?? \"\",\n          descendants.item(focusedIndex),\n        )\n        if (nextItem) {\n          const index = descendants.indexOf(nextItem.node)\n          setFocusedIndex(index)\n        }\n      })\n\n      if (isTargetMenuItem(event.target)) {\n        onTypeahead(event)\n      }\n    },\n    [\n      descendants,\n      focusedIndex,\n      createTypeaheadHandler,\n      onClose,\n      setFocusedIndex,\n    ],\n  )\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const shouldRenderChildren = lazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: animated.present,\n  })\n\n  return {\n    ...props,\n    ref: mergeRefs(menuRef, ref),\n    children: shouldRenderChildren ? props.children : null,\n    tabIndex: -1,\n    role: \"menu\",\n    id: menuId,\n    style: {\n      ...props.style,\n      transformOrigin: \"var(--popper-transform-origin)\",\n    },\n    \"aria-orientation\": \"vertical\" as React.AriaAttributes[\"aria-orientation\"],\n    onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuPosition: Composes usePopper to position the menu\n * -----------------------------------------------------------------------------------------------*/\n\nexport function useMenuPositioner(props: any = {}) {\n  const { popper, isOpen } = useMenuContext()\n  return popper.getPopperProps({\n    ...props,\n    style: {\n      visibility: isOpen ? \"visible\" : \"hidden\",\n      ...props.style,\n    },\n  })\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuItem: Hook for each menu item within the menu list.\n   We also use it in `useMenuItemOption`\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuItemProps\n  extends Omit<React.HTMLAttributes<Element>, \"color\" | \"disabled\"> {\n  /**\n   * If `true`, the menuitem will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and the menuitem is disabled, it'll\n   * remain keyboard-focusable\n   */\n  isFocusable?: boolean\n  /**\n   * Overrides the parent menu's `closeOnSelect` prop.\n   */\n  closeOnSelect?: boolean\n  /**\n   * The type of the menuitem.\n   */\n  type?: React.ButtonHTMLAttributes<HTMLButtonElement>[\"type\"]\n}\n\nexport function useMenuItem(\n  props: UseMenuItemProps = {},\n  externalRef: React.Ref<any> = null,\n) {\n  const {\n    onMouseEnter: onMouseEnterProp,\n    onMouseMove: onMouseMoveProp,\n    onMouseLeave: onMouseLeaveProp,\n    onClick: onClickProp,\n    onFocus: onFocusProp,\n    isDisabled,\n    isFocusable,\n    closeOnSelect,\n    type: typeProp,\n    ...htmlProps\n  } = props\n\n  const menu = useMenuContext()\n\n  const {\n    setFocusedIndex,\n    focusedIndex,\n    closeOnSelect: menuCloseOnSelect,\n    onClose,\n    menuRef,\n    isOpen,\n    menuId,\n    rafId,\n  } = menu\n\n  const ref = useRef<HTMLDivElement>(null)\n  const id = `${menuId}-menuitem-${useId()}`\n\n  /**\n   * Register the menuitem's node into the domContext\n   */\n  const { index, register } = useMenuDescendant({\n    disabled: isDisabled && !isFocusable,\n  })\n\n  const onMouseEnter = useCallback(\n    (event: any) => {\n      onMouseEnterProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, index, isDisabled, onMouseEnterProp],\n  )\n\n  const onMouseMove = useCallback(\n    (event: any) => {\n      onMouseMoveProp?.(event)\n      if (ref.current && !isActiveElement(ref.current)) {\n        onMouseEnter(event)\n      }\n    },\n    [onMouseEnter, onMouseMoveProp],\n  )\n\n  const onMouseLeave = useCallback(\n    (event: any) => {\n      onMouseLeaveProp?.(event)\n      if (isDisabled) return\n      setFocusedIndex(-1)\n    },\n    [setFocusedIndex, isDisabled, onMouseLeaveProp],\n  )\n\n  const onClick = useCallback(\n    (event: React.MouseEvent) => {\n      onClickProp?.(event)\n      if (!isTargetMenuItem(event.currentTarget)) return\n      /**\n       * Close menu and parent menus, allowing the MenuItem\n       * to override its parent menu's `closeOnSelect` prop.\n       */\n      if (closeOnSelect ?? menuCloseOnSelect) {\n        onClose()\n      }\n    },\n    [onClose, onClickProp, menuCloseOnSelect, closeOnSelect],\n  )\n\n  const onFocus = useCallback(\n    (event: React.FocusEvent) => {\n      onFocusProp?.(event)\n      setFocusedIndex(index)\n    },\n    [setFocusedIndex, onFocusProp, index],\n  )\n\n  const isFocused = index === focusedIndex\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  useUpdateEffect(() => {\n    if (!isOpen) return\n    if (isFocused && !trulyDisabled && ref.current) {\n      // Cancel any pending animations\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n      rafId.current = requestAnimationFrame(() => {\n        ref.current?.focus({ preventScroll: true })\n        rafId.current = null\n      })\n    } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n      menuRef.current.focus({ preventScroll: true })\n    }\n\n    return () => {\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n  const clickableProps = useClickable({\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    ref: mergeRefs(register, ref, externalRef),\n    isDisabled,\n    isFocusable,\n  })\n\n  return {\n    ...htmlProps,\n    ...clickableProps,\n    type: typeProp ?? (clickableProps as any).type,\n    id,\n    role: \"menuitem\",\n    tabIndex: isFocused ? 0 : -1,\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOption: Composes useMenuItem to provide a selectable/checkable menu item\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionOptions {\n  value?: string\n  isChecked?: boolean\n  type?: \"radio\" | \"checkbox\"\n  children?: React.ReactNode\n}\n\nexport interface UseMenuOptionProps\n  extends Omit<UseMenuItemProps, \"type\">,\n    UseMenuOptionOptions {}\n\nexport function useMenuOption(\n  props: UseMenuOptionProps = {},\n  ref: React.Ref<any> = null,\n) {\n  const { type = \"radio\", isChecked, ...rest } = props\n  const ownProps = useMenuItem(rest, ref)\n  return {\n    ...ownProps,\n    role: `menuitem${type}`,\n    \"aria-checked\": isChecked as React.AriaAttributes[\"aria-checked\"],\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n * useMenuOptionGroup: Manages the state of multiple selectable menuitem or menu option\n * -----------------------------------------------------------------------------------------------*/\n\nexport interface UseMenuOptionGroupProps {\n  value?: string | string[]\n  defaultValue?: string | string[]\n  type?: \"radio\" | \"checkbox\"\n  onChange?: (value: string | string[]) => void\n  children?: React.ReactNode\n}\n\nexport function useMenuOptionGroup(props: UseMenuOptionGroupProps = {}) {\n  const {\n    children,\n    type = \"radio\",\n    value: valueProp,\n    defaultValue,\n    onChange: onChangeProp,\n    ...htmlProps\n  } = props\n\n  const isRadio = type === \"radio\"\n\n  const fallback = isRadio ? \"\" : []\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue ?? fallback,\n    value: valueProp,\n    onChange: onChangeProp,\n  })\n\n  const onChange = useCallback(\n    (selectedValue: string) => {\n      if (type === \"radio\" && typeof value === \"string\") {\n        setValue(selectedValue)\n      }\n\n      if (type === \"checkbox\" && Array.isArray(value)) {\n        const nextValue = value.includes(selectedValue)\n          ? value.filter((item) => item !== selectedValue)\n          : value.concat(selectedValue)\n\n        setValue(nextValue)\n      }\n    },\n    [value, setValue, type],\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const clones = validChildren.map((child) => {\n    /**\n     * We've added an internal `id` to each `MenuItemOption`,\n     * let's use that for type-checking.\n     *\n     * We can't rely on displayName or the element's type since\n     * they can be changed by the user.\n     */\n    if ((child.type as any).id !== \"MenuItemOption\") return child\n\n    const onClick = (event: MouseEvent) => {\n      onChange(child.props.value)\n      child.props.onClick?.(event)\n    }\n\n    const isChecked =\n      type === \"radio\"\n        ? child.props.value === value\n        : value.includes(child.props.value)\n\n    return cloneElement(child, {\n      type,\n      onClick,\n      isChecked,\n    })\n  })\n\n  return {\n    ...htmlProps,\n    children: clones,\n  }\n}\n\nexport function useMenuState() {\n  const { isOpen, onClose } = useMenuContext()\n  return { isOpen, onClose }\n}\n\nfunction isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) return false\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nfunction isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n","import { useEffect, useRef, useState } from \"react\"\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\nfunction isPrintableCharacter(event: React.KeyboardEvent) {\n  const { key } = event\n  return key.length === 1 || (key.length > 1 && /[^a-zA-Z0-9]/.test(key))\n}\n\nexport interface UseShortcutProps {\n  timeout?: number\n  preventDefault?: (event: React.KeyboardEvent) => boolean\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nexport function useShortcut(props: UseShortcutProps = {}) {\n  const { timeout = 300, preventDefault = () => true } = props\n\n  const [keys, setKeys] = useState<string[]>([])\n  const timeoutRef = useRef<any>()\n\n  const flush = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current)\n      timeoutRef.current = null\n    }\n  }\n\n  const clearKeysAfterDelay = () => {\n    flush()\n    timeoutRef.current = setTimeout(() => {\n      setKeys([])\n      timeoutRef.current = null\n    }, timeout)\n  }\n\n  useEffect(() => flush, [])\n\n  type Callback = (keysSoFar: string) => void\n\n  function onKeyDown(fn: Callback) {\n    return (event: React.KeyboardEvent) => {\n      if (event.key === \"Backspace\") {\n        const keysCopy = [...keys]\n        keysCopy.pop()\n        setKeys(keysCopy)\n        return\n      }\n\n      if (isPrintableCharacter(event)) {\n        const keysCopy = keys.concat(event.key)\n\n        if (preventDefault(event)) {\n          event.preventDefault()\n          event.stopPropagation()\n        }\n\n        setKeys(keysCopy)\n        fn(keysCopy.join(\"\"))\n\n        clearKeysAfterDelay()\n      }\n    }\n  }\n\n  return onKeyDown\n}\n","/**\n * Gets the next item based on a search string\n *\n * @param items array of items\n * @param searchString the search string\n * @param itemToString resolves an item to string\n * @param currentItem the current selected item\n */\nexport function getNextItemFromSearch<T>(\n  items: T[],\n  searchString: string,\n  itemToString: (item: T) => string,\n  currentItem: T,\n): T | undefined {\n  if (searchString == null) {\n    return currentItem\n  }\n\n  // If current item doesn't exist, find the item that matches the search string\n  if (!currentItem) {\n    const foundItem = items.find((item) =>\n      itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()),\n    )\n    return foundItem\n  }\n\n  // Filter items for ones that match the search string (case insensitive)\n  const matchingItems = items.filter((item) =>\n    itemToString(item).toLowerCase().startsWith(searchString.toLowerCase()),\n  )\n\n  // If there's a match, let's get the next item to select\n  if (matchingItems.length > 0) {\n    let nextIndex: number\n\n    // If the currentItem is in the available items, we move to the next available option\n    if (matchingItems.includes(currentItem)) {\n      const currentIndex = matchingItems.indexOf(currentItem)\n      nextIndex = currentIndex + 1\n      if (nextIndex === matchingItems.length) {\n        nextIndex = 0\n      }\n      return matchingItems[nextIndex]\n    }\n    // Else, we pick the first item in the available items\n    nextIndex = items.indexOf(matchingItems[0])\n    return items[nextIndex]\n  }\n\n  // a decent fallback to the currentItem\n  return currentItem\n}\n","import { forwardRef, HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuButton } from \"./use-menu\"\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useMenuStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n *\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span\n          __css={{ pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 }}\n        >\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nMenuButton.displayName = \"MenuButton\"\n","import { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useMenuStyles } from \"./menu\"\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useMenuStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nMenuCommand.displayName = \"MenuCommand\"\n","import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { useMenuStyles } from \"./menu\"\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useMenuStyles()\n  return (\n    <chakra.hr\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nMenuDivider.displayName = \"MenuDivider\"\n","import { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { useMenuStyles } from \"./menu\"\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">((props, ref) => {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useMenuStyles()\n\n  return (\n    <div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </div>\n  )\n})\n\nMenuGroup.displayName = \"MenuGroup\"\n","import { HTMLChakraProps, chakra } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children, cloneElement, isValidElement } from \"react\"\nimport { useMenuStyles } from \"./menu\"\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const styles = useMenuStyles()\n\n  const child = Children.only(children)\n\n  const clone = isValidElement(child)\n    ? cloneElement<any>(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span className={_className} {...rest} __css={styles.icon}>\n      {clone}\n    </chakra.span>\n  )\n}\n\nMenuIcon.displayName = \"MenuIcon\"\n","import { forwardRef, HTMLChakraProps, SystemProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { MenuCommand } from \"./menu-command\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { useMenuItem, UseMenuItemProps } from \"./use-menu\"\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\ninterface MenuItemOptions\n  extends Pick<\n    UseMenuItemProps,\n    \"isDisabled\" | \"isFocusable\" | \"closeOnSelect\"\n  > {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\ntype HTMLAttributes = React.HTMLAttributes<HTMLElement>\n\n/**\n * Use prop `isDisabled` instead\n */\ntype IsDisabledProps = \"disabled\" | \"aria-disabled\"\n\nexport interface MenuItemProps\n  extends Omit<HTMLChakraProps<\"button\">, IsDisabledProps>,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuitemProps = useMenuItem(rest, ref) as HTMLAttributes\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <span style={{ pointerEvents: \"none\", flex: 1 }}>{children}</span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuitemProps}\n      className={cx(\"chakra-menu__menuitem\", menuitemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nMenuItem.displayName = \"MenuItem\"\n","import { chakra, forwardRef, SystemStyleObject } from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\nimport { useMenuStyles } from \"./menu\"\nimport { StyledMenuItemProps } from \"./menu-item\"\n\nexport const StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useMenuStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as || type ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = useMemo(\n      () => ({\n        textDecoration: \"none\",\n        color: \"inherit\",\n        userSelect: \"none\",\n        display: \"flex\",\n        width: \"100%\",\n        alignItems: \"center\",\n        textAlign: \"start\",\n        flex: \"0 0 auto\",\n        outline: 0,\n        ...styles.item,\n      }),\n      [styles.item],\n    )\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n","import { HTMLAttributes, ReactElement } from \"react\"\nimport { forwardRef, PropsOf, SystemProps } from \"@chakra-ui/system\"\n\nimport { MenuItemProps } from \"./menu-item\"\nimport { useMenuOption, UseMenuOptionOptions } from \"./use-menu\"\nimport { StyledMenuItem } from \"./styled-menu-item\"\nimport { MenuIcon } from \"./menu-icon\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions | \"icon\"> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: ReactElement | null\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    // menu option item should always be `type=button`, so we omit `type`\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as HTMLAttributes<HTMLElement>\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        {icon !== null && (\n          <MenuIcon\n            fontSize=\"0.8em\"\n            marginEnd={iconSpacing}\n            opacity={props.isChecked ? 1 : 0}\n          >\n            {icon || <CheckIcon />}\n          </MenuIcon>\n        )}\n        <span style={{ flex: 1 }}>{optionProps.children}</span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nMenuItemOption.displayName = \"MenuItemOption\"\n","import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nimport { HTMLMotionProps, motion, Variants } from \"framer-motion\"\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuContext, useMenuList, useMenuPositioner } from \"./use-menu\"\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * Props for the root element that positions the menu.\n   */\n  rootProps?: HTMLChakraProps<\"div\">\n  /**\n   * The framer-motion props to animate the menu list\n   */\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst MenuTransition = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const { rootProps, motionProps, ...rest } = props\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated,\n  } = useMenuContext()\n\n  const listProps = useMenuList(rest, ref) as any\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useMenuStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <MenuTransition\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{ outline: 0, ...styles.list }}\n        {...motionProps}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        {...listProps}\n        onUpdate={onTransitionEnd}\n        onAnimationComplete={callAll(\n          animated.onComplete,\n          listProps.onAnimationComplete,\n        )}\n      />\n    </chakra.div>\n  )\n})\n\nMenuList.displayName = \"MenuList\"\n","import { cx } from \"@chakra-ui/shared-utils\"\n\nimport { type MenuGroupProps, MenuGroup } from \"./menu-group\"\nimport { UseMenuOptionGroupProps, useMenuOptionGroup } from \"./use-menu\"\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nMenuOptionGroup.displayName = \"MenuOptionGroup\"\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}